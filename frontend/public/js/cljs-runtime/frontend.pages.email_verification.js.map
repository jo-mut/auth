{"version":3,"sources":["frontend/pages/email_verification.cljs"],"mappings":";;;AAMA,qDAAA,rDAAMA,kHACHC,WAAWC,KAAKC,SAASC,MAAMC;AADlC,AAEE,IAAMC,iBAAS,AAACC,8CAAML,KAAKE,MAAMC;AAAjC,AACE,CAACF,yCAAAA,yDAAAA,lBAASG,sCAAAA;;AAEZ,GAAM,EAAK,sDAAA,tDAACE,gDAAKH,eAAU,SAAA,RAAGD;AAA9B,AACE,IAAAK,qBAAsB,CAAM,AAAWR,mBAAY,SAAA,RAAKG;AAAxD,AAAA,oBAAAK;AAAA,AAAA,iBAAAA,bAAWC;AAAX,AACE,OAAQA;;AADV;;;AADF;;;AAIF,uDAAA,vDAAMC,sHAAoBT,KAAKD,WAAWG,MAAMQ;AAAhD,AACE,GAAM,uEAAA,rEAAK,mDAAA,nDAACC,6CAAE,AAAOD,0BACV,qGAAA,rGAACC,6CAAE,AAACC,4CAAIZ,KAAKE,gBACb,SAAA,RAAGA;AAFd,AAGE,IAAAK,qBAAsB,CAAM,AAAWR,mBAAY,SAAA,RAAKG;AAAxD,AAAA,oBAAAK;AAAA,AAAA,iBAAAA,bAAWM;AAAX,AACE,OAAQA;;AADV;;;AAHF;;;AAMF,kDAAA,lDAAMC,4GAAed,KAAMe;AAA3B,AAEE,AAAiBA;;AACjB,mBAAA,ZAACC,wBAA2BhB;;AAE9B,2CAAA,3CAAOiB,8FAAQC;AAAf,AACE,IAAAC,aAAsB,yCAAA,mFAAA,GAAA,GAAA,GAAA,GAAA,GAAA,3IAACE;WAAvB,AAAAT,4CAAAO,WAAA,IAAA,lEAAOnB;eAAP,AAAAY,4CAAAO,WAAA,IAAA,tEAAYlB;IACNF,aAAiB,uCAAA,vCAACuB;AADxB,AAAA,0FAAA,mDAAA,2CAAA,gEAAA,sJAAA,mFAAA,2GAAA,2CAAA,2DAAA,2CAAA,0DAAA,IAAA,gDAAA,cAAA,2DAAA,2CAAA,0DAAA,IAAA,gDAAA,YAAA,gEAAA,2CAAA,6DAAA,YAAA,gEAAA,0IAAA,mFAAA,iDAAA,2CAAA,gEAAA,wJAAA,4BAAA,mFAAA,8CAAA,2CAAA,gEAAA,4JAAA,oDAAA,mFAAA,sDAAA,2CAAA,+DAAA,WAAAF,pgEAIO,AAAAG;AAJP,AAqBmB,4DAAAH,rDAACN,gDAAcd;GArBlC,gEAAA,oBAAA,mFAAA,mDAAA,2CAAA,gEAAA,+BAwBM,AAACwB,oDACA,WAAKtB,MAAMuB;AAAX,AAAA,yHAAA,2CAAA,0DAAA,pIACGC,8HACcxB,yDACA,WAAKQ;AAAL,AACE,QAAM,AAAWX,mBAAYG,SAAMQ;GAJtD,iEAAA,IAAA,oEAMiB,WAAKA;AAAL,AACE,OAACD,qDAAmBV,WAAWC,KAAKE,MAAM,AAAA,AAAIQ;GAPjE,qDAAA,OAAA,4DAAA,NASiBe,qEACC,WAAKf;AAAL,AACE,OAACZ,mDAAiBC,WAAWC,KAAKC,SAASC,MAAM,AAAA,AAAIQ;GAXzE,gEAAA;iBAzBP,mFAAA,8GAAA,2CAAA,gEAAA,gXAAA,iEAAA,2CAAA,uDAAA,aAAA,4DAAA,2CAAA,uDAAA,aAAA,qDAAA,iBAAA,3kCAuCOV,gJACE,AAAAuB;;AAUX,yCAAA,zCAAMI,0FAAMT;AAAZ,AAAA,0FAAA,iDACOD,yCAAOC","names":["frontend.pages.email-verification/handle-on-change","input-refs","code","set-code","index","value","new-code","cljs.core.assoc","cljs.core.not_EQ_","temp__5804__auto__","next-input","frontend.pages.email-verification/handle-on-key-down","e","cljs.core._EQ_","cljs.core.nth","prev-input","frontend.pages.email-verification/handle-submit","event","js/console.log","frontend.pages.email-verification/f-view","props","vec__11983","p1__11982#","js/module$node_modules$react$index.useState","js/module$node_modules$react$index.useRef","module$node_modules$framer_motion$dist$cjs$index/motion","cljs.core.map_indexed","digit","frontend.components.input/view","frontend.pages.email-verification/view"],"sourcesContent":["(ns frontend.pages.email-verification\n  (:require\n   [\"react\" :as react]\n   [\"framer-motion\" :refer [motion]]\n   [frontend.components.input :as input]))\n\n(defn handle-on-change\n  [input-refs code set-code index value]\n  (let [new-code (assoc code index value)]\n    (set-code new-code))\n  ;; TODO: handle pasted code\n  (when (and (not= value \"\") (< index 5))\n    (when-let [next-input (aget (.-current input-refs) (inc index))]\n      (.focus next-input))))\n\n(defn handle-on-key-down [code input-refs index e]\n  (when (and (= (.-key e) \"Backspace\")\n             (= (nth code index) \"\")\n             (> index 0))\n    (when-let [prev-input (aget (.-current input-refs) (dec index))]\n      (.focus prev-input))))\n\n(defn handle-submit [code  event]\n  ;; TODO: auto submit once the input if filled\n  (.preventDefault event)\n  (js/console.log \"submited \" code))\n\n(defn- f-view [props]\n  (let [[code set-code] (react/useState [\"\" \"\" \"\" \"\" \"\" \"\"])\n        input-refs       (react/useRef [])]\n    [:div {:className \"max-w-md w-full bg-gray-800 bg-opacity-50 backdrop-filter backdrop-blur-xl \n                         rounded-2xl shadow-xl overflow-hidden\"}\n     [:> motion.div\n      {:initial    {:opacity 0\n                    :y      -50}\n       :animate    {:opacity 1\n                    :y       0}\n       :transition {:duration 0.5}\n       :className  \"bg-gray-800 bg-opacity-50 backdrop-filter background-blur-xl \n                      rounded-2xl shadow-2xl p-8 w-full max-w-md\"}\n      [:h2 {:className \"text-3xl font-bold mb-6 text-center bg-gradient-to-r from-yellow-400 to-emerald-500 \n                          text-transparent bg-clip-text\"}\n       \"Verify Your Email\"]\n\n      [:p {:className \"text-center text-gray-300 mb-6 text-center bg-gradient-to-r from-yellow-400 to-emerald-500 \n                       text-transparent bg-clip-text\"}\n       \"Enter the 6 digit code sent to your email\"]\n\n      [:form \n       {:on-submit  #(handle-submit code %)\n        :className \"space-y-6\"}\n       [:div {:className \"flex justify-between\"}\n        (map-indexed\n         (fn [index digit]\n           [input/view\n            {:key         index\n             :ref         (fn [e]\n                            (aset (.-current input-refs) index e))\n             :max-length  6\n             :on-key-down (fn [e]\n                            (handle-on-key-down input-refs code index (-> e .-target .-value)))\n             :type        \"text\"\n             :value       digit\n             :on-change    (fn [e]\n                             (handle-on-change input-refs code set-code index (-> e .-target .-value)))\n             :class-name   \"w-12 h-12 text-center justify-center text-2xl font-bold bg-gray-700 text-white\n                           border-2 border-gray-500 rounded-lg focus:border-green-500 focus:outline-none\"}])\n         code)]\n       [:> motion.button\n        {:className \"mt-5 w-full py-3 px-4 bg-gradient-to-r from-yellow-500 to-emerald-600 text-white \n                           font-bold rounded-lg shadow-lg hover:from-orange-600 hover:to-emerald-700 focus:outline-none\n                           focus:ring-2 focus:ring-orange-500 focus:fing-offset-2 focus:ring-offset-gray-900 transition \n                           duration-200\"\n         :whileHover {:scale 1.02}\n         :whileTop   {:scale 0.98}\n         :type       \"submit\"}\n        \"Verify email\"]]]]))\n\n(defn view [props]\n  [:f> f-view props])"]}