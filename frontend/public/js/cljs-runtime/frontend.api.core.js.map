{"version":3,"sources":["frontend/api/core.cljs"],"mappings":";AAGA,wBAAA,xBAAKA;AAEL,4BAAA,5BAAMC,gEAASC,KAAKC,MAAMC;AAA1B,AACE,uBAAA,mFAAA,qFAAA,/LAACC;;OACG,iDAAA,YAAA,mBAAA,kBAAA,8BAAA,hIAACC,MAAS,uBAAA,tBAAKN,uJAIS,eAAA,fAACO,0BAAiCJ,mBACAC,kBACAF,7NAC1D,6OACC,WAAKM,xPAKN,PAOA;AAZC,AACE,AAACC,YAAeD;;AAChB,oBAAI,AAAMA;AACR,OAAOA;;AACP,MAAO,MAAA,NAACE;;SAEZ,WAAKC;AAAL,AACE,AAAWA;;AACX,WAAA,2CAAA,+DAAA,0EAAA,KAAA,6DAAA,7PAAMC,uGAAuB,AAAQD;AAArC,AAGE,8BAAA,mFAAA,1GAACN,4LAAiCO;UAEtC,WAAKC;AAAL,AACE,uBAAA,mFAAA,1GAACR,gMAAmCQ;;AACpC,MAAO,MAAA,NAACH","names":["frontend.api.core/url","frontend.api.core/sign-up","name","email","password","re-frame.core/dispatch","js/fetch","js/JSON.stringify","response","js/console.log","js/Error","data","auth","error"],"sourcesContent":["(ns frontend.api.core\n  (:require [re-frame.core :as rf]))\n\n(def url \"http://localhost:3000/api/auth\")\n\n(defn sign-up [name email password]\n  (rf/dispatch [:update-loading-state true])\n  (-> (js/fetch (str url \"/signup\")\n                #js {:method  \"POST\"\n                     :headers #js {\"Content-Type\" \"application/json\"\n                                   \"Accept\"       \"application/json\"}\n                     :body    (js/JSON.stringify #js {:email    email\n                                                      :password password\n                                                      :name     name})})\n      (.then\n       (fn [response]\n         (js/console.log response)\n         (if (.-ok response)\n           (.json response)\n           (throw (js/Error \"Failed to fetch data\")))))\n      (.then\n       (fn [data]\n         (.-message data)\n         (let [auth  {:user           (.-user data)\n                      :authenticated? true\n                      :loading?       false}]\n           (rf/dispatch [:save-auth-response auth]))))\n      (.catch\n       (fn [error]\n         (rf/dispatch [:authentication-error error])\n         (throw (js/Error \"Failed to fetch data\"))))))"]}