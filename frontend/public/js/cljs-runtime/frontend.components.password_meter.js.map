{"version":3,"sources":["frontend/components/password_meter.cljs"],"mappings":";;;AAMA,8CAAA,9CAAMA,oGAAUC;AAAhB,AAAA,0FAAA,2CAAA,uDAAA,wBAAA,8FAAA,2CAAA,uDAAA,4BAAA,+FAAA,2CAAA,uDAAA,4BAAA,+FAAA,2CAAA,uDAAA,oBAAA,4FAAA,2CAAA,uDAAA,6BAAA,tzBAEW,8BAAA,7BAAI,AAACC,gBAAMD,2MAEX,kBAAA,lBAACE,0BAAiBF,mMAElB,kBAAA,lBAACE,0BAAiBF,2LAElB,kBAAA,lBAACE,uBAAcF,oMAEf,kBAAA,lBAACE,iCAAwBF;;AAEpC,oDAAA,pDAAMG,gHAAgBH;AAAtB,AACE,IAAMK,oBAAkB,AAACJ,gBAAMD;IACzBM,WAAS,gDAAA,hDAACC;AADhB,AAEE,GAAM,qBAAA,pBAAGF;AAAT,AACE,AAACG,mDAAMF,SAASG;;AADlB;;AAGA,oBAAM,iBAAAC,oBAAK,kBAAA,lBAACR,0BAAiBF;AAAvB,AAAA,oBAAAU;AAAiC,yBAAA,lBAACR,0BAAiBF;;AAAnDU;;;AAAN,AACE,AAACF,mDAAMF,SAASG;;AADlB;;AAGA,oBAAM,kBAAA,lBAACP,uBAAcF;AAArB,AACE,AAACQ,mDAAMF,SAASG;;AADlB;;AAGA,oBAAM,kBAAA,lBAACP,iCAAwBF;AAA/B,AACE,AAACQ,mDAAMF,SAASG;;AADlB;;AAXF,OAAAL,gBAaGE;;AAEL,oDAAA,pDAAMK,gHAAgBX;AAAtB,AACE,GACE,yGAAA,zGAACY,6CAAE,AAACT,kDAAeH;AADrB;AAAA,GAIE,yGAAA,zGAACY,6CAAE,AAACT,kDAAeH;AAJrB;AAAA,GAOE,yGAAA,zGAACY,6CAAE,AAACT,kDAAeH;AAPrB;AAAA,GAUE,yGAAA,zGAACY,6CAAE,AAACT,kDAAeH;AAVrB;AAAA;;;;;AADF;;AAeA,+CAAA,/CAAMa,sGAAWP;AAAjB,AACE,GACE,sDAAA,tDAACM,6CAAEN;AADL;;AAAA,GAEE,sDAAA,tDAACM,6CAAEN;AAFL;;AAAA,GAGE,sDAAA,tDAACM,6CAAEN;AAHL;;AAAA,GAIE,sDAAA,tDAACM,6CAAEN;AAJL;;AAAA,AAAA;;;;;;;AAMF,0CAAA,1CAAMQ,4FAAMd;AAAZ,AAAA,0FAAA,mDAAA,2CAAA,gEAAA,eAAA,mFAAA,mDAAA,2CAAA,gEAAA,iDAAA,mFAAA,qDAAA,2CAAA,gEAAA,iCAAA,4BAAA,mFAAA,qDAAA,2CAAA,gEAAA,4GAAA,mFAAA,mDAAA,2CAAA,gEAAA,7TAMK,AAACW,kDAAeX,oSAEjB,AAACe,4CACA,WAAKC;AAAL,AACE,YAAA,ZAACC,qBAAyB,AAACd,kDAAeH;;AAC1C,IAAMM,WAAU,AAACH,kDAAeH;IAC1BkB,QAAQ,4EAAA,1EAAI,CAAGF,OAAKV,WACV,AAACO,6CAAUP;AAF3B,AAAA,0FAAA,mDAAA,2CAAA,yDAAA,LAIoBU,qEACA,CAAA,yDAA8DE;+DAhBzF,mFAAA,mDAAA,2CAAA,gEAAA,7SAiBK,8CAAA,9CAACC,sUAEF,AAACJ,4CACA,WAAKC;AAAL,AAAA,0FAAA,mDAAA,2CAAA,+IAAA,gEAAA,yzBAAA,mFAAA,qDAAA,2CAAA,voCACc,AAAA,qFAAQA,0GAEnB,0GAAA,mFAAA,4GAAA,2CAAA,gEAAA,8CAAA,mFAAA,wGAAA,2CAAA,gEAAA,ttBAAI,AAAA,iFAAMA,yIACJI,wVACAC,ocACa,0GAAA,kBAAA,1GAAI,AAAA,iFAAML,kDAC5B,AAAA,qFAAQA;GACZ,AAACjB,4CAASC","names":["frontend.components.password-meter/creteria","password","cljs.core/count","cljs.core/re-find","frontend.components.password-meter/strength-meter","cljs.core/deref","password-strength","strength","reagent.core.atom","cljs.core.swap_BANG_","cljs.core/inc","and__5000__auto__","frontend.components.password-meter/strength-title","cljs.core._EQ_","frontend.components.password-meter/get-color","frontend.components.password-meter/view","cljs.core.map","item","js/console.log","color","cljs.core.range","js/module$node_modules$lucide_react$dist$cjs$lucide_react.Check","js/module$node_modules$lucide_react$dist$cjs$lucide_react.X"],"sourcesContent":["(ns frontend.components.password-meter\n  (:require\n   [reagent.core :as r]\n   [\"react\" :as react]\n   [\"lucide-react\" :refer [Check X]]))\n\n(defn creteria [password]\n  [{:label \"At least 6 characters\"\n    :met   (>= (count password) 6)}\n   {:label \"Contains uppercase letter\"\n    :met   (re-find #\"[A-Z]\" password)}\n   {:label \"Contains lowercase letter\"\n    :met   (re-find #\"[a-z]\" password)}\n   {:label \"Contains a number\"\n    :met   (re-find #\"\\d\" password)}\n   {:label \"Contains special character\"\n    :met   (re-find #\"[^A-Za-z0-9]\" password)}])\n\n(defn strength-meter [password]\n  (let [password-strength (count password)\n        strength (r/atom 0)]\n    (when (> password-strength 6)\n      (swap! strength inc))\n\n    (when (and (re-find #\"[a-z]\" password) (re-find #\"[A-Z]\" password))\n      (swap! strength inc))\n\n    (when (re-find #\"\\d\" password)\n      (swap! strength inc))\n\n    (when (re-find #\"[^A-Za-z0-9]\" password)\n      (swap! strength inc))\n    @strength))\n\n(defn strength-title [password]\n  (cond\n    (= (strength-meter password) 0)\n    \"Very weak\"\n\n    (= (strength-meter password) 1)\n    \"Weak\"\n\n    (= (strength-meter password) 2)\n    \"Fair\"\n\n    (= (strength-meter password) 3)\n    \"Good\")\n  \"Very weak\")\n\n(defn get-color [strength]\n  (cond\n    (= strength 0) \"bg-red-500\"\n    (= strength 1) \"bg-red-400\"\n    (= strength 2) \"bg-yellow-500\"\n    (= strength 3) \"bg-yellow-400\"\n    :else \"bg-green-500\")) ;; Default for strength 4+\n(defn view [password]\n  [:div {:className \"mt-2\"}\n   [:div {:className \"flex justify-between items-center mb-1\"}\n    [:span {:className \"text-xs text-gray-400 \"}\n     \"Password strength\"]\n    [:span {:className \"text-xs text-gray-400\"}\n     (strength-title password)]]\n   [:div {:className \"flex space-x-1\"}\n    (map\n     (fn [item]\n       (js/console.log \"item: \"  (strength-meter password))\n       (let [strength  (strength-meter password)\n             color   (if (< item strength)\n                       (get-color strength)\n                       \"bg-gray-600\")]\n         [:div {:key       item\n                :className (str \"h-1 w-1/4 rounded-full transition-colors duration-300 \" color)}]))\n     (range 4))]\n   [:div {:className \"mt-2 space-y-1\"}\n    (map\n     (fn [item]\n       [:div {:key (:label item)\n              :className \"flex items-center text-xs\"}\n        (if (:met item)\n          [:> Check {:className \"size-4 text-orange-500 mr-2\"}]\n          [:> X {:className \"size-4 text-gray-500 mr-2\"}])\n        [:span {:className (if (:met item) \"text-orange-500\" \"text-gray-400\")}\n         (:label item)]])\n     (creteria password))]])"]}