{"version":3,"sources":["frontend/events.cljs"],"mappings":";AAGA,yBAAA,2CAAA,qDAAA,2CAAA,qDAAA,KAAA,0EAAA,MAAA,uDAAA,KAAA,6DAAA,MAAA,uEAAA,pfAAKA;AAML,yDAAA,zDAACC,6HAEA;AAAA,AAAA,kDAAA,gDACOD;;AAER,yDAAA,zDAACC,2IAEA,WAAAC,SAAAC;AAAA,AAAA,IAAAC,aAAAF;IAAAE,iBAAA,AAAAC,4BAAAD;SAAA,AAAAE,4CAAAF,eAAA,hEAAaK;IAAbF,aAAAJ;QAAA,AAAAK,4CAAAD,WAAA,IAAA,/DAAmBG;kBAAnB,AAAAF,4CAAAD,WAAA,IAAA,zEAAqBI;AAArB,AAAA,kDAAA,yGACWF,nBACA,sBAAA,mFAAA,qDAAA,9JAACG,2NAAuB,AAAA,mFAAOD,jUAC/B,+UAAA,mFAAA,qDAAA,vdAACC,4hBAA2B,AAAA,2FAAWD,1oBACvC,wpBAAA,mFAAA,qDAAA,hyBAACC,k3BAAiC,AAAA,wGAAiBD;;AAE/D,yDAAA,zDAACV,+IAEA,WAAAY,SAAAC;AAAA,AAAA,IAAAC,aAAAF;IAAAE,iBAAA,AAAAV,4BAAAU;SAAA,AAAAT,4CAAAS,eAAA,hEAAaN;IAAbO,aAAAF;QAAA,AAAAN,4CAAAQ,WAAA,IAAA,/DAAmBN;YAAnB,AAAAF,4CAAAQ,WAAA,IAAA,nEAAqBC;AAArB,AAAA,kDAAA,gDACO,sBAAA,mFAAA,qDAAA,9JAACL,mBAASH,0MAAkBQ;;AAEpC,yDAAA,zDAAChB,8IAEA,WAAAiB,SAAAC;AAAA,AAAA,IAAAC,aAAAF;IAAAE,iBAAA,AAAAf,4BAAAe;SAAA,AAAAd,4CAAAc,eAAA,hEAAaX;IAAbY,aAAAF;QAAA,AAAAX,4CAAAa,WAAA,IAAA,/DAAmBX;qBAAnB,AAAAF,4CAAAa,WAAA,IAAA,5EAAqBC;AAArB,AAAA,kDAAA,gDACO,sBAAA,mFAAA,qDAAA,9JAACV,mBAASH,gNAAqBa","names":["frontend.events/app-db","re_frame.core.reg_event_fx","p__15286","p__15287","map__15288","cljs.core/--destructure-map","cljs.core.get","vec__15289","cljs.core.nth","db","_","auth-object","cljs.core/assoc-in","p__15292","p__15293","map__15294","vec__15295","error","p__15298","p__15299","map__15300","vec__15301","loading?"],"sourcesContent":["(ns frontend.events\n  (:require [re-frame.core :as rf]))\n\n(def app-db {:auth {:user            nil\n                    :authenticated?  false\n                    :error           nil\n                    :loading?        false\n                    :checkingAuth?   true}})\n\n(rf/reg-event-fx\n :init-app-db\n (fn []\n   {:db app-db}))\n\n(rf/reg-event-fx\n :save-auth-response\n (fn [{:keys [db]} [_ auth-object]]\n   {:db (-> db\n            (assoc-in [:auth :user] (:user auth-object))\n            (assoc-in [:auth :loading?] (:loading? auth-object))\n            (assoc-in [:auth :authenticated?] (:authenticated? auth-object)))}))\n\n(rf/reg-event-fx\n :authentication-error\n (fn [{:keys [db]} [_ error]]\n   {:db (assoc-in db [:auth :error] error)}))\n\n(rf/reg-event-fx\n :update-loading-state\n (fn [{:keys [db]} [_ loading?]]\n   {:db (assoc-in db [:auth :loading?] loading?)}))"]}