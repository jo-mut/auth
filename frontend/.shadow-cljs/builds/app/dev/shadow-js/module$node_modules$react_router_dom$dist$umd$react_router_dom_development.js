["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/react-router-dom/dist/umd/react-router-dom.development.js"],"~:js","shadow$provide.module$node_modules$react_router_dom$dist$umd$react_router_dom_development = function(global, require, module, exports) {\n  (function(global, factory) {\n    \"object\" === typeof exports && \"undefined\" !== typeof module ? factory(exports, require(\"module$node_modules$react$index\"), require(\"module$node_modules$react_dom$index\"), require(\"module$node_modules$react_router$dist$main\"), require(\"module$node_modules$$remix_run$router$dist$router_cjs\")) : \"function\" === typeof define && define.amd ? define([\"exports\", \"react\", \"react-dom\", \"react-router\", \"@remix-run/router\"], factory) : (global = \"undefined\" !== typeof globalThis ? globalThis : global || \n    self, factory(global.ReactRouterDOM = {}, global.React, global.ReactDOM, global.ReactRouter, global.RemixRouter));\n  })(this, function(exports, React, ReactDOM, reactRouter, router$jscomp$0) {\n    function _interopNamespace(e) {\n      if (e && e.__esModule) {\n        return e;\n      }\n      var n = Object.create(null);\n      e && Object.keys(e).forEach(function(k) {\n        if (\"default\" !== k) {\n          var d = Object.getOwnPropertyDescriptor(e, k);\n          Object.defineProperty(n, k, d.get ? d : {enumerable:!0, get:function() {\n            return e[k];\n          }});\n        }\n      });\n      n[\"default\"] = e;\n      return Object.freeze(n);\n    }\n    function _extends() {\n      _extends = Object.assign ? Object.assign.bind() : function(target) {\n        for (var i = 1; i < arguments.length; i++) {\n          var source = arguments[i], key;\n          for (key in source) {\n            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);\n          }\n        }\n        return target;\n      };\n      return _extends.apply(this, arguments);\n    }\n    function _objectWithoutPropertiesLoose(source, excluded) {\n      if (null == source) {\n        return {};\n      }\n      var target = {}, sourceKeys = Object.keys(source), i;\n      for (i = 0; i < sourceKeys.length; i++) {\n        var key = sourceKeys[i];\n        0 <= excluded.indexOf(key) || (target[key] = source[key]);\n      }\n      return target;\n    }\n    function isHtmlElement(object) {\n      return null != object && \"string\" === typeof object.tagName;\n    }\n    function createSearchParams(init) {\n      void 0 === init && (init = \"\");\n      return new URLSearchParams(\"string\" === typeof init || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo, key) => {\n        let value = init[key];\n        return memo.concat(Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]]);\n      }, []));\n    }\n    function getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n      let searchParams = createSearchParams(locationSearch);\n      defaultSearchParams && defaultSearchParams.forEach((_, key) => {\n        searchParams.has(key) || defaultSearchParams.getAll(key).forEach(value => {\n          searchParams.append(key, value);\n        });\n      });\n      return searchParams;\n    }\n    function getFormEncType(encType) {\n      return null == encType || supportedFormEncTypes.has(encType) ? encType : (router$jscomp$0.UNSAFE_warning(!1, '\"' + encType + '\" is not a valid `encType` for `\\x3cForm\\x3e`/`\\x3cfetcher.Form\\x3e` and will default to \"application/x-www-form-urlencoded\"'), null);\n    }\n    function parseHydrationData() {\n      var _window, state = null == (_window = window) ? void 0 : _window.__staticRouterHydrationData;\n      if (state && state.errors) {\n        _window = _extends;\n        var JSCompiler_temp_const = state;\n        if (state = state.errors) {\n          var entries = Object.entries(state);\n          state = {};\n          for (let [key, val] of entries) {\n            if (val && \"RouteErrorResponse\" === val.__type) {\n              state[key] = new router$jscomp$0.UNSAFE_ErrorResponseImpl(val.status, val.statusText, val.data, !0 === val.internal);\n            } else if (val && \"Error\" === val.__type) {\n              if (val.__subType && (entries = window[val.__subType], \"function\" === typeof entries)) {\n                try {\n                  var JSCompiler_inline_result = new entries(val.message);\n                  JSCompiler_inline_result.stack = \"\";\n                  state[key] = JSCompiler_inline_result;\n                } catch (e) {\n                }\n              }\n              null == state[key] && (entries = Error(val.message), entries.stack = \"\", state[key] = entries);\n            } else {\n              state[key] = val;\n            }\n          }\n          JSCompiler_inline_result = state;\n        } else {\n          JSCompiler_inline_result = null;\n        }\n        state = _window({}, JSCompiler_temp_const, {errors:JSCompiler_inline_result});\n      }\n      return state;\n    }\n    function flushSyncSafe(cb) {\n      flushSyncImpl ? flushSyncImpl(cb) : cb();\n    }\n    function HistoryRouter(_ref6) {\n      let {basename, children, future, history} = _ref6, [state, setStateImpl] = React__namespace.useState({action:history.action, location:history.location}), {v7_startTransition} = future || {}, setState = React__namespace.useCallback(newState => {\n        v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n      }, [setStateImpl, v7_startTransition]);\n      React__namespace.useLayoutEffect(() => history.listen(setState), [history, setState]);\n      React__namespace.useEffect(() => reactRouter.UNSAFE_logV6DeprecationWarnings(future), [future]);\n      return React__namespace.createElement(reactRouter.Router, {basename, children, location:state.location, navigationType:state.action, navigator:history, future});\n    }\n    function ScrollRestoration(_ref10) {\n      let {getKey, storageKey} = _ref10;\n      useScrollRestoration({getKey, storageKey});\n      return null;\n    }\n    function getDataRouterConsoleError(hookName) {\n      return hookName + \" must be used within a data router.  See https://reactrouter.com/v6/routers/picking-a-router.\";\n    }\n    function useDataRouterContext(hookName) {\n      let ctx = React__namespace.useContext(reactRouter.UNSAFE_DataRouterContext);\n      ctx || router$jscomp$0.UNSAFE_invariant(!1, getDataRouterConsoleError(hookName));\n      return ctx;\n    }\n    function useDataRouterState(hookName) {\n      let state = React__namespace.useContext(reactRouter.UNSAFE_DataRouterStateContext);\n      state || router$jscomp$0.UNSAFE_invariant(!1, getDataRouterConsoleError(hookName));\n      return state;\n    }\n    function useLinkClickHandler(to, _temp) {\n      let {target, replace:replaceProp, state, preventScrollReset, relative, viewTransition} = void 0 === _temp ? {} : _temp, navigate = reactRouter.useNavigate(), location = reactRouter.useLocation(), path = reactRouter.useResolvedPath(to, {relative});\n      return React__namespace.useCallback(event => {\n        0 !== event.button || target && \"_self\" !== target || event.metaKey || event.altKey || event.ctrlKey || event.shiftKey || (event.preventDefault(), event = void 0 !== replaceProp ? replaceProp : reactRouter.createPath(location) === reactRouter.createPath(path), navigate(to, {replace:event, state, preventScrollReset, relative, viewTransition}));\n      }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative, viewTransition]);\n    }\n    function useSubmit() {\n      let {router} = useDataRouterContext(DataRouterHook.UseSubmit), {basename} = React__namespace.useContext(reactRouter.UNSAFE_NavigationContext), currentRouteId = reactRouter.UNSAFE_useRouteId();\n      return React__namespace.useCallback(function(target, options) {\n        void 0 === options && (options = {});\n        if (\"undefined\" === typeof document) {\n          throw Error(\"You are calling submit during the server render. Try calling submit within a `useEffect` or callback instead.\");\n        }\n        var method;\n        let action, encType;\n        if (isHtmlElement(target) && \"form\" === target.tagName.toLowerCase()) {\n          action = (method = target.getAttribute(\"action\")) ? router$jscomp$0.stripBasename(method, basename) : null;\n          method = target.getAttribute(\"method\") || \"get\";\n          encType = getFormEncType(target.getAttribute(\"enctype\")) || \"application/x-www-form-urlencoded\";\n          var formData = new FormData(target);\n        } else if ((method = isHtmlElement(target) && \"button\" === target.tagName.toLowerCase()) || (method = isHtmlElement(target) && \"input\" === target.tagName.toLowerCase() && (\"submit\" === target.type || \"image\" === target.type)), method) {\n          formData = target.form;\n          if (null == formData) {\n            throw Error('Cannot submit a \\x3cbutton\\x3e or \\x3cinput type\\x3d\"submit\"\\x3e without a \\x3cform\\x3e');\n          }\n          action = (method = target.getAttribute(\"formaction\") || formData.getAttribute(\"action\")) ? router$jscomp$0.stripBasename(method, basename) : null;\n          method = target.getAttribute(\"formmethod\") || formData.getAttribute(\"method\") || \"get\";\n          encType = getFormEncType(target.getAttribute(\"formenctype\")) || getFormEncType(formData.getAttribute(\"enctype\")) || \"application/x-www-form-urlencoded\";\n          formData = new FormData(formData, target);\n          if (null === _formDataSupportsSubmitter) {\n            try {\n              new FormData(document.createElement(\"form\"), 0), _formDataSupportsSubmitter = !1;\n            } catch (e) {\n              _formDataSupportsSubmitter = !0;\n            }\n          }\n          if (!_formDataSupportsSubmitter) {\n            let {name, type, value} = target;\n            \"image\" === type ? (target = name ? name + \".\" : \"\", formData.append(target + \"x\", \"0\"), formData.append(target + \"y\", \"0\")) : name && formData.append(name, value);\n          }\n        } else {\n          if (isHtmlElement(target)) {\n            throw Error('Cannot submit element that is not \\x3cform\\x3e, \\x3cbutton\\x3e, or \\x3cinput type\\x3d\"submit|image\"\\x3e');\n          }\n          method = \"get\";\n          action = null;\n          encType = \"application/x-www-form-urlencoded\";\n          var JSCompiler_inline_result = target;\n        }\n        formData && \"text/plain\" === encType && (JSCompiler_inline_result = formData, formData = void 0);\n        JSCompiler_inline_result = {action, method:method.toLowerCase(), encType, formData, body:JSCompiler_inline_result};\n        let {action:action$jscomp$0, method:method$jscomp$0, encType:encType$jscomp$0, formData:formData$jscomp$0, body} = JSCompiler_inline_result;\n        !1 === options.navigate ? (JSCompiler_inline_result = options.fetcherKey || \"__\" + String(++fetcherId) + \"__\", router.fetch(JSCompiler_inline_result, currentRouteId, options.action || action$jscomp$0, {preventScrollReset:options.preventScrollReset, formData:formData$jscomp$0, body, formMethod:options.method || method$jscomp$0, formEncType:options.encType || encType$jscomp$0, flushSync:options.flushSync})) : router.navigate(options.action || action$jscomp$0, {preventScrollReset:options.preventScrollReset, \n        formData:formData$jscomp$0, body, formMethod:options.method || method$jscomp$0, formEncType:options.encType || encType$jscomp$0, replace:options.replace, state:options.state, fromRouteId:currentRouteId, flushSync:options.flushSync, viewTransition:options.viewTransition});\n      }, [router, basename, currentRouteId]);\n    }\n    function useFormAction(action, _temp2) {\n      var {relative} = void 0 === _temp2 ? {} : _temp2;\n      ({basename:_temp2} = React__namespace.useContext(reactRouter.UNSAFE_NavigationContext));\n      var routeContext = React__namespace.useContext(reactRouter.UNSAFE_RouteContext);\n      routeContext || router$jscomp$0.UNSAFE_invariant(!1, \"useFormAction must be used inside a RouteContext\");\n      [routeContext] = routeContext.matches.slice(-1);\n      relative = _extends({}, reactRouter.useResolvedPath(action ? action : \".\", {relative}));\n      var location = reactRouter.useLocation();\n      if (null == action) {\n        relative.search = location.search;\n        let params = new URLSearchParams(relative.search);\n        location = params.getAll(\"index\");\n        location.some(v => \"\" === v) && (params.delete(\"index\"), location.filter(v => v).forEach(v => params.append(\"index\", v)), location = params.toString(), relative.search = location ? \"?\" + location : \"\");\n      }\n      action && \".\" !== action || !routeContext.route.index || (relative.search = relative.search ? relative.search.replace(/^\\?/, \"?index\\x26\") : \"?index\");\n      \"/\" !== _temp2 && (relative.pathname = \"/\" === relative.pathname ? _temp2 : router$jscomp$0.joinPaths([_temp2, relative.pathname]));\n      return reactRouter.createPath(relative);\n    }\n    function useScrollRestoration(_temp4) {\n      let {getKey, storageKey} = void 0 === _temp4 ? {} : _temp4, {router:router$1} = useDataRouterContext(DataRouterHook.UseScrollRestoration), {restoreScrollPosition, preventScrollReset} = useDataRouterState(DataRouterStateHook.UseScrollRestoration), {basename} = React__namespace.useContext(reactRouter.UNSAFE_NavigationContext), location = reactRouter.useLocation(), matches = reactRouter.useMatches(), navigation = reactRouter.useNavigation();\n      React__namespace.useEffect(() => {\n        window.history.scrollRestoration = \"manual\";\n        return () => {\n          window.history.scrollRestoration = \"auto\";\n        };\n      }, []);\n      usePageHide(React__namespace.useCallback(() => {\n        if (\"idle\" === navigation.state) {\n          let key = (getKey ? getKey(location, matches) : null) || location.key;\n          savedScrollPositions[key] = window.scrollY;\n        }\n        try {\n          sessionStorage.setItem(storageKey || \"react-router-scroll-positions\", JSON.stringify(savedScrollPositions));\n        } catch (error) {\n          router$jscomp$0.UNSAFE_warning(!1, \"Failed to save scroll positions in sessionStorage, \\x3cScrollRestoration /\\x3e will not work properly (\" + error + \").\");\n        }\n        window.history.scrollRestoration = \"auto\";\n      }, [storageKey, getKey, navigation.state, location, matches]));\n      \"undefined\" !== typeof document && (React__namespace.useLayoutEffect(() => {\n        try {\n          let sessionPositions = sessionStorage.getItem(storageKey || \"react-router-scroll-positions\");\n          sessionPositions && (savedScrollPositions = JSON.parse(sessionPositions));\n        } catch (e) {\n        }\n      }, [storageKey]), React__namespace.useLayoutEffect(() => {\n        let getKeyWithoutBasename = getKey && \"/\" !== basename ? (location, matches) => getKey(_extends({}, location, {pathname:router$jscomp$0.stripBasename(location.pathname, basename) || location.pathname}), matches) : getKey, disableScrollRestoration = null == router$1 ? void 0 : router$1.enableScrollRestoration(savedScrollPositions, () => window.scrollY, getKeyWithoutBasename);\n        return () => disableScrollRestoration && disableScrollRestoration();\n      }, [router$1, basename, getKey]), React__namespace.useLayoutEffect(() => {\n        if (!1 !== restoreScrollPosition) {\n          if (\"number\" === typeof restoreScrollPosition) {\n            window.scrollTo(0, restoreScrollPosition);\n          } else {\n            if (location.hash) {\n              let el = document.getElementById(decodeURIComponent(location.hash.slice(1)));\n              if (el) {\n                el.scrollIntoView();\n                return;\n              }\n            }\n            !0 !== preventScrollReset && window.scrollTo(0, 0);\n          }\n        }\n      }, [location, restoreScrollPosition, preventScrollReset]));\n    }\n    function usePageHide(callback, options) {\n      let {capture} = options || {};\n      React__namespace.useEffect(() => {\n        let opts = null != capture ? {capture} : void 0;\n        window.addEventListener(\"pagehide\", callback, opts);\n        return () => {\n          window.removeEventListener(\"pagehide\", callback, opts);\n        };\n      }, [callback, capture]);\n    }\n    function useViewTransitionState(to, opts) {\n      void 0 === opts && (opts = {});\n      var vtContext = React__namespace.useContext(ViewTransitionContext);\n      null == vtContext && router$jscomp$0.UNSAFE_invariant(!1, \"`useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  Did you accidentally import `RouterProvider` from `react-router`?\");\n      let {basename} = useDataRouterContext(DataRouterHook.useViewTransitionState);\n      to = reactRouter.useResolvedPath(to, {relative:opts.relative});\n      if (!vtContext.isTransitioning) {\n        return !1;\n      }\n      opts = router$jscomp$0.stripBasename(vtContext.currentLocation.pathname, basename) || vtContext.currentLocation.pathname;\n      vtContext = router$jscomp$0.stripBasename(vtContext.nextLocation.pathname, basename) || vtContext.nextLocation.pathname;\n      return null != router$jscomp$0.matchPath(to.pathname, vtContext) || null != router$jscomp$0.matchPath(to.pathname, opts);\n    }\n    var React__namespace = _interopNamespace(React);\n    React = _interopNamespace(ReactDOM);\n    let _formDataSupportsSubmitter = null;\n    const supportedFormEncTypes = new Set([\"application/x-www-form-urlencoded\", \"multipart/form-data\", \"text/plain\"]), _excluded = \"onClick relative reloadDocument replace state target to preventScrollReset viewTransition\".split(\" \"), _excluded2 = \"aria-current caseSensitive className end style to viewTransition children\".split(\" \"), _excluded3 = \"fetcherKey navigate reloadDocument replace state method action onSubmit relative preventScrollReset viewTransition\".split(\" \");\n    try {\n      window.__reactRouterVersion = \"6\";\n    } catch (e) {\n    }\n    const ViewTransitionContext = React__namespace.createContext({isTransitioning:!1});\n    ViewTransitionContext.displayName = \"ViewTransition\";\n    const FetchersContext = React__namespace.createContext(new Map());\n    FetchersContext.displayName = \"Fetchers\";\n    const startTransitionImpl = React__namespace.startTransition, flushSyncImpl = React.flushSync, useIdImpl = React__namespace.useId;\n    class Deferred {\n      constructor() {\n        this.status = \"pending\";\n        this.promise = new Promise((resolve, reject) => {\n          this.resolve = value => {\n            \"pending\" === this.status && (this.status = \"resolved\", resolve(value));\n          };\n          this.reject = reason => {\n            \"pending\" === this.status && (this.status = \"rejected\", reject(reason));\n          };\n        });\n      }\n    }\n    const MemoizedDataRoutes = React__namespace.memo(function(_ref3) {\n      let {routes, future, state} = _ref3;\n      return reactRouter.UNSAFE_useRoutesImpl(routes, void 0, state, future);\n    });\n    HistoryRouter.displayName = \"unstable_HistoryRouter\";\n    const isBrowser = \"undefined\" !== typeof window && \"undefined\" !== typeof window.document && \"undefined\" !== typeof window.document.createElement, ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i, Link = React__namespace.forwardRef(function(_ref7, ref) {\n      function handleClick(event) {\n        onClick && onClick(event);\n        event.defaultPrevented || internalOnClick(event);\n      }\n      let {onClick, relative, reloadDocument, replace, state, target, to, preventScrollReset, viewTransition} = _ref7;\n      _ref7 = _objectWithoutPropertiesLoose(_ref7, _excluded);\n      let {basename} = React__namespace.useContext(reactRouter.UNSAFE_NavigationContext), absoluteHref, isExternal = !1;\n      if (\"string\" === typeof to && ABSOLUTE_URL_REGEX.test(to) && (absoluteHref = to, isBrowser)) {\n        try {\n          var currentUrl = new URL(window.location.href);\n          let targetUrl = to.startsWith(\"//\") ? new URL(currentUrl.protocol + to) : new URL(to), path = router$jscomp$0.stripBasename(targetUrl.pathname, basename);\n          targetUrl.origin === currentUrl.origin && null != path ? to = path + targetUrl.search + targetUrl.hash : isExternal = !0;\n        } catch (e) {\n          router$jscomp$0.UNSAFE_warning(!1, '\\x3cLink to\\x3d\"' + to + '\"\\x3e contains an invalid URL which will probably break when clicked - please update to a valid URL path.');\n        }\n      }\n      currentUrl = reactRouter.useHref(to, {relative});\n      let internalOnClick = useLinkClickHandler(to, {replace, state, target, preventScrollReset, relative, viewTransition});\n      return React__namespace.createElement(\"a\", _extends({}, _ref7, {href:absoluteHref || currentUrl, onClick:isExternal || reloadDocument ? onClick : handleClick, ref, target}));\n    });\n    Link.displayName = \"Link\";\n    React = React__namespace.forwardRef(function(_ref8, ref) {\n      let {\"aria-current\":ariaCurrentProp = \"page\", caseSensitive = !1, className:classNameProp = \"\", end = !1, style:styleProp, to, viewTransition, children} = _ref8;\n      _ref8 = _objectWithoutPropertiesLoose(_ref8, _excluded2);\n      var path = reactRouter.useResolvedPath(to, {relative:_ref8.relative}), location = reactRouter.useLocation(), routerState = React__namespace.useContext(reactRouter.UNSAFE_DataRouterStateContext);\n      let {navigator, basename} = React__namespace.useContext(reactRouter.UNSAFE_NavigationContext);\n      var isTransitioning = null != routerState && useViewTransitionState(path) && !0 === viewTransition;\n      path = navigator.encodeLocation ? navigator.encodeLocation(path).pathname : path.pathname;\n      location = location.pathname;\n      var nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\n      caseSensitive || (location = location.toLowerCase(), nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null, path = path.toLowerCase());\n      nextLocationPathname && basename && (nextLocationPathname = router$jscomp$0.stripBasename(nextLocationPathname, basename) || nextLocationPathname);\n      routerState = \"/\" !== path && path.endsWith(\"/\") ? path.length - 1 : path.length;\n      routerState = location === path || !end && location.startsWith(path) && \"/\" === location.charAt(routerState);\n      nextLocationPathname = null != nextLocationPathname && (nextLocationPathname === path || !end && nextLocationPathname.startsWith(path) && \"/\" === nextLocationPathname.charAt(path.length));\n      path = {isActive:routerState, isPending:nextLocationPathname, isTransitioning};\n      location = routerState ? ariaCurrentProp : void 0;\n      isTransitioning = \"function\" === typeof classNameProp ? classNameProp(path) : [classNameProp, routerState ? \"active\" : null, nextLocationPathname ? \"pending\" : null, isTransitioning ? \"transitioning\" : null].filter(Boolean).join(\" \");\n      routerState = \"function\" === typeof styleProp ? styleProp(path) : styleProp;\n      return React__namespace.createElement(Link, _extends({}, _ref8, {\"aria-current\":location, className:isTransitioning, ref, style:routerState, to, viewTransition}), \"function\" === typeof children ? children(path) : children);\n    });\n    React.displayName = \"NavLink\";\n    const Form = React__namespace.forwardRef((_ref9, forwardedRef) => {\n      let {fetcherKey, navigate, reloadDocument, replace, state, method = \"get\", action, onSubmit, relative, preventScrollReset, viewTransition} = _ref9;\n      _ref9 = _objectWithoutPropertiesLoose(_ref9, _excluded3);\n      let submit = useSubmit(), formAction = useFormAction(action, {relative}), formMethod = \"get\" === method.toLowerCase() ? \"get\" : \"post\", submitHandler = event => {\n        onSubmit && onSubmit(event);\n        if (!event.defaultPrevented) {\n          event.preventDefault();\n          var submitter = event.nativeEvent.submitter, submitMethod = (null == submitter ? void 0 : submitter.getAttribute(\"formmethod\")) || method;\n          submit(submitter || event.currentTarget, {fetcherKey, method:submitMethod, navigate, replace, state, relative, preventScrollReset, viewTransition});\n        }\n      };\n      return React__namespace.createElement(\"form\", _extends({ref:forwardedRef, method:formMethod, action:formAction, onSubmit:reloadDocument ? onSubmit : submitHandler}, _ref9));\n    });\n    Form.displayName = \"Form\";\n    ScrollRestoration.displayName = \"ScrollRestoration\";\n    var DataRouterHook = function(DataRouterHook) {\n      DataRouterHook.UseScrollRestoration = \"useScrollRestoration\";\n      DataRouterHook.UseSubmit = \"useSubmit\";\n      DataRouterHook.UseSubmitFetcher = \"useSubmitFetcher\";\n      DataRouterHook.UseFetcher = \"useFetcher\";\n      DataRouterHook.useViewTransitionState = \"useViewTransitionState\";\n      return DataRouterHook;\n    }(DataRouterHook || {}), DataRouterStateHook = function(DataRouterStateHook) {\n      DataRouterStateHook.UseFetcher = \"useFetcher\";\n      DataRouterStateHook.UseFetchers = \"useFetchers\";\n      DataRouterStateHook.UseScrollRestoration = \"useScrollRestoration\";\n      return DataRouterStateHook;\n    }(DataRouterStateHook || {});\n    let fetcherId = 0, savedScrollPositions = {};\n    Object.defineProperty(exports, \"AbortedDeferredError\", {enumerable:!0, get:function() {\n      return reactRouter.AbortedDeferredError;\n    }});\n    Object.defineProperty(exports, \"Await\", {enumerable:!0, get:function() {\n      return reactRouter.Await;\n    }});\n    Object.defineProperty(exports, \"MemoryRouter\", {enumerable:!0, get:function() {\n      return reactRouter.MemoryRouter;\n    }});\n    Object.defineProperty(exports, \"Navigate\", {enumerable:!0, get:function() {\n      return reactRouter.Navigate;\n    }});\n    Object.defineProperty(exports, \"NavigationType\", {enumerable:!0, get:function() {\n      return reactRouter.NavigationType;\n    }});\n    Object.defineProperty(exports, \"Outlet\", {enumerable:!0, get:function() {\n      return reactRouter.Outlet;\n    }});\n    Object.defineProperty(exports, \"Route\", {enumerable:!0, get:function() {\n      return reactRouter.Route;\n    }});\n    Object.defineProperty(exports, \"Router\", {enumerable:!0, get:function() {\n      return reactRouter.Router;\n    }});\n    Object.defineProperty(exports, \"Routes\", {enumerable:!0, get:function() {\n      return reactRouter.Routes;\n    }});\n    Object.defineProperty(exports, \"UNSAFE_DataRouterContext\", {enumerable:!0, get:function() {\n      return reactRouter.UNSAFE_DataRouterContext;\n    }});\n    Object.defineProperty(exports, \"UNSAFE_DataRouterStateContext\", {enumerable:!0, get:function() {\n      return reactRouter.UNSAFE_DataRouterStateContext;\n    }});\n    Object.defineProperty(exports, \"UNSAFE_LocationContext\", {enumerable:!0, get:function() {\n      return reactRouter.UNSAFE_LocationContext;\n    }});\n    Object.defineProperty(exports, \"UNSAFE_NavigationContext\", {enumerable:!0, get:function() {\n      return reactRouter.UNSAFE_NavigationContext;\n    }});\n    Object.defineProperty(exports, \"UNSAFE_RouteContext\", {enumerable:!0, get:function() {\n      return reactRouter.UNSAFE_RouteContext;\n    }});\n    Object.defineProperty(exports, \"UNSAFE_useRouteId\", {enumerable:!0, get:function() {\n      return reactRouter.UNSAFE_useRouteId;\n    }});\n    Object.defineProperty(exports, \"createMemoryRouter\", {enumerable:!0, get:function() {\n      return reactRouter.createMemoryRouter;\n    }});\n    Object.defineProperty(exports, \"createPath\", {enumerable:!0, get:function() {\n      return reactRouter.createPath;\n    }});\n    Object.defineProperty(exports, \"createRoutesFromChildren\", {enumerable:!0, get:function() {\n      return reactRouter.createRoutesFromChildren;\n    }});\n    Object.defineProperty(exports, \"createRoutesFromElements\", {enumerable:!0, get:function() {\n      return reactRouter.createRoutesFromElements;\n    }});\n    Object.defineProperty(exports, \"defer\", {enumerable:!0, get:function() {\n      return reactRouter.defer;\n    }});\n    Object.defineProperty(exports, \"generatePath\", {enumerable:!0, get:function() {\n      return reactRouter.generatePath;\n    }});\n    Object.defineProperty(exports, \"isRouteErrorResponse\", {enumerable:!0, get:function() {\n      return reactRouter.isRouteErrorResponse;\n    }});\n    Object.defineProperty(exports, \"json\", {enumerable:!0, get:function() {\n      return reactRouter.json;\n    }});\n    Object.defineProperty(exports, \"matchPath\", {enumerable:!0, get:function() {\n      return reactRouter.matchPath;\n    }});\n    Object.defineProperty(exports, \"matchRoutes\", {enumerable:!0, get:function() {\n      return reactRouter.matchRoutes;\n    }});\n    Object.defineProperty(exports, \"parsePath\", {enumerable:!0, get:function() {\n      return reactRouter.parsePath;\n    }});\n    Object.defineProperty(exports, \"redirect\", {enumerable:!0, get:function() {\n      return reactRouter.redirect;\n    }});\n    Object.defineProperty(exports, \"redirectDocument\", {enumerable:!0, get:function() {\n      return reactRouter.redirectDocument;\n    }});\n    Object.defineProperty(exports, \"renderMatches\", {enumerable:!0, get:function() {\n      return reactRouter.renderMatches;\n    }});\n    Object.defineProperty(exports, \"replace\", {enumerable:!0, get:function() {\n      return reactRouter.replace;\n    }});\n    Object.defineProperty(exports, \"resolvePath\", {enumerable:!0, get:function() {\n      return reactRouter.resolvePath;\n    }});\n    Object.defineProperty(exports, \"useActionData\", {enumerable:!0, get:function() {\n      return reactRouter.useActionData;\n    }});\n    Object.defineProperty(exports, \"useAsyncError\", {enumerable:!0, get:function() {\n      return reactRouter.useAsyncError;\n    }});\n    Object.defineProperty(exports, \"useAsyncValue\", {enumerable:!0, get:function() {\n      return reactRouter.useAsyncValue;\n    }});\n    Object.defineProperty(exports, \"useBlocker\", {enumerable:!0, get:function() {\n      return reactRouter.useBlocker;\n    }});\n    Object.defineProperty(exports, \"useHref\", {enumerable:!0, get:function() {\n      return reactRouter.useHref;\n    }});\n    Object.defineProperty(exports, \"useInRouterContext\", {enumerable:!0, get:function() {\n      return reactRouter.useInRouterContext;\n    }});\n    Object.defineProperty(exports, \"useLoaderData\", {enumerable:!0, get:function() {\n      return reactRouter.useLoaderData;\n    }});\n    Object.defineProperty(exports, \"useLocation\", {enumerable:!0, get:function() {\n      return reactRouter.useLocation;\n    }});\n    Object.defineProperty(exports, \"useMatch\", {enumerable:!0, get:function() {\n      return reactRouter.useMatch;\n    }});\n    Object.defineProperty(exports, \"useMatches\", {enumerable:!0, get:function() {\n      return reactRouter.useMatches;\n    }});\n    Object.defineProperty(exports, \"useNavigate\", {enumerable:!0, get:function() {\n      return reactRouter.useNavigate;\n    }});\n    Object.defineProperty(exports, \"useNavigation\", {enumerable:!0, get:function() {\n      return reactRouter.useNavigation;\n    }});\n    Object.defineProperty(exports, \"useNavigationType\", {enumerable:!0, get:function() {\n      return reactRouter.useNavigationType;\n    }});\n    Object.defineProperty(exports, \"useOutlet\", {enumerable:!0, get:function() {\n      return reactRouter.useOutlet;\n    }});\n    Object.defineProperty(exports, \"useOutletContext\", {enumerable:!0, get:function() {\n      return reactRouter.useOutletContext;\n    }});\n    Object.defineProperty(exports, \"useParams\", {enumerable:!0, get:function() {\n      return reactRouter.useParams;\n    }});\n    Object.defineProperty(exports, \"useResolvedPath\", {enumerable:!0, get:function() {\n      return reactRouter.useResolvedPath;\n    }});\n    Object.defineProperty(exports, \"useRevalidator\", {enumerable:!0, get:function() {\n      return reactRouter.useRevalidator;\n    }});\n    Object.defineProperty(exports, \"useRouteError\", {enumerable:!0, get:function() {\n      return reactRouter.useRouteError;\n    }});\n    Object.defineProperty(exports, \"useRouteLoaderData\", {enumerable:!0, get:function() {\n      return reactRouter.useRouteLoaderData;\n    }});\n    Object.defineProperty(exports, \"useRoutes\", {enumerable:!0, get:function() {\n      return reactRouter.useRoutes;\n    }});\n    Object.defineProperty(exports, \"UNSAFE_ErrorResponseImpl\", {enumerable:!0, get:function() {\n      return router$jscomp$0.UNSAFE_ErrorResponseImpl;\n    }});\n    exports.BrowserRouter = function(_ref4) {\n      let {basename, children, future, window} = _ref4;\n      _ref4 = React__namespace.useRef();\n      null == _ref4.current && (_ref4.current = router$jscomp$0.createBrowserHistory({window, v5Compat:!0}));\n      let history = _ref4.current, [state, setStateImpl] = React__namespace.useState({action:history.action, location:history.location}), {v7_startTransition} = future || {}, setState = React__namespace.useCallback(newState => {\n        v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n      }, [setStateImpl, v7_startTransition]);\n      React__namespace.useLayoutEffect(() => history.listen(setState), [history, setState]);\n      React__namespace.useEffect(() => reactRouter.UNSAFE_logV6DeprecationWarnings(future), [future]);\n      return React__namespace.createElement(reactRouter.Router, {basename, children, location:state.location, navigationType:state.action, navigator:history, future});\n    };\n    exports.Form = Form;\n    exports.HashRouter = function(_ref5) {\n      let {basename, children, future, window} = _ref5;\n      _ref5 = React__namespace.useRef();\n      null == _ref5.current && (_ref5.current = router$jscomp$0.createHashHistory({window, v5Compat:!0}));\n      let history = _ref5.current, [state, setStateImpl] = React__namespace.useState({action:history.action, location:history.location}), {v7_startTransition} = future || {}, setState = React__namespace.useCallback(newState => {\n        v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n      }, [setStateImpl, v7_startTransition]);\n      React__namespace.useLayoutEffect(() => history.listen(setState), [history, setState]);\n      React__namespace.useEffect(() => reactRouter.UNSAFE_logV6DeprecationWarnings(future), [future]);\n      return React__namespace.createElement(reactRouter.Router, {basename, children, location:state.location, navigationType:state.action, navigator:history, future});\n    };\n    exports.Link = Link;\n    exports.NavLink = React;\n    exports.RouterProvider = function(_ref) {\n      let {fallbackElement, router:router$1, future} = _ref, [state, setStateImpl] = React__namespace.useState(router$1.state), [pendingState, setPendingState] = React__namespace.useState(), [vtContext, setVtContext] = React__namespace.useState({isTransitioning:!1}), [renderDfd, setRenderDfd] = React__namespace.useState(), [transition, setTransition] = React__namespace.useState(), [interruption, setInterruption] = React__namespace.useState(), fetcherData = React__namespace.useRef(new Map()), {v7_startTransition} = \n      future || {}, optInStartTransition = React__namespace.useCallback(cb => {\n        v7_startTransition ? startTransitionImpl ? startTransitionImpl(cb) : cb() : cb();\n      }, [v7_startTransition]), setState = React__namespace.useCallback((newState, _ref2) => {\n        let {deletedFetchers, flushSync, viewTransitionOpts} = _ref2;\n        newState.fetchers.forEach((fetcher, key) => {\n          void 0 !== fetcher.data && fetcherData.current.set(key, fetcher.data);\n        });\n        deletedFetchers.forEach(key => fetcherData.current.delete(key));\n        _ref2 = null == router$1.window || null == router$1.window.document || \"function\" !== typeof router$1.window.document.startViewTransition;\n        if (!viewTransitionOpts || _ref2) {\n          flushSync ? flushSyncSafe(() => setStateImpl(newState)) : optInStartTransition(() => setStateImpl(newState));\n        } else {\n          if (flushSync) {\n            flushSyncSafe(() => {\n              transition && (renderDfd && renderDfd.resolve(), transition.skipTransition());\n              setVtContext({isTransitioning:!0, flushSync:!0, currentLocation:viewTransitionOpts.currentLocation, nextLocation:viewTransitionOpts.nextLocation});\n            });\n            let t = router$1.window.document.startViewTransition(() => {\n              flushSyncSafe(() => setStateImpl(newState));\n            });\n            t.finished.finally(() => {\n              flushSyncSafe(() => {\n                setRenderDfd(void 0);\n                setTransition(void 0);\n                setPendingState(void 0);\n                setVtContext({isTransitioning:!1});\n              });\n            });\n            flushSyncSafe(() => setTransition(t));\n          } else {\n            transition ? (renderDfd && renderDfd.resolve(), transition.skipTransition(), setInterruption({state:newState, currentLocation:viewTransitionOpts.currentLocation, nextLocation:viewTransitionOpts.nextLocation})) : (setPendingState(newState), setVtContext({isTransitioning:!0, flushSync:!1, currentLocation:viewTransitionOpts.currentLocation, nextLocation:viewTransitionOpts.nextLocation}));\n          }\n        }\n      }, [router$1.window, transition, renderDfd, fetcherData, optInStartTransition]);\n      React__namespace.useLayoutEffect(() => router$1.subscribe(setState), [router$1, setState]);\n      React__namespace.useEffect(() => {\n        vtContext.isTransitioning && !vtContext.flushSync && setRenderDfd(new Deferred());\n      }, [vtContext]);\n      React__namespace.useEffect(() => {\n        if (renderDfd && pendingState && router$1.window) {\n          let renderPromise = renderDfd.promise, transition = router$1.window.document.startViewTransition(async() => {\n            optInStartTransition(() => setStateImpl(pendingState));\n            await renderPromise;\n          });\n          transition.finished.finally(() => {\n            setRenderDfd(void 0);\n            setTransition(void 0);\n            setPendingState(void 0);\n            setVtContext({isTransitioning:!1});\n          });\n          setTransition(transition);\n        }\n      }, [optInStartTransition, pendingState, renderDfd, router$1.window]);\n      React__namespace.useEffect(() => {\n        renderDfd && pendingState && state.location.key === pendingState.location.key && renderDfd.resolve();\n      }, [renderDfd, transition, state.location, pendingState]);\n      React__namespace.useEffect(() => {\n        !vtContext.isTransitioning && interruption && (setPendingState(interruption.state), setVtContext({isTransitioning:!0, flushSync:!1, currentLocation:interruption.currentLocation, nextLocation:interruption.nextLocation}), setInterruption(void 0));\n      }, [vtContext.isTransitioning, interruption]);\n      React__namespace.useEffect(() => {\n        router$jscomp$0.UNSAFE_warning(null == fallbackElement || !router$1.future.v7_partialHydration, \"`\\x3cRouterProvider fallbackElement\\x3e` is deprecated when using `v7_partialHydration`, use a `HydrateFallback` component instead\");\n      }, []);\n      let navigator = React__namespace.useMemo(() => ({createHref:router$1.createHref, encodeLocation:router$1.encodeLocation, go:n => router$1.navigate(n), push:(to, state, opts) => router$1.navigate(to, {state, preventScrollReset:null == opts ? void 0 : opts.preventScrollReset}), replace:(to, state, opts) => router$1.navigate(to, {replace:!0, state, preventScrollReset:null == opts ? void 0 : opts.preventScrollReset})}), [router$1]), basename = router$1.basename || \"/\";\n      _ref = React__namespace.useMemo(() => ({router:router$1, navigator, static:!1, basename}), [router$1, navigator, basename]);\n      let routerFuture = React__namespace.useMemo(() => ({v7_relativeSplatPath:router$1.future.v7_relativeSplatPath}), [router$1.future.v7_relativeSplatPath]);\n      React__namespace.useEffect(() => reactRouter.UNSAFE_logV6DeprecationWarnings(future, router$1.future), [future, router$1.future]);\n      return React__namespace.createElement(React__namespace.Fragment, null, React__namespace.createElement(reactRouter.UNSAFE_DataRouterContext.Provider, {value:_ref}, React__namespace.createElement(reactRouter.UNSAFE_DataRouterStateContext.Provider, {value:state}, React__namespace.createElement(FetchersContext.Provider, {value:fetcherData.current}, React__namespace.createElement(ViewTransitionContext.Provider, {value:vtContext}, React__namespace.createElement(reactRouter.Router, {basename, location:state.location, \n      navigationType:state.historyAction, navigator, future:routerFuture}, state.initialized || router$1.future.v7_partialHydration ? React__namespace.createElement(MemoizedDataRoutes, {routes:router$1.routes, future:router$1.future, state}) : fallbackElement))))), null);\n    };\n    exports.ScrollRestoration = ScrollRestoration;\n    exports.UNSAFE_FetchersContext = FetchersContext;\n    exports.UNSAFE_ViewTransitionContext = ViewTransitionContext;\n    exports.UNSAFE_useScrollRestoration = useScrollRestoration;\n    exports.createBrowserRouter = function(routes, opts) {\n      return router$jscomp$0.createRouter({basename:null == opts ? void 0 : opts.basename, future:_extends({}, null == opts ? void 0 : opts.future, {v7_prependBasename:!0}), history:router$jscomp$0.createBrowserHistory({window:null == opts ? void 0 : opts.window}), hydrationData:(null == opts ? void 0 : opts.hydrationData) || parseHydrationData(), routes, mapRouteProperties:reactRouter.UNSAFE_mapRouteProperties, dataStrategy:null == opts ? void 0 : opts.dataStrategy, patchRoutesOnNavigation:null == \n      opts ? void 0 : opts.patchRoutesOnNavigation, window:null == opts ? void 0 : opts.window}).initialize();\n    };\n    exports.createHashRouter = function(routes, opts) {\n      return router$jscomp$0.createRouter({basename:null == opts ? void 0 : opts.basename, future:_extends({}, null == opts ? void 0 : opts.future, {v7_prependBasename:!0}), history:router$jscomp$0.createHashHistory({window:null == opts ? void 0 : opts.window}), hydrationData:(null == opts ? void 0 : opts.hydrationData) || parseHydrationData(), routes, mapRouteProperties:reactRouter.UNSAFE_mapRouteProperties, dataStrategy:null == opts ? void 0 : opts.dataStrategy, patchRoutesOnNavigation:null == \n      opts ? void 0 : opts.patchRoutesOnNavigation, window:null == opts ? void 0 : opts.window}).initialize();\n    };\n    exports.createSearchParams = createSearchParams;\n    exports.unstable_HistoryRouter = HistoryRouter;\n    exports.unstable_usePrompt = function(_ref12) {\n      let {when, message} = _ref12, blocker = reactRouter.useBlocker(when);\n      React__namespace.useEffect(() => {\n        \"blocked\" === blocker.state && (window.confirm(message) ? setTimeout(blocker.proceed, 0) : blocker.reset());\n      }, [blocker, message]);\n      React__namespace.useEffect(() => {\n        \"blocked\" !== blocker.state || when || blocker.reset();\n      }, [blocker, when]);\n    };\n    exports.useBeforeUnload = function(callback, options) {\n      let {capture} = options || {};\n      React__namespace.useEffect(() => {\n        let opts = null != capture ? {capture} : void 0;\n        window.addEventListener(\"beforeunload\", callback, opts);\n        return () => {\n          window.removeEventListener(\"beforeunload\", callback, opts);\n        };\n      }, [callback, capture]);\n    };\n    exports.useFetcher = function(_temp3) {\n      var _route$matches;\n      ({key:_temp3} = void 0 === _temp3 ? {} : _temp3);\n      let {router:router$1} = useDataRouterContext(DataRouterHook.UseFetcher), state = useDataRouterState(DataRouterStateHook.UseFetcher), fetcherData = React__namespace.useContext(FetchersContext), route = React__namespace.useContext(reactRouter.UNSAFE_RouteContext), routeId = null == (_route$matches = route.matches[route.matches.length - 1]) ? void 0 : _route$matches.route.id;\n      fetcherData || router$jscomp$0.UNSAFE_invariant(!1, \"useFetcher must be used inside a FetchersContext\");\n      route || router$jscomp$0.UNSAFE_invariant(!1, \"useFetcher must be used inside a RouteContext\");\n      null == routeId && router$jscomp$0.UNSAFE_invariant(!1, 'useFetcher can only be used on routes that contain a unique \"id\"');\n      _route$matches = useIdImpl ? useIdImpl() : \"\";\n      let [fetcherKey, setFetcherKey] = React__namespace.useState(_temp3 || _route$matches);\n      _temp3 && _temp3 !== fetcherKey ? setFetcherKey(_temp3) : fetcherKey || setFetcherKey(\"__\" + String(++fetcherId) + \"__\");\n      React__namespace.useEffect(() => {\n        router$1.getFetcher(fetcherKey);\n        return () => {\n          router$1.deleteFetcher(fetcherKey);\n        };\n      }, [router$1, fetcherKey]);\n      let load = React__namespace.useCallback((href, opts) => {\n        routeId || router$jscomp$0.UNSAFE_invariant(!1, \"No routeId available for fetcher.load()\");\n        router$1.fetch(fetcherKey, routeId, href, opts);\n      }, [fetcherKey, routeId, router$1]), submitImpl = useSubmit(), submit = React__namespace.useCallback((target, opts) => {\n        submitImpl(target, _extends({}, opts, {navigate:!1, fetcherKey}));\n      }, [fetcherKey, submitImpl]), FetcherForm = React__namespace.useMemo(() => {\n        let FetcherForm = React__namespace.forwardRef((props, ref) => React__namespace.createElement(Form, _extends({}, props, {navigate:!1, fetcherKey, ref})));\n        FetcherForm.displayName = \"fetcher.Form\";\n        return FetcherForm;\n      }, [fetcherKey]), fetcher = state.fetchers.get(fetcherKey) || router$jscomp$0.IDLE_FETCHER, data = fetcherData.get(fetcherKey);\n      return React__namespace.useMemo(() => _extends({Form:FetcherForm, submit, load}, fetcher, {data}), [FetcherForm, submit, load, fetcher, data]);\n    };\n    exports.useFetchers = function() {\n      let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n      return Array.from(state.fetchers.entries()).map(_ref11 => {\n        let [key, fetcher] = _ref11;\n        return _extends({}, fetcher, {key});\n      });\n    };\n    exports.useFormAction = useFormAction;\n    exports.useLinkClickHandler = useLinkClickHandler;\n    exports.useSearchParams = function(defaultInit) {\n      router$jscomp$0.UNSAFE_warning(\"undefined\" !== typeof URLSearchParams, \"You cannot use the `useSearchParams` hook in a browser that does not support the URLSearchParams API. If you need to support Internet Explorer 11, we recommend you load a polyfill such as https://github.com/ungap/url-search-params.\");\n      let defaultSearchParamsRef = React__namespace.useRef(createSearchParams(defaultInit)), hasSetSearchParamsRef = React__namespace.useRef(!1), location = reactRouter.useLocation(), searchParams = React__namespace.useMemo(() => getSearchParamsForLocation(location.search, hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current), [location.search]), navigate = reactRouter.useNavigate();\n      defaultInit = React__namespace.useCallback((nextInit, navigateOptions) => {\n        nextInit = createSearchParams(\"function\" === typeof nextInit ? nextInit(searchParams) : nextInit);\n        hasSetSearchParamsRef.current = !0;\n        navigate(\"?\" + nextInit, navigateOptions);\n      }, [navigate, searchParams]);\n      return [searchParams, defaultInit];\n    };\n    exports.useSubmit = useSubmit;\n    exports.useViewTransitionState = useViewTransitionState;\n    Object.defineProperty(exports, \"__esModule\", {value:!0});\n  });\n};\n","~:source","shadow$provide[\"module$node_modules$react_router_dom$dist$umd$react_router_dom_development\"] = function(global,require,module,exports) {\n/**\n * React Router DOM v6.30.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('react'), require('react-dom'), require('react-router'), require('@remix-run/router')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'react', 'react-dom', 'react-router', '@remix-run/router'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.ReactRouterDOM = {}, global.React, global.ReactDOM, global.ReactRouter, global.RemixRouter));\n})(this, (function (exports, React, ReactDOM, reactRouter, router) { 'use strict';\n\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = Object.create(null);\n    if (e) {\n      Object.keys(e).forEach(function (k) {\n        if (k !== 'default') {\n          var d = Object.getOwnPropertyDescriptor(e, k);\n          Object.defineProperty(n, k, d.get ? d : {\n            enumerable: true,\n            get: function () { return e[k]; }\n          });\n        }\n      });\n    }\n    n[\"default\"] = e;\n    return Object.freeze(n);\n  }\n\n  var React__namespace = /*#__PURE__*/_interopNamespace(React);\n  var ReactDOM__namespace = /*#__PURE__*/_interopNamespace(ReactDOM);\n\n  function _extends() {\n    _extends = Object.assign ? Object.assign.bind() : function (target) {\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i];\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n      return target;\n    };\n    return _extends.apply(this, arguments);\n  }\n  function _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for (i = 0; i < sourceKeys.length; i++) {\n      key = sourceKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      target[key] = source[key];\n    }\n    return target;\n  }\n\n  const defaultMethod = \"get\";\n  const defaultEncType = \"application/x-www-form-urlencoded\";\n  function isHtmlElement(object) {\n    return object != null && typeof object.tagName === \"string\";\n  }\n  function isButtonElement(object) {\n    return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n  }\n  function isFormElement(object) {\n    return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n  }\n  function isInputElement(object) {\n    return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n  }\n  function isModifiedEvent(event) {\n    return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n  }\n  function shouldProcessLinkClick(event, target) {\n    return event.button === 0 && (\n    // Ignore everything but left clicks\n    !target || target === \"_self\") &&\n    // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n    ;\n  }\n\n  /**\n   * Creates a URLSearchParams object using the given initializer.\n   *\n   * This is identical to `new URLSearchParams(init)` except it also\n   * supports arrays as values in the object form of the initializer\n   * instead of just strings. This is convenient when you need multiple\n   * values for a given key, but don't want to use an array initializer.\n   *\n   * For example, instead of:\n   *\n   *   let searchParams = new URLSearchParams([\n   *     ['sort', 'name'],\n   *     ['sort', 'price']\n   *   ]);\n   *\n   * you can do:\n   *\n   *   let searchParams = createSearchParams({\n   *     sort: ['name', 'price']\n   *   });\n   */\n  function createSearchParams(init) {\n    if (init === void 0) {\n      init = \"\";\n    }\n    return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo, key) => {\n      let value = init[key];\n      return memo.concat(Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]]);\n    }, []));\n  }\n  function getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n    let searchParams = createSearchParams(locationSearch);\n    if (defaultSearchParams) {\n      // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n      // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n      // web extensions. Relevant Bugzilla tickets:\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n      defaultSearchParams.forEach((_, key) => {\n        if (!searchParams.has(key)) {\n          defaultSearchParams.getAll(key).forEach(value => {\n            searchParams.append(key, value);\n          });\n        }\n      });\n    }\n    return searchParams;\n  }\n\n  // Thanks https://github.com/sindresorhus/type-fest!\n\n  // One-time check for submitter support\n  let _formDataSupportsSubmitter = null;\n  function isFormDataSubmitterSupported() {\n    if (_formDataSupportsSubmitter === null) {\n      try {\n        new FormData(document.createElement(\"form\"),\n        // @ts-expect-error if FormData supports the submitter parameter, this will throw\n        0);\n        _formDataSupportsSubmitter = false;\n      } catch (e) {\n        _formDataSupportsSubmitter = true;\n      }\n    }\n    return _formDataSupportsSubmitter;\n  }\n\n  /**\n   * Submit options shared by both navigations and fetchers\n   */\n\n  /**\n   * Submit options available to fetchers\n   */\n\n  /**\n   * Submit options available to navigations\n   */\n\n  const supportedFormEncTypes = new Set([\"application/x-www-form-urlencoded\", \"multipart/form-data\", \"text/plain\"]);\n  function getFormEncType(encType) {\n    if (encType != null && !supportedFormEncTypes.has(encType)) {\n      router.UNSAFE_warning(false, \"\\\"\" + encType + \"\\\" is not a valid `encType` for `<Form>`/`<fetcher.Form>` \" + (\"and will default to \\\"\" + defaultEncType + \"\\\"\")) ;\n      return null;\n    }\n    return encType;\n  }\n  function getFormSubmissionInfo(target, basename) {\n    let method;\n    let action;\n    let encType;\n    let formData;\n    let body;\n    if (isFormElement(target)) {\n      // When grabbing the action from the element, it will have had the basename\n      // prefixed to ensure non-JS scenarios work, so strip it since we'll\n      // re-prefix in the router\n      let attr = target.getAttribute(\"action\");\n      action = attr ? router.stripBasename(attr, basename) : null;\n      method = target.getAttribute(\"method\") || defaultMethod;\n      encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n      formData = new FormData(target);\n    } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n      let form = target.form;\n      if (form == null) {\n        throw new Error(\"Cannot submit a <button> or <input type=\\\"submit\\\"> without a <form>\");\n      }\n\n      // <button>/<input type=\"submit\"> may override attributes of <form>\n\n      // When grabbing the action from the element, it will have had the basename\n      // prefixed to ensure non-JS scenarios work, so strip it since we'll\n      // re-prefix in the router\n      let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n      action = attr ? router.stripBasename(attr, basename) : null;\n      method = target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n      encType = getFormEncType(target.getAttribute(\"formenctype\")) || getFormEncType(form.getAttribute(\"enctype\")) || defaultEncType;\n\n      // Build a FormData object populated from a form and submitter\n      formData = new FormData(form, target);\n\n      // If this browser doesn't support the `FormData(el, submitter)` format,\n      // then tack on the submitter value at the end.  This is a lightweight\n      // solution that is not 100% spec compliant.  For complete support in older\n      // browsers, consider using the `formdata-submitter-polyfill` package\n      if (!isFormDataSubmitterSupported()) {\n        let {\n          name,\n          type,\n          value\n        } = target;\n        if (type === \"image\") {\n          let prefix = name ? name + \".\" : \"\";\n          formData.append(prefix + \"x\", \"0\");\n          formData.append(prefix + \"y\", \"0\");\n        } else if (name) {\n          formData.append(name, value);\n        }\n      }\n    } else if (isHtmlElement(target)) {\n      throw new Error(\"Cannot submit element that is not <form>, <button>, or \" + \"<input type=\\\"submit|image\\\">\");\n    } else {\n      method = defaultMethod;\n      action = null;\n      encType = defaultEncType;\n      body = target;\n    }\n\n    // Send body for <Form encType=\"text/plain\" so we encode it into text\n    if (formData && encType === \"text/plain\") {\n      body = formData;\n      formData = undefined;\n    }\n    return {\n      action,\n      method: method.toLowerCase(),\n      encType,\n      formData,\n      body\n    };\n  }\n\n  const _excluded = [\"onClick\", \"relative\", \"reloadDocument\", \"replace\", \"state\", \"target\", \"to\", \"preventScrollReset\", \"viewTransition\"],\n    _excluded2 = [\"aria-current\", \"caseSensitive\", \"className\", \"end\", \"style\", \"to\", \"viewTransition\", \"children\"],\n    _excluded3 = [\"fetcherKey\", \"navigate\", \"reloadDocument\", \"replace\", \"state\", \"method\", \"action\", \"onSubmit\", \"relative\", \"preventScrollReset\", \"viewTransition\"];\n  //#endregion\n  // HEY YOU! DON'T TOUCH THIS VARIABLE!\n  //\n  // It is replaced with the proper version at build time via a babel plugin in\n  // the rollup config.\n  //\n  // Export a global property onto the window for React Router detection by the\n  // Core Web Vitals Technology Report.  This way they can configure the `wappalyzer`\n  // to detect and properly classify live websites as being built with React Router:\n  // https://github.com/HTTPArchive/wappalyzer/blob/main/src/technologies/r.json\n  const REACT_ROUTER_VERSION = \"6\";\n  try {\n    window.__reactRouterVersion = REACT_ROUTER_VERSION;\n  } catch (e) {\n    // no-op\n  }\n\n  ////////////////////////////////////////////////////////////////////////////////\n  //#region Routers\n  ////////////////////////////////////////////////////////////////////////////////\n  function createBrowserRouter(routes, opts) {\n    return router.createRouter({\n      basename: opts == null ? void 0 : opts.basename,\n      future: _extends({}, opts == null ? void 0 : opts.future, {\n        v7_prependBasename: true\n      }),\n      history: router.createBrowserHistory({\n        window: opts == null ? void 0 : opts.window\n      }),\n      hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n      routes,\n      mapRouteProperties: reactRouter.UNSAFE_mapRouteProperties,\n      dataStrategy: opts == null ? void 0 : opts.dataStrategy,\n      patchRoutesOnNavigation: opts == null ? void 0 : opts.patchRoutesOnNavigation,\n      window: opts == null ? void 0 : opts.window\n    }).initialize();\n  }\n  function createHashRouter(routes, opts) {\n    return router.createRouter({\n      basename: opts == null ? void 0 : opts.basename,\n      future: _extends({}, opts == null ? void 0 : opts.future, {\n        v7_prependBasename: true\n      }),\n      history: router.createHashHistory({\n        window: opts == null ? void 0 : opts.window\n      }),\n      hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n      routes,\n      mapRouteProperties: reactRouter.UNSAFE_mapRouteProperties,\n      dataStrategy: opts == null ? void 0 : opts.dataStrategy,\n      patchRoutesOnNavigation: opts == null ? void 0 : opts.patchRoutesOnNavigation,\n      window: opts == null ? void 0 : opts.window\n    }).initialize();\n  }\n  function parseHydrationData() {\n    var _window;\n    let state = (_window = window) == null ? void 0 : _window.__staticRouterHydrationData;\n    if (state && state.errors) {\n      state = _extends({}, state, {\n        errors: deserializeErrors(state.errors)\n      });\n    }\n    return state;\n  }\n  function deserializeErrors(errors) {\n    if (!errors) return null;\n    let entries = Object.entries(errors);\n    let serialized = {};\n    for (let [key, val] of entries) {\n      // Hey you!  If you change this, please change the corresponding logic in\n      // serializeErrors in react-router-dom/server.tsx :)\n      if (val && val.__type === \"RouteErrorResponse\") {\n        serialized[key] = new router.UNSAFE_ErrorResponseImpl(val.status, val.statusText, val.data, val.internal === true);\n      } else if (val && val.__type === \"Error\") {\n        // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n        if (val.__subType) {\n          let ErrorConstructor = window[val.__subType];\n          if (typeof ErrorConstructor === \"function\") {\n            try {\n              // @ts-expect-error\n              let error = new ErrorConstructor(val.message);\n              // Wipe away the client-side stack trace.  Nothing to fill it in with\n              // because we don't serialize SSR stack traces for security reasons\n              error.stack = \"\";\n              serialized[key] = error;\n            } catch (e) {\n              // no-op - fall through and create a normal Error\n            }\n          }\n        }\n        if (serialized[key] == null) {\n          let error = new Error(val.message);\n          // Wipe away the client-side stack trace.  Nothing to fill it in with\n          // because we don't serialize SSR stack traces for security reasons\n          error.stack = \"\";\n          serialized[key] = error;\n        }\n      } else {\n        serialized[key] = val;\n      }\n    }\n    return serialized;\n  }\n\n  //#endregion\n\n  ////////////////////////////////////////////////////////////////////////////////\n  //#region Contexts\n  ////////////////////////////////////////////////////////////////////////////////\n  const ViewTransitionContext = /*#__PURE__*/React__namespace.createContext({\n    isTransitioning: false\n  });\n  {\n    ViewTransitionContext.displayName = \"ViewTransition\";\n  }\n\n  // TODO: (v7) Change the useFetcher data from `any` to `unknown`\n\n  const FetchersContext = /*#__PURE__*/React__namespace.createContext(new Map());\n  {\n    FetchersContext.displayName = \"Fetchers\";\n  }\n\n  //#endregion\n\n  ////////////////////////////////////////////////////////////////////////////////\n  //#region Components\n  ////////////////////////////////////////////////////////////////////////////////\n\n  /**\n    Webpack + React 17 fails to compile on any of the following because webpack\n    complains that `startTransition` doesn't exist in `React`:\n    * import { startTransition } from \"react\"\n    * import * as React from from \"react\";\n      \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n    * import * as React from from \"react\";\n      \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n    Moving it to a constant such as the following solves the Webpack/React 17 issue:\n    * import * as React from from \"react\";\n      const START_TRANSITION = \"startTransition\";\n      START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n    However, that introduces webpack/terser minification issues in production builds\n    in React 18 where minification/obfuscation ends up removing the call of\n    React.startTransition entirely from the first half of the ternary.  Grabbing\n    this exported reference once up front resolves that issue.\n\n    See https://github.com/remix-run/react-router/issues/10579\n  */\n  const START_TRANSITION = \"startTransition\";\n  const startTransitionImpl = React__namespace[START_TRANSITION];\n  const FLUSH_SYNC = \"flushSync\";\n  const flushSyncImpl = ReactDOM__namespace[FLUSH_SYNC];\n  const USE_ID = \"useId\";\n  const useIdImpl = React__namespace[USE_ID];\n  function startTransitionSafe(cb) {\n    if (startTransitionImpl) {\n      startTransitionImpl(cb);\n    } else {\n      cb();\n    }\n  }\n  function flushSyncSafe(cb) {\n    if (flushSyncImpl) {\n      flushSyncImpl(cb);\n    } else {\n      cb();\n    }\n  }\n  class Deferred {\n    // @ts-expect-error - no initializer\n\n    // @ts-expect-error - no initializer\n\n    constructor() {\n      this.status = \"pending\";\n      this.promise = new Promise((resolve, reject) => {\n        this.resolve = value => {\n          if (this.status === \"pending\") {\n            this.status = \"resolved\";\n            resolve(value);\n          }\n        };\n        this.reject = reason => {\n          if (this.status === \"pending\") {\n            this.status = \"rejected\";\n            reject(reason);\n          }\n        };\n      });\n    }\n  }\n\n  /**\n   * Given a Remix Router instance, render the appropriate UI\n   */\n  function RouterProvider(_ref) {\n    let {\n      fallbackElement,\n      router: router$1,\n      future\n    } = _ref;\n    let [state, setStateImpl] = React__namespace.useState(router$1.state);\n    let [pendingState, setPendingState] = React__namespace.useState();\n    let [vtContext, setVtContext] = React__namespace.useState({\n      isTransitioning: false\n    });\n    let [renderDfd, setRenderDfd] = React__namespace.useState();\n    let [transition, setTransition] = React__namespace.useState();\n    let [interruption, setInterruption] = React__namespace.useState();\n    let fetcherData = React__namespace.useRef(new Map());\n    let {\n      v7_startTransition\n    } = future || {};\n    let optInStartTransition = React__namespace.useCallback(cb => {\n      if (v7_startTransition) {\n        startTransitionSafe(cb);\n      } else {\n        cb();\n      }\n    }, [v7_startTransition]);\n    let setState = React__namespace.useCallback((newState, _ref2) => {\n      let {\n        deletedFetchers,\n        flushSync: flushSync,\n        viewTransitionOpts: viewTransitionOpts\n      } = _ref2;\n      newState.fetchers.forEach((fetcher, key) => {\n        if (fetcher.data !== undefined) {\n          fetcherData.current.set(key, fetcher.data);\n        }\n      });\n      deletedFetchers.forEach(key => fetcherData.current.delete(key));\n      let isViewTransitionUnavailable = router$1.window == null || router$1.window.document == null || typeof router$1.window.document.startViewTransition !== \"function\";\n\n      // If this isn't a view transition or it's not available in this browser,\n      // just update and be done with it\n      if (!viewTransitionOpts || isViewTransitionUnavailable) {\n        if (flushSync) {\n          flushSyncSafe(() => setStateImpl(newState));\n        } else {\n          optInStartTransition(() => setStateImpl(newState));\n        }\n        return;\n      }\n\n      // flushSync + startViewTransition\n      if (flushSync) {\n        // Flush through the context to mark DOM elements as transition=ing\n        flushSyncSafe(() => {\n          // Cancel any pending transitions\n          if (transition) {\n            renderDfd && renderDfd.resolve();\n            transition.skipTransition();\n          }\n          setVtContext({\n            isTransitioning: true,\n            flushSync: true,\n            currentLocation: viewTransitionOpts.currentLocation,\n            nextLocation: viewTransitionOpts.nextLocation\n          });\n        });\n\n        // Update the DOM\n        let t = router$1.window.document.startViewTransition(() => {\n          flushSyncSafe(() => setStateImpl(newState));\n        });\n\n        // Clean up after the animation completes\n        t.finished.finally(() => {\n          flushSyncSafe(() => {\n            setRenderDfd(undefined);\n            setTransition(undefined);\n            setPendingState(undefined);\n            setVtContext({\n              isTransitioning: false\n            });\n          });\n        });\n        flushSyncSafe(() => setTransition(t));\n        return;\n      }\n\n      // startTransition + startViewTransition\n      if (transition) {\n        // Interrupting an in-progress transition, cancel and let everything flush\n        // out, and then kick off a new transition from the interruption state\n        renderDfd && renderDfd.resolve();\n        transition.skipTransition();\n        setInterruption({\n          state: newState,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation\n        });\n      } else {\n        // Completed navigation update with opted-in view transitions, let 'er rip\n        setPendingState(newState);\n        setVtContext({\n          isTransitioning: true,\n          flushSync: false,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation\n        });\n      }\n    }, [router$1.window, transition, renderDfd, fetcherData, optInStartTransition]);\n\n    // Need to use a layout effect here so we are subscribed early enough to\n    // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n    React__namespace.useLayoutEffect(() => router$1.subscribe(setState), [router$1, setState]);\n\n    // When we start a view transition, create a Deferred we can use for the\n    // eventual \"completed\" render\n    React__namespace.useEffect(() => {\n      if (vtContext.isTransitioning && !vtContext.flushSync) {\n        setRenderDfd(new Deferred());\n      }\n    }, [vtContext]);\n\n    // Once the deferred is created, kick off startViewTransition() to update the\n    // DOM and then wait on the Deferred to resolve (indicating the DOM update has\n    // happened)\n    React__namespace.useEffect(() => {\n      if (renderDfd && pendingState && router$1.window) {\n        let newState = pendingState;\n        let renderPromise = renderDfd.promise;\n        let transition = router$1.window.document.startViewTransition(async () => {\n          optInStartTransition(() => setStateImpl(newState));\n          await renderPromise;\n        });\n        transition.finished.finally(() => {\n          setRenderDfd(undefined);\n          setTransition(undefined);\n          setPendingState(undefined);\n          setVtContext({\n            isTransitioning: false\n          });\n        });\n        setTransition(transition);\n      }\n    }, [optInStartTransition, pendingState, renderDfd, router$1.window]);\n\n    // When the new location finally renders and is committed to the DOM, this\n    // effect will run to resolve the transition\n    React__namespace.useEffect(() => {\n      if (renderDfd && pendingState && state.location.key === pendingState.location.key) {\n        renderDfd.resolve();\n      }\n    }, [renderDfd, transition, state.location, pendingState]);\n\n    // If we get interrupted with a new navigation during a transition, we skip\n    // the active transition, let it cleanup, then kick it off again here\n    React__namespace.useEffect(() => {\n      if (!vtContext.isTransitioning && interruption) {\n        setPendingState(interruption.state);\n        setVtContext({\n          isTransitioning: true,\n          flushSync: false,\n          currentLocation: interruption.currentLocation,\n          nextLocation: interruption.nextLocation\n        });\n        setInterruption(undefined);\n      }\n    }, [vtContext.isTransitioning, interruption]);\n    React__namespace.useEffect(() => {\n      router.UNSAFE_warning(fallbackElement == null || !router$1.future.v7_partialHydration, \"`<RouterProvider fallbackElement>` is deprecated when using \" + \"`v7_partialHydration`, use a `HydrateFallback` component instead\") ;\n      // Only log this once on initial mount\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    let navigator = React__namespace.useMemo(() => {\n      return {\n        createHref: router$1.createHref,\n        encodeLocation: router$1.encodeLocation,\n        go: n => router$1.navigate(n),\n        push: (to, state, opts) => router$1.navigate(to, {\n          state,\n          preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n        }),\n        replace: (to, state, opts) => router$1.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n        })\n      };\n    }, [router$1]);\n    let basename = router$1.basename || \"/\";\n    let dataRouterContext = React__namespace.useMemo(() => ({\n      router: router$1,\n      navigator,\n      static: false,\n      basename\n    }), [router$1, navigator, basename]);\n    let routerFuture = React__namespace.useMemo(() => ({\n      v7_relativeSplatPath: router$1.future.v7_relativeSplatPath\n    }), [router$1.future.v7_relativeSplatPath]);\n    React__namespace.useEffect(() => reactRouter.UNSAFE_logV6DeprecationWarnings(future, router$1.future), [future, router$1.future]);\n\n    // The fragment and {null} here are important!  We need them to keep React 18's\n    // useId happy when we are server-rendering since we may have a <script> here\n    // containing the hydrated server-side staticContext (from StaticRouterProvider).\n    // useId relies on the component tree structure to generate deterministic id's\n    // so we need to ensure it remains the same on the client even though\n    // we don't need the <script> tag\n    return /*#__PURE__*/React__namespace.createElement(React__namespace.Fragment, null, /*#__PURE__*/React__namespace.createElement(reactRouter.UNSAFE_DataRouterContext.Provider, {\n      value: dataRouterContext\n    }, /*#__PURE__*/React__namespace.createElement(reactRouter.UNSAFE_DataRouterStateContext.Provider, {\n      value: state\n    }, /*#__PURE__*/React__namespace.createElement(FetchersContext.Provider, {\n      value: fetcherData.current\n    }, /*#__PURE__*/React__namespace.createElement(ViewTransitionContext.Provider, {\n      value: vtContext\n    }, /*#__PURE__*/React__namespace.createElement(reactRouter.Router, {\n      basename: basename,\n      location: state.location,\n      navigationType: state.historyAction,\n      navigator: navigator,\n      future: routerFuture\n    }, state.initialized || router$1.future.v7_partialHydration ? /*#__PURE__*/React__namespace.createElement(MemoizedDataRoutes, {\n      routes: router$1.routes,\n      future: router$1.future,\n      state: state\n    }) : fallbackElement))))), null);\n  }\n\n  // Memoize to avoid re-renders when updating `ViewTransitionContext`\n  const MemoizedDataRoutes = /*#__PURE__*/React__namespace.memo(DataRoutes);\n  function DataRoutes(_ref3) {\n    let {\n      routes,\n      future,\n      state\n    } = _ref3;\n    return reactRouter.UNSAFE_useRoutesImpl(routes, undefined, state, future);\n  }\n  /**\n   * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n   */\n  function BrowserRouter(_ref4) {\n    let {\n      basename,\n      children,\n      future,\n      window\n    } = _ref4;\n    let historyRef = React__namespace.useRef();\n    if (historyRef.current == null) {\n      historyRef.current = router.createBrowserHistory({\n        window,\n        v5Compat: true\n      });\n    }\n    let history = historyRef.current;\n    let [state, setStateImpl] = React__namespace.useState({\n      action: history.action,\n      location: history.location\n    });\n    let {\n      v7_startTransition\n    } = future || {};\n    let setState = React__namespace.useCallback(newState => {\n      v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n    }, [setStateImpl, v7_startTransition]);\n    React__namespace.useLayoutEffect(() => history.listen(setState), [history, setState]);\n    React__namespace.useEffect(() => reactRouter.UNSAFE_logV6DeprecationWarnings(future), [future]);\n    return /*#__PURE__*/React__namespace.createElement(reactRouter.Router, {\n      basename: basename,\n      children: children,\n      location: state.location,\n      navigationType: state.action,\n      navigator: history,\n      future: future\n    });\n  }\n  /**\n   * A `<Router>` for use in web browsers. Stores the location in the hash\n   * portion of the URL so it is not sent to the server.\n   */\n  function HashRouter(_ref5) {\n    let {\n      basename,\n      children,\n      future,\n      window\n    } = _ref5;\n    let historyRef = React__namespace.useRef();\n    if (historyRef.current == null) {\n      historyRef.current = router.createHashHistory({\n        window,\n        v5Compat: true\n      });\n    }\n    let history = historyRef.current;\n    let [state, setStateImpl] = React__namespace.useState({\n      action: history.action,\n      location: history.location\n    });\n    let {\n      v7_startTransition\n    } = future || {};\n    let setState = React__namespace.useCallback(newState => {\n      v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n    }, [setStateImpl, v7_startTransition]);\n    React__namespace.useLayoutEffect(() => history.listen(setState), [history, setState]);\n    React__namespace.useEffect(() => reactRouter.UNSAFE_logV6DeprecationWarnings(future), [future]);\n    return /*#__PURE__*/React__namespace.createElement(reactRouter.Router, {\n      basename: basename,\n      children: children,\n      location: state.location,\n      navigationType: state.action,\n      navigator: history,\n      future: future\n    });\n  }\n  /**\n   * A `<Router>` that accepts a pre-instantiated history object. It's important\n   * to note that using your own history object is highly discouraged and may add\n   * two versions of the history library to your bundles unless you use the same\n   * version of the history library that React Router uses internally.\n   */\n  function HistoryRouter(_ref6) {\n    let {\n      basename,\n      children,\n      future,\n      history\n    } = _ref6;\n    let [state, setStateImpl] = React__namespace.useState({\n      action: history.action,\n      location: history.location\n    });\n    let {\n      v7_startTransition\n    } = future || {};\n    let setState = React__namespace.useCallback(newState => {\n      v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n    }, [setStateImpl, v7_startTransition]);\n    React__namespace.useLayoutEffect(() => history.listen(setState), [history, setState]);\n    React__namespace.useEffect(() => reactRouter.UNSAFE_logV6DeprecationWarnings(future), [future]);\n    return /*#__PURE__*/React__namespace.createElement(reactRouter.Router, {\n      basename: basename,\n      children: children,\n      location: state.location,\n      navigationType: state.action,\n      navigator: history,\n      future: future\n    });\n  }\n  {\n    HistoryRouter.displayName = \"unstable_HistoryRouter\";\n  }\n  const isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\n  const ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\n  /**\n   * The public API for rendering a history-aware `<a>`.\n   */\n  const Link = /*#__PURE__*/React__namespace.forwardRef(function LinkWithRef(_ref7, ref) {\n    let {\n        onClick,\n        relative,\n        reloadDocument,\n        replace,\n        state,\n        target,\n        to,\n        preventScrollReset,\n        viewTransition\n      } = _ref7,\n      rest = _objectWithoutPropertiesLoose(_ref7, _excluded);\n    let {\n      basename\n    } = React__namespace.useContext(reactRouter.UNSAFE_NavigationContext);\n\n    // Rendered into <a href> for absolute URLs\n    let absoluteHref;\n    let isExternal = false;\n    if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n      // Render the absolute href server- and client-side\n      absoluteHref = to;\n\n      // Only check for external origins client-side\n      if (isBrowser) {\n        try {\n          let currentUrl = new URL(window.location.href);\n          let targetUrl = to.startsWith(\"//\") ? new URL(currentUrl.protocol + to) : new URL(to);\n          let path = router.stripBasename(targetUrl.pathname, basename);\n          if (targetUrl.origin === currentUrl.origin && path != null) {\n            // Strip the protocol/origin/basename for same-origin absolute URLs\n            to = path + targetUrl.search + targetUrl.hash;\n          } else {\n            isExternal = true;\n          }\n        } catch (e) {\n          // We can't do external URL detection without a valid URL\n          router.UNSAFE_warning(false, \"<Link to=\\\"\" + to + \"\\\"> contains an invalid URL which will probably break \" + \"when clicked - please update to a valid URL path.\") ;\n        }\n      }\n    }\n\n    // Rendered into <a href> for relative URLs\n    let href = reactRouter.useHref(to, {\n      relative\n    });\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n      viewTransition\n    });\n    function handleClick(event) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n    return (\n      /*#__PURE__*/\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      React__namespace.createElement(\"a\", _extends({}, rest, {\n        href: absoluteHref || href,\n        onClick: isExternal || reloadDocument ? onClick : handleClick,\n        ref: ref,\n        target: target\n      }))\n    );\n  });\n  {\n    Link.displayName = \"Link\";\n  }\n  /**\n   * A `<Link>` wrapper that knows if it's \"active\" or not.\n   */\n  const NavLink = /*#__PURE__*/React__namespace.forwardRef(function NavLinkWithRef(_ref8, ref) {\n    let {\n        \"aria-current\": ariaCurrentProp = \"page\",\n        caseSensitive = false,\n        className: classNameProp = \"\",\n        end = false,\n        style: styleProp,\n        to,\n        viewTransition,\n        children\n      } = _ref8,\n      rest = _objectWithoutPropertiesLoose(_ref8, _excluded2);\n    let path = reactRouter.useResolvedPath(to, {\n      relative: rest.relative\n    });\n    let location = reactRouter.useLocation();\n    let routerState = React__namespace.useContext(reactRouter.UNSAFE_DataRouterStateContext);\n    let {\n      navigator,\n      basename\n    } = React__namespace.useContext(reactRouter.UNSAFE_NavigationContext);\n    let isTransitioning = routerState != null &&\n    // Conditional usage is OK here because the usage of a data router is static\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useViewTransitionState(path) && viewTransition === true;\n    let toPathname = navigator.encodeLocation ? navigator.encodeLocation(path).pathname : path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\n      toPathname = toPathname.toLowerCase();\n    }\n    if (nextLocationPathname && basename) {\n      nextLocationPathname = router.stripBasename(nextLocationPathname, basename) || nextLocationPathname;\n    }\n\n    // If the `to` has a trailing slash, look at that exact spot.  Otherwise,\n    // we're looking for a slash _after_ what's in `to`.  For example:\n    //\n    // <NavLink to=\"/users\"> and <NavLink to=\"/users/\">\n    // both want to look for a / at index 6 to match URL `/users/matt`\n    const endSlashPosition = toPathname !== \"/\" && toPathname.endsWith(\"/\") ? toPathname.length - 1 : toPathname.length;\n    let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(endSlashPosition) === \"/\";\n    let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === \"/\");\n    let renderProps = {\n      isActive,\n      isPending,\n      isTransitioning\n    };\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n    let className;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp(renderProps);\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [classNameProp, isActive ? \"active\" : null, isPending ? \"pending\" : null, isTransitioning ? \"transitioning\" : null].filter(Boolean).join(\" \");\n    }\n    let style = typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n    return /*#__PURE__*/React__namespace.createElement(Link, _extends({}, rest, {\n      \"aria-current\": ariaCurrent,\n      className: className,\n      ref: ref,\n      style: style,\n      to: to,\n      viewTransition: viewTransition\n    }), typeof children === \"function\" ? children(renderProps) : children);\n  });\n  {\n    NavLink.displayName = \"NavLink\";\n  }\n\n  /**\n   * Form props shared by navigations and fetchers\n   */\n\n  /**\n   * Form props available to fetchers\n   */\n\n  /**\n   * Form props available to navigations\n   */\n\n  /**\n   * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n   * that the interaction with the server is with `fetch` instead of new document\n   * requests, allowing components to add nicer UX to the page as the form is\n   * submitted and returns with data.\n   */\n  const Form = /*#__PURE__*/React__namespace.forwardRef((_ref9, forwardedRef) => {\n    let {\n        fetcherKey,\n        navigate,\n        reloadDocument,\n        replace,\n        state,\n        method = defaultMethod,\n        action,\n        onSubmit,\n        relative,\n        preventScrollReset,\n        viewTransition\n      } = _ref9,\n      props = _objectWithoutPropertiesLoose(_ref9, _excluded3);\n    let submit = useSubmit();\n    let formAction = useFormAction(action, {\n      relative\n    });\n    let formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n    let submitHandler = event => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n      let submitter = event.nativeEvent.submitter;\n      let submitMethod = (submitter == null ? void 0 : submitter.getAttribute(\"formmethod\")) || method;\n      submit(submitter || event.currentTarget, {\n        fetcherKey,\n        method: submitMethod,\n        navigate,\n        replace,\n        state,\n        relative,\n        preventScrollReset,\n        viewTransition\n      });\n    };\n    return /*#__PURE__*/React__namespace.createElement(\"form\", _extends({\n      ref: forwardedRef,\n      method: formMethod,\n      action: formAction,\n      onSubmit: reloadDocument ? onSubmit : submitHandler\n    }, props));\n  });\n  {\n    Form.displayName = \"Form\";\n  }\n  /**\n   * This component will emulate the browser's scroll restoration on location\n   * changes.\n   */\n  function ScrollRestoration(_ref10) {\n    let {\n      getKey,\n      storageKey\n    } = _ref10;\n    useScrollRestoration({\n      getKey,\n      storageKey\n    });\n    return null;\n  }\n  {\n    ScrollRestoration.displayName = \"ScrollRestoration\";\n  }\n  //#endregion\n\n  ////////////////////////////////////////////////////////////////////////////////\n  //#region Hooks\n  ////////////////////////////////////////////////////////////////////////////////\n  var DataRouterHook = /*#__PURE__*/function (DataRouterHook) {\n    DataRouterHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n    DataRouterHook[\"UseSubmit\"] = \"useSubmit\";\n    DataRouterHook[\"UseSubmitFetcher\"] = \"useSubmitFetcher\";\n    DataRouterHook[\"UseFetcher\"] = \"useFetcher\";\n    DataRouterHook[\"useViewTransitionState\"] = \"useViewTransitionState\";\n    return DataRouterHook;\n  }(DataRouterHook || {});\n  var DataRouterStateHook = /*#__PURE__*/function (DataRouterStateHook) {\n    DataRouterStateHook[\"UseFetcher\"] = \"useFetcher\";\n    DataRouterStateHook[\"UseFetchers\"] = \"useFetchers\";\n    DataRouterStateHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n    return DataRouterStateHook;\n  }(DataRouterStateHook || {}); // Internal hooks\n  function getDataRouterConsoleError(hookName) {\n    return hookName + \" must be used within a data router.  See https://reactrouter.com/v6/routers/picking-a-router.\";\n  }\n  function useDataRouterContext(hookName) {\n    let ctx = React__namespace.useContext(reactRouter.UNSAFE_DataRouterContext);\n    !ctx ? router.UNSAFE_invariant(false, getDataRouterConsoleError(hookName))  : void 0;\n    return ctx;\n  }\n  function useDataRouterState(hookName) {\n    let state = React__namespace.useContext(reactRouter.UNSAFE_DataRouterStateContext);\n    !state ? router.UNSAFE_invariant(false, getDataRouterConsoleError(hookName))  : void 0;\n    return state;\n  }\n\n  // External hooks\n\n  /**\n   * Handles the click behavior for router `<Link>` components. This is useful if\n   * you need to create custom `<Link>` components with the same click behavior we\n   * use in our exported `<Link>`.\n   */\n  function useLinkClickHandler(to, _temp) {\n    let {\n      target,\n      replace: replaceProp,\n      state,\n      preventScrollReset,\n      relative,\n      viewTransition\n    } = _temp === void 0 ? {} : _temp;\n    let navigate = reactRouter.useNavigate();\n    let location = reactRouter.useLocation();\n    let path = reactRouter.useResolvedPath(to, {\n      relative\n    });\n    return React__namespace.useCallback(event => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explicitly set\n        let replace = replaceProp !== undefined ? replaceProp : reactRouter.createPath(location) === reactRouter.createPath(path);\n        navigate(to, {\n          replace,\n          state,\n          preventScrollReset,\n          relative,\n          viewTransition\n        });\n      }\n    }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative, viewTransition]);\n  }\n\n  /**\n   * A convenient wrapper for reading and writing search parameters via the\n   * URLSearchParams interface.\n   */\n  function useSearchParams(defaultInit) {\n    router.UNSAFE_warning(typeof URLSearchParams !== \"undefined\", \"You cannot use the `useSearchParams` hook in a browser that does not \" + \"support the URLSearchParams API. If you need to support Internet \" + \"Explorer 11, we recommend you load a polyfill such as \" + \"https://github.com/ungap/url-search-params.\") ;\n    let defaultSearchParamsRef = React__namespace.useRef(createSearchParams(defaultInit));\n    let hasSetSearchParamsRef = React__namespace.useRef(false);\n    let location = reactRouter.useLocation();\n    let searchParams = React__namespace.useMemo(() =>\n    // Only merge in the defaults if we haven't yet called setSearchParams.\n    // Once we call that we want those to take precedence, otherwise you can't\n    // remove a param with setSearchParams({}) if it has an initial value\n    getSearchParamsForLocation(location.search, hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current), [location.search]);\n    let navigate = reactRouter.useNavigate();\n    let setSearchParams = React__namespace.useCallback((nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit);\n      hasSetSearchParamsRef.current = true;\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    }, [navigate, searchParams]);\n    return [searchParams, setSearchParams];\n  }\n\n  /**\n   * Submits a HTML `<form>` to the server without reloading the page.\n   */\n\n  /**\n   * Submits a fetcher `<form>` to the server without reloading the page.\n   */\n\n  function validateClientSideSubmission() {\n    if (typeof document === \"undefined\") {\n      throw new Error(\"You are calling submit during the server render. \" + \"Try calling submit within a `useEffect` or callback instead.\");\n    }\n  }\n  let fetcherId = 0;\n  let getUniqueFetcherId = () => \"__\" + String(++fetcherId) + \"__\";\n\n  /**\n   * Returns a function that may be used to programmatically submit a form (or\n   * some arbitrary data) to the server.\n   */\n  function useSubmit() {\n    let {\n      router\n    } = useDataRouterContext(DataRouterHook.UseSubmit);\n    let {\n      basename\n    } = React__namespace.useContext(reactRouter.UNSAFE_NavigationContext);\n    let currentRouteId = reactRouter.UNSAFE_useRouteId();\n    return React__namespace.useCallback(function (target, options) {\n      if (options === void 0) {\n        options = {};\n      }\n      validateClientSideSubmission();\n      let {\n        action,\n        method,\n        encType,\n        formData,\n        body\n      } = getFormSubmissionInfo(target, basename);\n      if (options.navigate === false) {\n        let key = options.fetcherKey || getUniqueFetcherId();\n        router.fetch(key, currentRouteId, options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || method,\n          formEncType: options.encType || encType,\n          flushSync: options.flushSync\n        });\n      } else {\n        router.navigate(options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || method,\n          formEncType: options.encType || encType,\n          replace: options.replace,\n          state: options.state,\n          fromRouteId: currentRouteId,\n          flushSync: options.flushSync,\n          viewTransition: options.viewTransition\n        });\n      }\n    }, [router, basename, currentRouteId]);\n  }\n\n  // v7: Eventually we should deprecate this entirely in favor of using the\n  // router method directly?\n  function useFormAction(action, _temp2) {\n    let {\n      relative\n    } = _temp2 === void 0 ? {} : _temp2;\n    let {\n      basename\n    } = React__namespace.useContext(reactRouter.UNSAFE_NavigationContext);\n    let routeContext = React__namespace.useContext(reactRouter.UNSAFE_RouteContext);\n    !routeContext ? router.UNSAFE_invariant(false, \"useFormAction must be used inside a RouteContext\")  : void 0;\n    let [match] = routeContext.matches.slice(-1);\n    // Shallow clone path so we can modify it below, otherwise we modify the\n    // object referenced by useMemo inside useResolvedPath\n    let path = _extends({}, reactRouter.useResolvedPath(action ? action : \".\", {\n      relative\n    }));\n\n    // If no action was specified, browsers will persist current search params\n    // when determining the path, so match that behavior\n    // https://github.com/remix-run/remix/issues/927\n    let location = reactRouter.useLocation();\n    if (action == null) {\n      // Safe to write to this directly here since if action was undefined, we\n      // would have called useResolvedPath(\".\") which will never include a search\n      path.search = location.search;\n\n      // When grabbing search params from the URL, remove any included ?index param\n      // since it might not apply to our contextual route.  We add it back based\n      // on match.route.index below\n      let params = new URLSearchParams(path.search);\n      let indexValues = params.getAll(\"index\");\n      let hasNakedIndexParam = indexValues.some(v => v === \"\");\n      if (hasNakedIndexParam) {\n        params.delete(\"index\");\n        indexValues.filter(v => v).forEach(v => params.append(\"index\", v));\n        let qs = params.toString();\n        path.search = qs ? \"?\" + qs : \"\";\n      }\n    }\n    if ((!action || action === \".\") && match.route.index) {\n      path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n    }\n\n    // If we're operating within a basename, prepend it to the pathname prior\n    // to creating the form action.  If this is a root navigation, then just use\n    // the raw basename which allows the basename to have full control over the\n    // presence of a trailing slash on root actions\n    if (basename !== \"/\") {\n      path.pathname = path.pathname === \"/\" ? basename : router.joinPaths([basename, path.pathname]);\n    }\n    return reactRouter.createPath(path);\n  }\n  // TODO: (v7) Change the useFetcher generic default from `any` to `unknown`\n  /**\n   * Interacts with route loaders and actions without causing a navigation. Great\n   * for any interaction that stays on the same page.\n   */\n  function useFetcher(_temp3) {\n    var _route$matches;\n    let {\n      key\n    } = _temp3 === void 0 ? {} : _temp3;\n    let {\n      router: router$1\n    } = useDataRouterContext(DataRouterHook.UseFetcher);\n    let state = useDataRouterState(DataRouterStateHook.UseFetcher);\n    let fetcherData = React__namespace.useContext(FetchersContext);\n    let route = React__namespace.useContext(reactRouter.UNSAFE_RouteContext);\n    let routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;\n    !fetcherData ? router.UNSAFE_invariant(false, \"useFetcher must be used inside a FetchersContext\")  : void 0;\n    !route ? router.UNSAFE_invariant(false, \"useFetcher must be used inside a RouteContext\")  : void 0;\n    !(routeId != null) ? router.UNSAFE_invariant(false, \"useFetcher can only be used on routes that contain a unique \\\"id\\\"\")  : void 0;\n\n    // Fetcher key handling\n    // OK to call conditionally to feature detect `useId`\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    let defaultKey = useIdImpl ? useIdImpl() : \"\";\n    let [fetcherKey, setFetcherKey] = React__namespace.useState(key || defaultKey);\n    if (key && key !== fetcherKey) {\n      setFetcherKey(key);\n    } else if (!fetcherKey) {\n      // We will only fall through here when `useId` is not available\n      setFetcherKey(getUniqueFetcherId());\n    }\n\n    // Registration/cleanup\n    React__namespace.useEffect(() => {\n      router$1.getFetcher(fetcherKey);\n      return () => {\n        // Tell the router we've unmounted - if v7_fetcherPersist is enabled this\n        // will not delete immediately but instead queue up a delete after the\n        // fetcher returns to an `idle` state\n        router$1.deleteFetcher(fetcherKey);\n      };\n    }, [router$1, fetcherKey]);\n\n    // Fetcher additions\n    let load = React__namespace.useCallback((href, opts) => {\n      !routeId ? router.UNSAFE_invariant(false, \"No routeId available for fetcher.load()\")  : void 0;\n      router$1.fetch(fetcherKey, routeId, href, opts);\n    }, [fetcherKey, routeId, router$1]);\n    let submitImpl = useSubmit();\n    let submit = React__namespace.useCallback((target, opts) => {\n      submitImpl(target, _extends({}, opts, {\n        navigate: false,\n        fetcherKey\n      }));\n    }, [fetcherKey, submitImpl]);\n    let FetcherForm = React__namespace.useMemo(() => {\n      let FetcherForm = /*#__PURE__*/React__namespace.forwardRef((props, ref) => {\n        return /*#__PURE__*/React__namespace.createElement(Form, _extends({}, props, {\n          navigate: false,\n          fetcherKey: fetcherKey,\n          ref: ref\n        }));\n      });\n      {\n        FetcherForm.displayName = \"fetcher.Form\";\n      }\n      return FetcherForm;\n    }, [fetcherKey]);\n\n    // Exposed FetcherWithComponents\n    let fetcher = state.fetchers.get(fetcherKey) || router.IDLE_FETCHER;\n    let data = fetcherData.get(fetcherKey);\n    let fetcherWithComponents = React__namespace.useMemo(() => _extends({\n      Form: FetcherForm,\n      submit,\n      load\n    }, fetcher, {\n      data\n    }), [FetcherForm, submit, load, fetcher, data]);\n    return fetcherWithComponents;\n  }\n\n  /**\n   * Provides all fetchers currently on the page. Useful for layouts and parent\n   * routes that need to provide pending/optimistic UI regarding the fetch.\n   */\n  function useFetchers() {\n    let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n    return Array.from(state.fetchers.entries()).map(_ref11 => {\n      let [key, fetcher] = _ref11;\n      return _extends({}, fetcher, {\n        key\n      });\n    });\n  }\n  const SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\n  let savedScrollPositions = {};\n\n  /**\n   * When rendered inside a RouterProvider, will restore scroll positions on navigations\n   */\n  function useScrollRestoration(_temp4) {\n    let {\n      getKey,\n      storageKey\n    } = _temp4 === void 0 ? {} : _temp4;\n    let {\n      router: router$1\n    } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n    let {\n      restoreScrollPosition,\n      preventScrollReset\n    } = useDataRouterState(DataRouterStateHook.UseScrollRestoration);\n    let {\n      basename\n    } = React__namespace.useContext(reactRouter.UNSAFE_NavigationContext);\n    let location = reactRouter.useLocation();\n    let matches = reactRouter.useMatches();\n    let navigation = reactRouter.useNavigation();\n\n    // Trigger manual scroll restoration while we're active\n    React__namespace.useEffect(() => {\n      window.history.scrollRestoration = \"manual\";\n      return () => {\n        window.history.scrollRestoration = \"auto\";\n      };\n    }, []);\n\n    // Save positions on pagehide\n    usePageHide(React__namespace.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = (getKey ? getKey(location, matches) : null) || location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      try {\n        sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));\n      } catch (error) {\n        router.UNSAFE_warning(false, \"Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (\" + error + \").\") ;\n      }\n      window.history.scrollRestoration = \"auto\";\n    }, [storageKey, getKey, navigation.state, location, matches]));\n\n    // Read in any saved scroll locations\n    if (typeof document !== \"undefined\") {\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      React__namespace.useLayoutEffect(() => {\n        try {\n          let sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);\n          if (sessionPositions) {\n            savedScrollPositions = JSON.parse(sessionPositions);\n          }\n        } catch (e) {\n          // no-op, use default empty object\n        }\n      }, [storageKey]);\n\n      // Enable scroll restoration in the router\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      React__namespace.useLayoutEffect(() => {\n        let getKeyWithoutBasename = getKey && basename !== \"/\" ? (location, matches) => getKey( // Strip the basename to match useLocation()\n        _extends({}, location, {\n          pathname: router.stripBasename(location.pathname, basename) || location.pathname\n        }), matches) : getKey;\n        let disableScrollRestoration = router$1 == null ? void 0 : router$1.enableScrollRestoration(savedScrollPositions, () => window.scrollY, getKeyWithoutBasename);\n        return () => disableScrollRestoration && disableScrollRestoration();\n      }, [router$1, basename, getKey]);\n\n      // Restore scrolling when state.restoreScrollPosition changes\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      React__namespace.useLayoutEffect(() => {\n        // Explicit false means don't do anything (used for submissions)\n        if (restoreScrollPosition === false) {\n          return;\n        }\n\n        // been here before, scroll to it\n        if (typeof restoreScrollPosition === \"number\") {\n          window.scrollTo(0, restoreScrollPosition);\n          return;\n        }\n\n        // try to scroll to the hash\n        if (location.hash) {\n          let el = document.getElementById(decodeURIComponent(location.hash.slice(1)));\n          if (el) {\n            el.scrollIntoView();\n            return;\n          }\n        }\n\n        // Don't reset if this navigation opted out\n        if (preventScrollReset === true) {\n          return;\n        }\n\n        // otherwise go to the top on new locations\n        window.scrollTo(0, 0);\n      }, [location, restoreScrollPosition, preventScrollReset]);\n    }\n  }\n\n  /**\n   * Setup a callback to be fired on the window's `beforeunload` event. This is\n   * useful for saving some data to `window.localStorage` just before the page\n   * refreshes.\n   *\n   * Note: The `callback` argument should be a function created with\n   * `React.useCallback()`.\n   */\n  function useBeforeUnload(callback, options) {\n    let {\n      capture\n    } = options || {};\n    React__namespace.useEffect(() => {\n      let opts = capture != null ? {\n        capture\n      } : undefined;\n      window.addEventListener(\"beforeunload\", callback, opts);\n      return () => {\n        window.removeEventListener(\"beforeunload\", callback, opts);\n      };\n    }, [callback, capture]);\n  }\n\n  /**\n   * Setup a callback to be fired on the window's `pagehide` event. This is\n   * useful for saving some data to `window.localStorage` just before the page\n   * refreshes.  This event is better supported than beforeunload across browsers.\n   *\n   * Note: The `callback` argument should be a function created with\n   * `React.useCallback()`.\n   */\n  function usePageHide(callback, options) {\n    let {\n      capture\n    } = options || {};\n    React__namespace.useEffect(() => {\n      let opts = capture != null ? {\n        capture\n      } : undefined;\n      window.addEventListener(\"pagehide\", callback, opts);\n      return () => {\n        window.removeEventListener(\"pagehide\", callback, opts);\n      };\n    }, [callback, capture]);\n  }\n\n  /**\n   * Wrapper around useBlocker to show a window.confirm prompt to users instead\n   * of building a custom UI with useBlocker.\n   *\n   * Warning: This has *a lot of rough edges* and behaves very differently (and\n   * very incorrectly in some cases) across browsers if user click addition\n   * back/forward navigations while the confirm is open.  Use at your own risk.\n   */\n  function usePrompt(_ref12) {\n    let {\n      when,\n      message\n    } = _ref12;\n    let blocker = reactRouter.useBlocker(when);\n    React__namespace.useEffect(() => {\n      if (blocker.state === \"blocked\") {\n        let proceed = window.confirm(message);\n        if (proceed) {\n          // This timeout is needed to avoid a weird \"race\" on POP navigations\n          // between the `window.history` revert navigation and the result of\n          // `window.confirm`\n          setTimeout(blocker.proceed, 0);\n        } else {\n          blocker.reset();\n        }\n      }\n    }, [blocker, message]);\n    React__namespace.useEffect(() => {\n      if (blocker.state === \"blocked\" && !when) {\n        blocker.reset();\n      }\n    }, [blocker, when]);\n  }\n\n  /**\n   * Return a boolean indicating if there is an active view transition to the\n   * given href.  You can use this value to render CSS classes or viewTransitionName\n   * styles onto your elements\n   *\n   * @param href The destination href\n   * @param [opts.relative] Relative routing type (\"route\" | \"path\")\n   */\n  function useViewTransitionState(to, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    let vtContext = React__namespace.useContext(ViewTransitionContext);\n    !(vtContext != null) ? router.UNSAFE_invariant(false, \"`useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  \" + \"Did you accidentally import `RouterProvider` from `react-router`?\")  : void 0;\n    let {\n      basename\n    } = useDataRouterContext(DataRouterHook.useViewTransitionState);\n    let path = reactRouter.useResolvedPath(to, {\n      relative: opts.relative\n    });\n    if (!vtContext.isTransitioning) {\n      return false;\n    }\n    let currentPath = router.stripBasename(vtContext.currentLocation.pathname, basename) || vtContext.currentLocation.pathname;\n    let nextPath = router.stripBasename(vtContext.nextLocation.pathname, basename) || vtContext.nextLocation.pathname;\n\n    // Transition is active if we're going to or coming from the indicated\n    // destination.  This ensures that other PUSH navigations that reverse\n    // an indicated transition apply.  I.e., on the list view you have:\n    //\n    //   <NavLink to=\"/details/1\" viewTransition>\n    //\n    // If you click the breadcrumb back to the list view:\n    //\n    //   <NavLink to=\"/list\" viewTransition>\n    //\n    // We should apply the transition because it's indicated as active going\n    // from /list -> /details/1 and therefore should be active on the reverse\n    // (even though this isn't strictly a POP reverse)\n    return router.matchPath(path.pathname, nextPath) != null || router.matchPath(path.pathname, currentPath) != null;\n  }\n\n  //#endregion\n\n  Object.defineProperty(exports, 'AbortedDeferredError', {\n    enumerable: true,\n    get: function () { return reactRouter.AbortedDeferredError; }\n  });\n  Object.defineProperty(exports, 'Await', {\n    enumerable: true,\n    get: function () { return reactRouter.Await; }\n  });\n  Object.defineProperty(exports, 'MemoryRouter', {\n    enumerable: true,\n    get: function () { return reactRouter.MemoryRouter; }\n  });\n  Object.defineProperty(exports, 'Navigate', {\n    enumerable: true,\n    get: function () { return reactRouter.Navigate; }\n  });\n  Object.defineProperty(exports, 'NavigationType', {\n    enumerable: true,\n    get: function () { return reactRouter.NavigationType; }\n  });\n  Object.defineProperty(exports, 'Outlet', {\n    enumerable: true,\n    get: function () { return reactRouter.Outlet; }\n  });\n  Object.defineProperty(exports, 'Route', {\n    enumerable: true,\n    get: function () { return reactRouter.Route; }\n  });\n  Object.defineProperty(exports, 'Router', {\n    enumerable: true,\n    get: function () { return reactRouter.Router; }\n  });\n  Object.defineProperty(exports, 'Routes', {\n    enumerable: true,\n    get: function () { return reactRouter.Routes; }\n  });\n  Object.defineProperty(exports, 'UNSAFE_DataRouterContext', {\n    enumerable: true,\n    get: function () { return reactRouter.UNSAFE_DataRouterContext; }\n  });\n  Object.defineProperty(exports, 'UNSAFE_DataRouterStateContext', {\n    enumerable: true,\n    get: function () { return reactRouter.UNSAFE_DataRouterStateContext; }\n  });\n  Object.defineProperty(exports, 'UNSAFE_LocationContext', {\n    enumerable: true,\n    get: function () { return reactRouter.UNSAFE_LocationContext; }\n  });\n  Object.defineProperty(exports, 'UNSAFE_NavigationContext', {\n    enumerable: true,\n    get: function () { return reactRouter.UNSAFE_NavigationContext; }\n  });\n  Object.defineProperty(exports, 'UNSAFE_RouteContext', {\n    enumerable: true,\n    get: function () { return reactRouter.UNSAFE_RouteContext; }\n  });\n  Object.defineProperty(exports, 'UNSAFE_useRouteId', {\n    enumerable: true,\n    get: function () { return reactRouter.UNSAFE_useRouteId; }\n  });\n  Object.defineProperty(exports, 'createMemoryRouter', {\n    enumerable: true,\n    get: function () { return reactRouter.createMemoryRouter; }\n  });\n  Object.defineProperty(exports, 'createPath', {\n    enumerable: true,\n    get: function () { return reactRouter.createPath; }\n  });\n  Object.defineProperty(exports, 'createRoutesFromChildren', {\n    enumerable: true,\n    get: function () { return reactRouter.createRoutesFromChildren; }\n  });\n  Object.defineProperty(exports, 'createRoutesFromElements', {\n    enumerable: true,\n    get: function () { return reactRouter.createRoutesFromElements; }\n  });\n  Object.defineProperty(exports, 'defer', {\n    enumerable: true,\n    get: function () { return reactRouter.defer; }\n  });\n  Object.defineProperty(exports, 'generatePath', {\n    enumerable: true,\n    get: function () { return reactRouter.generatePath; }\n  });\n  Object.defineProperty(exports, 'isRouteErrorResponse', {\n    enumerable: true,\n    get: function () { return reactRouter.isRouteErrorResponse; }\n  });\n  Object.defineProperty(exports, 'json', {\n    enumerable: true,\n    get: function () { return reactRouter.json; }\n  });\n  Object.defineProperty(exports, 'matchPath', {\n    enumerable: true,\n    get: function () { return reactRouter.matchPath; }\n  });\n  Object.defineProperty(exports, 'matchRoutes', {\n    enumerable: true,\n    get: function () { return reactRouter.matchRoutes; }\n  });\n  Object.defineProperty(exports, 'parsePath', {\n    enumerable: true,\n    get: function () { return reactRouter.parsePath; }\n  });\n  Object.defineProperty(exports, 'redirect', {\n    enumerable: true,\n    get: function () { return reactRouter.redirect; }\n  });\n  Object.defineProperty(exports, 'redirectDocument', {\n    enumerable: true,\n    get: function () { return reactRouter.redirectDocument; }\n  });\n  Object.defineProperty(exports, 'renderMatches', {\n    enumerable: true,\n    get: function () { return reactRouter.renderMatches; }\n  });\n  Object.defineProperty(exports, 'replace', {\n    enumerable: true,\n    get: function () { return reactRouter.replace; }\n  });\n  Object.defineProperty(exports, 'resolvePath', {\n    enumerable: true,\n    get: function () { return reactRouter.resolvePath; }\n  });\n  Object.defineProperty(exports, 'useActionData', {\n    enumerable: true,\n    get: function () { return reactRouter.useActionData; }\n  });\n  Object.defineProperty(exports, 'useAsyncError', {\n    enumerable: true,\n    get: function () { return reactRouter.useAsyncError; }\n  });\n  Object.defineProperty(exports, 'useAsyncValue', {\n    enumerable: true,\n    get: function () { return reactRouter.useAsyncValue; }\n  });\n  Object.defineProperty(exports, 'useBlocker', {\n    enumerable: true,\n    get: function () { return reactRouter.useBlocker; }\n  });\n  Object.defineProperty(exports, 'useHref', {\n    enumerable: true,\n    get: function () { return reactRouter.useHref; }\n  });\n  Object.defineProperty(exports, 'useInRouterContext', {\n    enumerable: true,\n    get: function () { return reactRouter.useInRouterContext; }\n  });\n  Object.defineProperty(exports, 'useLoaderData', {\n    enumerable: true,\n    get: function () { return reactRouter.useLoaderData; }\n  });\n  Object.defineProperty(exports, 'useLocation', {\n    enumerable: true,\n    get: function () { return reactRouter.useLocation; }\n  });\n  Object.defineProperty(exports, 'useMatch', {\n    enumerable: true,\n    get: function () { return reactRouter.useMatch; }\n  });\n  Object.defineProperty(exports, 'useMatches', {\n    enumerable: true,\n    get: function () { return reactRouter.useMatches; }\n  });\n  Object.defineProperty(exports, 'useNavigate', {\n    enumerable: true,\n    get: function () { return reactRouter.useNavigate; }\n  });\n  Object.defineProperty(exports, 'useNavigation', {\n    enumerable: true,\n    get: function () { return reactRouter.useNavigation; }\n  });\n  Object.defineProperty(exports, 'useNavigationType', {\n    enumerable: true,\n    get: function () { return reactRouter.useNavigationType; }\n  });\n  Object.defineProperty(exports, 'useOutlet', {\n    enumerable: true,\n    get: function () { return reactRouter.useOutlet; }\n  });\n  Object.defineProperty(exports, 'useOutletContext', {\n    enumerable: true,\n    get: function () { return reactRouter.useOutletContext; }\n  });\n  Object.defineProperty(exports, 'useParams', {\n    enumerable: true,\n    get: function () { return reactRouter.useParams; }\n  });\n  Object.defineProperty(exports, 'useResolvedPath', {\n    enumerable: true,\n    get: function () { return reactRouter.useResolvedPath; }\n  });\n  Object.defineProperty(exports, 'useRevalidator', {\n    enumerable: true,\n    get: function () { return reactRouter.useRevalidator; }\n  });\n  Object.defineProperty(exports, 'useRouteError', {\n    enumerable: true,\n    get: function () { return reactRouter.useRouteError; }\n  });\n  Object.defineProperty(exports, 'useRouteLoaderData', {\n    enumerable: true,\n    get: function () { return reactRouter.useRouteLoaderData; }\n  });\n  Object.defineProperty(exports, 'useRoutes', {\n    enumerable: true,\n    get: function () { return reactRouter.useRoutes; }\n  });\n  Object.defineProperty(exports, 'UNSAFE_ErrorResponseImpl', {\n    enumerable: true,\n    get: function () { return router.UNSAFE_ErrorResponseImpl; }\n  });\n  exports.BrowserRouter = BrowserRouter;\n  exports.Form = Form;\n  exports.HashRouter = HashRouter;\n  exports.Link = Link;\n  exports.NavLink = NavLink;\n  exports.RouterProvider = RouterProvider;\n  exports.ScrollRestoration = ScrollRestoration;\n  exports.UNSAFE_FetchersContext = FetchersContext;\n  exports.UNSAFE_ViewTransitionContext = ViewTransitionContext;\n  exports.UNSAFE_useScrollRestoration = useScrollRestoration;\n  exports.createBrowserRouter = createBrowserRouter;\n  exports.createHashRouter = createHashRouter;\n  exports.createSearchParams = createSearchParams;\n  exports.unstable_HistoryRouter = HistoryRouter;\n  exports.unstable_usePrompt = usePrompt;\n  exports.useBeforeUnload = useBeforeUnload;\n  exports.useFetcher = useFetcher;\n  exports.useFetchers = useFetchers;\n  exports.useFormAction = useFormAction;\n  exports.useLinkClickHandler = useLinkClickHandler;\n  exports.useSearchParams = useSearchParams;\n  exports.useSubmit = useSubmit;\n  exports.useViewTransitionState = useViewTransitionState;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=react-router-dom.development.js.map\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$$remix_run$router$dist$router_cjs","~$module$node_modules$react_router$dist$main","~$module$node_modules$react_dom$index","~$module$node_modules$react$index","~$shadow.js"]],"~:properties",["^5",["json","onSubmit","NavigationType","window","preventScrollReset","Route","useResolvedPath","isTransitioning","createHashRouter","isActive","promise","navigator","matchRoutes","static","useInRouterContext","formData","fromRouteId","useOutlet","Link","useAsyncError","MemoryRouter","resolve","createSearchParams","body","encodeLocation","defer","generatePath","useParams","useFormAction","encType","useLoaderData","useRevalidator","redirectDocument","isPending","className","useRoutes","UNSAFE_DataRouterContext","load","redirect","UNSAFE_useRouteId","useSearchParams","displayName","pathname","method","navigationType","useViewTransitionState","key","children","__esModule","Routes","useNavigation","useMatch","Router","flushSync","UNSAFE_RouteContext","matchPath","useOutletContext","useLocation","getKey","useAsyncValue","push","errors","createBrowserRouter","createMemoryRouter","__reactRouterVersion","basename","currentLocation","useHref","useNavigationType","RouterProvider","href","createRoutesFromChildren","patchRoutesOnNavigation","Outlet","replace","style","createHref","useFetchers","useSubmit","value","unstable_HistoryRouter","formEncType","location","enumerable","go","Form","status","Await","useBlocker","hydrationData","action","NavLink","current","useRouteLoaderData","dataStrategy","renderMatches","useBeforeUnload","submit","viewTransition","useFetcher","onClick","useActionData","parsePath","history","useRouteError","useNavigate","BrowserRouter","unstable_usePrompt","state","ref","target","router","UNSAFE_FetchersContext","capture","UNSAFE_LocationContext","ScrollRestoration","UNSAFE_useScrollRestoration","useMatches","formMethod","createRoutesFromElements","relative","v7_prependBasename","resolvePath","UNSAFE_ViewTransitionContext","UNSAFE_DataRouterStateContext","AbortedDeferredError","reject","future","UNSAFE_ErrorResponseImpl","v7_relativeSplatPath","to","useLinkClickHandler","search","data","get","mapRouteProperties","nextLocation","isRouteErrorResponse","ReactRouterDOM","scrollRestoration","HashRouter","routes","Navigate","v5Compat","navigate","stack","createPath","fetcherKey","UNSAFE_NavigationContext","storageKey"]],"~:compiled-at",1740921907223,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$react_router_dom$dist$umd$react_router_dom_development.js\",\n\"lineCount\":715,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/react-router-dom/dist/umd/react-router-dom.development.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$react_router_dom$dist$umd$react_router_dom_development\\\"] = function(global,require,module,exports) {\\n/**\\n * React Router DOM v6.30.0\\n *\\n * Copyright (c) Remix Software Inc.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE.md file in the root directory of this source tree.\\n *\\n * @license MIT\\n */\\n(function (global, factory) {\\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('react'), require('react-dom'), require('react-router'), require('@remix-run/router')) :\\n  typeof define === 'function' && define.amd ? define(['exports', 'react', 'react-dom', 'react-router', '@remix-run/router'], factory) :\\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.ReactRouterDOM = {}, global.React, global.ReactDOM, global.ReactRouter, global.RemixRouter));\\n})(this, (function (exports, React, ReactDOM, reactRouter, router) { 'use strict';\\n\\n  function _interopNamespace(e) {\\n    if (e && e.__esModule) return e;\\n    var n = Object.create(null);\\n    if (e) {\\n      Object.keys(e).forEach(function (k) {\\n        if (k !== 'default') {\\n          var d = Object.getOwnPropertyDescriptor(e, k);\\n          Object.defineProperty(n, k, d.get ? d : {\\n            enumerable: true,\\n            get: function () { return e[k]; }\\n          });\\n        }\\n      });\\n    }\\n    n[\\\"default\\\"] = e;\\n    return Object.freeze(n);\\n  }\\n\\n  var React__namespace = /*#__PURE__*/_interopNamespace(React);\\n  var ReactDOM__namespace = /*#__PURE__*/_interopNamespace(ReactDOM);\\n\\n  function _extends() {\\n    _extends = Object.assign ? Object.assign.bind() : function (target) {\\n      for (var i = 1; i < arguments.length; i++) {\\n        var source = arguments[i];\\n        for (var key in source) {\\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\\n            target[key] = source[key];\\n          }\\n        }\\n      }\\n      return target;\\n    };\\n    return _extends.apply(this, arguments);\\n  }\\n  function _objectWithoutPropertiesLoose(source, excluded) {\\n    if (source == null) return {};\\n    var target = {};\\n    var sourceKeys = Object.keys(source);\\n    var key, i;\\n    for (i = 0; i < sourceKeys.length; i++) {\\n      key = sourceKeys[i];\\n      if (excluded.indexOf(key) >= 0) continue;\\n      target[key] = source[key];\\n    }\\n    return target;\\n  }\\n\\n  const defaultMethod = \\\"get\\\";\\n  const defaultEncType = \\\"application/x-www-form-urlencoded\\\";\\n  function isHtmlElement(object) {\\n    return object != null && typeof object.tagName === \\\"string\\\";\\n  }\\n  function isButtonElement(object) {\\n    return isHtmlElement(object) && object.tagName.toLowerCase() === \\\"button\\\";\\n  }\\n  function isFormElement(object) {\\n    return isHtmlElement(object) && object.tagName.toLowerCase() === \\\"form\\\";\\n  }\\n  function isInputElement(object) {\\n    return isHtmlElement(object) && object.tagName.toLowerCase() === \\\"input\\\";\\n  }\\n  function isModifiedEvent(event) {\\n    return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\\n  }\\n  function shouldProcessLinkClick(event, target) {\\n    return event.button === 0 && (\\n    // Ignore everything but left clicks\\n    !target || target === \\\"_self\\\") &&\\n    // Let browser handle \\\"target=_blank\\\" etc.\\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\\n    ;\\n  }\\n\\n  /**\\n   * Creates a URLSearchParams object using the given initializer.\\n   *\\n   * This is identical to `new URLSearchParams(init)` except it also\\n   * supports arrays as values in the object form of the initializer\\n   * instead of just strings. This is convenient when you need multiple\\n   * values for a given key, but don't want to use an array initializer.\\n   *\\n   * For example, instead of:\\n   *\\n   *   let searchParams = new URLSearchParams([\\n   *     ['sort', 'name'],\\n   *     ['sort', 'price']\\n   *   ]);\\n   *\\n   * you can do:\\n   *\\n   *   let searchParams = createSearchParams({\\n   *     sort: ['name', 'price']\\n   *   });\\n   */\\n  function createSearchParams(init) {\\n    if (init === void 0) {\\n      init = \\\"\\\";\\n    }\\n    return new URLSearchParams(typeof init === \\\"string\\\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo, key) => {\\n      let value = init[key];\\n      return memo.concat(Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]]);\\n    }, []));\\n  }\\n  function getSearchParamsForLocation(locationSearch, defaultSearchParams) {\\n    let searchParams = createSearchParams(locationSearch);\\n    if (defaultSearchParams) {\\n      // Use `defaultSearchParams.forEach(...)` here instead of iterating of\\n      // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\\n      // web extensions. Relevant Bugzilla tickets:\\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\\n      defaultSearchParams.forEach((_, key) => {\\n        if (!searchParams.has(key)) {\\n          defaultSearchParams.getAll(key).forEach(value => {\\n            searchParams.append(key, value);\\n          });\\n        }\\n      });\\n    }\\n    return searchParams;\\n  }\\n\\n  // Thanks https://github.com/sindresorhus/type-fest!\\n\\n  // One-time check for submitter support\\n  let _formDataSupportsSubmitter = null;\\n  function isFormDataSubmitterSupported() {\\n    if (_formDataSupportsSubmitter === null) {\\n      try {\\n        new FormData(document.createElement(\\\"form\\\"),\\n        // @ts-expect-error if FormData supports the submitter parameter, this will throw\\n        0);\\n        _formDataSupportsSubmitter = false;\\n      } catch (e) {\\n        _formDataSupportsSubmitter = true;\\n      }\\n    }\\n    return _formDataSupportsSubmitter;\\n  }\\n\\n  /**\\n   * Submit options shared by both navigations and fetchers\\n   */\\n\\n  /**\\n   * Submit options available to fetchers\\n   */\\n\\n  /**\\n   * Submit options available to navigations\\n   */\\n\\n  const supportedFormEncTypes = new Set([\\\"application/x-www-form-urlencoded\\\", \\\"multipart/form-data\\\", \\\"text/plain\\\"]);\\n  function getFormEncType(encType) {\\n    if (encType != null && !supportedFormEncTypes.has(encType)) {\\n      router.UNSAFE_warning(false, \\\"\\\\\\\"\\\" + encType + \\\"\\\\\\\" is not a valid `encType` for `<Form>`/`<fetcher.Form>` \\\" + (\\\"and will default to \\\\\\\"\\\" + defaultEncType + \\\"\\\\\\\"\\\")) ;\\n      return null;\\n    }\\n    return encType;\\n  }\\n  function getFormSubmissionInfo(target, basename) {\\n    let method;\\n    let action;\\n    let encType;\\n    let formData;\\n    let body;\\n    if (isFormElement(target)) {\\n      // When grabbing the action from the element, it will have had the basename\\n      // prefixed to ensure non-JS scenarios work, so strip it since we'll\\n      // re-prefix in the router\\n      let attr = target.getAttribute(\\\"action\\\");\\n      action = attr ? router.stripBasename(attr, basename) : null;\\n      method = target.getAttribute(\\\"method\\\") || defaultMethod;\\n      encType = getFormEncType(target.getAttribute(\\\"enctype\\\")) || defaultEncType;\\n      formData = new FormData(target);\\n    } else if (isButtonElement(target) || isInputElement(target) && (target.type === \\\"submit\\\" || target.type === \\\"image\\\")) {\\n      let form = target.form;\\n      if (form == null) {\\n        throw new Error(\\\"Cannot submit a <button> or <input type=\\\\\\\"submit\\\\\\\"> without a <form>\\\");\\n      }\\n\\n      // <button>/<input type=\\\"submit\\\"> may override attributes of <form>\\n\\n      // When grabbing the action from the element, it will have had the basename\\n      // prefixed to ensure non-JS scenarios work, so strip it since we'll\\n      // re-prefix in the router\\n      let attr = target.getAttribute(\\\"formaction\\\") || form.getAttribute(\\\"action\\\");\\n      action = attr ? router.stripBasename(attr, basename) : null;\\n      method = target.getAttribute(\\\"formmethod\\\") || form.getAttribute(\\\"method\\\") || defaultMethod;\\n      encType = getFormEncType(target.getAttribute(\\\"formenctype\\\")) || getFormEncType(form.getAttribute(\\\"enctype\\\")) || defaultEncType;\\n\\n      // Build a FormData object populated from a form and submitter\\n      formData = new FormData(form, target);\\n\\n      // If this browser doesn't support the `FormData(el, submitter)` format,\\n      // then tack on the submitter value at the end.  This is a lightweight\\n      // solution that is not 100% spec compliant.  For complete support in older\\n      // browsers, consider using the `formdata-submitter-polyfill` package\\n      if (!isFormDataSubmitterSupported()) {\\n        let {\\n          name,\\n          type,\\n          value\\n        } = target;\\n        if (type === \\\"image\\\") {\\n          let prefix = name ? name + \\\".\\\" : \\\"\\\";\\n          formData.append(prefix + \\\"x\\\", \\\"0\\\");\\n          formData.append(prefix + \\\"y\\\", \\\"0\\\");\\n        } else if (name) {\\n          formData.append(name, value);\\n        }\\n      }\\n    } else if (isHtmlElement(target)) {\\n      throw new Error(\\\"Cannot submit element that is not <form>, <button>, or \\\" + \\\"<input type=\\\\\\\"submit|image\\\\\\\">\\\");\\n    } else {\\n      method = defaultMethod;\\n      action = null;\\n      encType = defaultEncType;\\n      body = target;\\n    }\\n\\n    // Send body for <Form encType=\\\"text/plain\\\" so we encode it into text\\n    if (formData && encType === \\\"text/plain\\\") {\\n      body = formData;\\n      formData = undefined;\\n    }\\n    return {\\n      action,\\n      method: method.toLowerCase(),\\n      encType,\\n      formData,\\n      body\\n    };\\n  }\\n\\n  const _excluded = [\\\"onClick\\\", \\\"relative\\\", \\\"reloadDocument\\\", \\\"replace\\\", \\\"state\\\", \\\"target\\\", \\\"to\\\", \\\"preventScrollReset\\\", \\\"viewTransition\\\"],\\n    _excluded2 = [\\\"aria-current\\\", \\\"caseSensitive\\\", \\\"className\\\", \\\"end\\\", \\\"style\\\", \\\"to\\\", \\\"viewTransition\\\", \\\"children\\\"],\\n    _excluded3 = [\\\"fetcherKey\\\", \\\"navigate\\\", \\\"reloadDocument\\\", \\\"replace\\\", \\\"state\\\", \\\"method\\\", \\\"action\\\", \\\"onSubmit\\\", \\\"relative\\\", \\\"preventScrollReset\\\", \\\"viewTransition\\\"];\\n  //#endregion\\n  // HEY YOU! DON'T TOUCH THIS VARIABLE!\\n  //\\n  // It is replaced with the proper version at build time via a babel plugin in\\n  // the rollup config.\\n  //\\n  // Export a global property onto the window for React Router detection by the\\n  // Core Web Vitals Technology Report.  This way they can configure the `wappalyzer`\\n  // to detect and properly classify live websites as being built with React Router:\\n  // https://github.com/HTTPArchive/wappalyzer/blob/main/src/technologies/r.json\\n  const REACT_ROUTER_VERSION = \\\"6\\\";\\n  try {\\n    window.__reactRouterVersion = REACT_ROUTER_VERSION;\\n  } catch (e) {\\n    // no-op\\n  }\\n\\n  ////////////////////////////////////////////////////////////////////////////////\\n  //#region Routers\\n  ////////////////////////////////////////////////////////////////////////////////\\n  function createBrowserRouter(routes, opts) {\\n    return router.createRouter({\\n      basename: opts == null ? void 0 : opts.basename,\\n      future: _extends({}, opts == null ? void 0 : opts.future, {\\n        v7_prependBasename: true\\n      }),\\n      history: router.createBrowserHistory({\\n        window: opts == null ? void 0 : opts.window\\n      }),\\n      hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\\n      routes,\\n      mapRouteProperties: reactRouter.UNSAFE_mapRouteProperties,\\n      dataStrategy: opts == null ? void 0 : opts.dataStrategy,\\n      patchRoutesOnNavigation: opts == null ? void 0 : opts.patchRoutesOnNavigation,\\n      window: opts == null ? void 0 : opts.window\\n    }).initialize();\\n  }\\n  function createHashRouter(routes, opts) {\\n    return router.createRouter({\\n      basename: opts == null ? void 0 : opts.basename,\\n      future: _extends({}, opts == null ? void 0 : opts.future, {\\n        v7_prependBasename: true\\n      }),\\n      history: router.createHashHistory({\\n        window: opts == null ? void 0 : opts.window\\n      }),\\n      hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\\n      routes,\\n      mapRouteProperties: reactRouter.UNSAFE_mapRouteProperties,\\n      dataStrategy: opts == null ? void 0 : opts.dataStrategy,\\n      patchRoutesOnNavigation: opts == null ? void 0 : opts.patchRoutesOnNavigation,\\n      window: opts == null ? void 0 : opts.window\\n    }).initialize();\\n  }\\n  function parseHydrationData() {\\n    var _window;\\n    let state = (_window = window) == null ? void 0 : _window.__staticRouterHydrationData;\\n    if (state && state.errors) {\\n      state = _extends({}, state, {\\n        errors: deserializeErrors(state.errors)\\n      });\\n    }\\n    return state;\\n  }\\n  function deserializeErrors(errors) {\\n    if (!errors) return null;\\n    let entries = Object.entries(errors);\\n    let serialized = {};\\n    for (let [key, val] of entries) {\\n      // Hey you!  If you change this, please change the corresponding logic in\\n      // serializeErrors in react-router-dom/server.tsx :)\\n      if (val && val.__type === \\\"RouteErrorResponse\\\") {\\n        serialized[key] = new router.UNSAFE_ErrorResponseImpl(val.status, val.statusText, val.data, val.internal === true);\\n      } else if (val && val.__type === \\\"Error\\\") {\\n        // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\\n        if (val.__subType) {\\n          let ErrorConstructor = window[val.__subType];\\n          if (typeof ErrorConstructor === \\\"function\\\") {\\n            try {\\n              // @ts-expect-error\\n              let error = new ErrorConstructor(val.message);\\n              // Wipe away the client-side stack trace.  Nothing to fill it in with\\n              // because we don't serialize SSR stack traces for security reasons\\n              error.stack = \\\"\\\";\\n              serialized[key] = error;\\n            } catch (e) {\\n              // no-op - fall through and create a normal Error\\n            }\\n          }\\n        }\\n        if (serialized[key] == null) {\\n          let error = new Error(val.message);\\n          // Wipe away the client-side stack trace.  Nothing to fill it in with\\n          // because we don't serialize SSR stack traces for security reasons\\n          error.stack = \\\"\\\";\\n          serialized[key] = error;\\n        }\\n      } else {\\n        serialized[key] = val;\\n      }\\n    }\\n    return serialized;\\n  }\\n\\n  //#endregion\\n\\n  ////////////////////////////////////////////////////////////////////////////////\\n  //#region Contexts\\n  ////////////////////////////////////////////////////////////////////////////////\\n  const ViewTransitionContext = /*#__PURE__*/React__namespace.createContext({\\n    isTransitioning: false\\n  });\\n  {\\n    ViewTransitionContext.displayName = \\\"ViewTransition\\\";\\n  }\\n\\n  // TODO: (v7) Change the useFetcher data from `any` to `unknown`\\n\\n  const FetchersContext = /*#__PURE__*/React__namespace.createContext(new Map());\\n  {\\n    FetchersContext.displayName = \\\"Fetchers\\\";\\n  }\\n\\n  //#endregion\\n\\n  ////////////////////////////////////////////////////////////////////////////////\\n  //#region Components\\n  ////////////////////////////////////////////////////////////////////////////////\\n\\n  /**\\n    Webpack + React 17 fails to compile on any of the following because webpack\\n    complains that `startTransition` doesn't exist in `React`:\\n    * import { startTransition } from \\\"react\\\"\\n    * import * as React from from \\\"react\\\";\\n      \\\"startTransition\\\" in React ? React.startTransition(() => setState()) : setState()\\n    * import * as React from from \\\"react\\\";\\n      \\\"startTransition\\\" in React ? React[\\\"startTransition\\\"](() => setState()) : setState()\\n\\n    Moving it to a constant such as the following solves the Webpack/React 17 issue:\\n    * import * as React from from \\\"react\\\";\\n      const START_TRANSITION = \\\"startTransition\\\";\\n      START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\\n\\n    However, that introduces webpack/terser minification issues in production builds\\n    in React 18 where minification/obfuscation ends up removing the call of\\n    React.startTransition entirely from the first half of the ternary.  Grabbing\\n    this exported reference once up front resolves that issue.\\n\\n    See https://github.com/remix-run/react-router/issues/10579\\n  */\\n  const START_TRANSITION = \\\"startTransition\\\";\\n  const startTransitionImpl = React__namespace[START_TRANSITION];\\n  const FLUSH_SYNC = \\\"flushSync\\\";\\n  const flushSyncImpl = ReactDOM__namespace[FLUSH_SYNC];\\n  const USE_ID = \\\"useId\\\";\\n  const useIdImpl = React__namespace[USE_ID];\\n  function startTransitionSafe(cb) {\\n    if (startTransitionImpl) {\\n      startTransitionImpl(cb);\\n    } else {\\n      cb();\\n    }\\n  }\\n  function flushSyncSafe(cb) {\\n    if (flushSyncImpl) {\\n      flushSyncImpl(cb);\\n    } else {\\n      cb();\\n    }\\n  }\\n  class Deferred {\\n    // @ts-expect-error - no initializer\\n\\n    // @ts-expect-error - no initializer\\n\\n    constructor() {\\n      this.status = \\\"pending\\\";\\n      this.promise = new Promise((resolve, reject) => {\\n        this.resolve = value => {\\n          if (this.status === \\\"pending\\\") {\\n            this.status = \\\"resolved\\\";\\n            resolve(value);\\n          }\\n        };\\n        this.reject = reason => {\\n          if (this.status === \\\"pending\\\") {\\n            this.status = \\\"rejected\\\";\\n            reject(reason);\\n          }\\n        };\\n      });\\n    }\\n  }\\n\\n  /**\\n   * Given a Remix Router instance, render the appropriate UI\\n   */\\n  function RouterProvider(_ref) {\\n    let {\\n      fallbackElement,\\n      router: router$1,\\n      future\\n    } = _ref;\\n    let [state, setStateImpl] = React__namespace.useState(router$1.state);\\n    let [pendingState, setPendingState] = React__namespace.useState();\\n    let [vtContext, setVtContext] = React__namespace.useState({\\n      isTransitioning: false\\n    });\\n    let [renderDfd, setRenderDfd] = React__namespace.useState();\\n    let [transition, setTransition] = React__namespace.useState();\\n    let [interruption, setInterruption] = React__namespace.useState();\\n    let fetcherData = React__namespace.useRef(new Map());\\n    let {\\n      v7_startTransition\\n    } = future || {};\\n    let optInStartTransition = React__namespace.useCallback(cb => {\\n      if (v7_startTransition) {\\n        startTransitionSafe(cb);\\n      } else {\\n        cb();\\n      }\\n    }, [v7_startTransition]);\\n    let setState = React__namespace.useCallback((newState, _ref2) => {\\n      let {\\n        deletedFetchers,\\n        flushSync: flushSync,\\n        viewTransitionOpts: viewTransitionOpts\\n      } = _ref2;\\n      newState.fetchers.forEach((fetcher, key) => {\\n        if (fetcher.data !== undefined) {\\n          fetcherData.current.set(key, fetcher.data);\\n        }\\n      });\\n      deletedFetchers.forEach(key => fetcherData.current.delete(key));\\n      let isViewTransitionUnavailable = router$1.window == null || router$1.window.document == null || typeof router$1.window.document.startViewTransition !== \\\"function\\\";\\n\\n      // If this isn't a view transition or it's not available in this browser,\\n      // just update and be done with it\\n      if (!viewTransitionOpts || isViewTransitionUnavailable) {\\n        if (flushSync) {\\n          flushSyncSafe(() => setStateImpl(newState));\\n        } else {\\n          optInStartTransition(() => setStateImpl(newState));\\n        }\\n        return;\\n      }\\n\\n      // flushSync + startViewTransition\\n      if (flushSync) {\\n        // Flush through the context to mark DOM elements as transition=ing\\n        flushSyncSafe(() => {\\n          // Cancel any pending transitions\\n          if (transition) {\\n            renderDfd && renderDfd.resolve();\\n            transition.skipTransition();\\n          }\\n          setVtContext({\\n            isTransitioning: true,\\n            flushSync: true,\\n            currentLocation: viewTransitionOpts.currentLocation,\\n            nextLocation: viewTransitionOpts.nextLocation\\n          });\\n        });\\n\\n        // Update the DOM\\n        let t = router$1.window.document.startViewTransition(() => {\\n          flushSyncSafe(() => setStateImpl(newState));\\n        });\\n\\n        // Clean up after the animation completes\\n        t.finished.finally(() => {\\n          flushSyncSafe(() => {\\n            setRenderDfd(undefined);\\n            setTransition(undefined);\\n            setPendingState(undefined);\\n            setVtContext({\\n              isTransitioning: false\\n            });\\n          });\\n        });\\n        flushSyncSafe(() => setTransition(t));\\n        return;\\n      }\\n\\n      // startTransition + startViewTransition\\n      if (transition) {\\n        // Interrupting an in-progress transition, cancel and let everything flush\\n        // out, and then kick off a new transition from the interruption state\\n        renderDfd && renderDfd.resolve();\\n        transition.skipTransition();\\n        setInterruption({\\n          state: newState,\\n          currentLocation: viewTransitionOpts.currentLocation,\\n          nextLocation: viewTransitionOpts.nextLocation\\n        });\\n      } else {\\n        // Completed navigation update with opted-in view transitions, let 'er rip\\n        setPendingState(newState);\\n        setVtContext({\\n          isTransitioning: true,\\n          flushSync: false,\\n          currentLocation: viewTransitionOpts.currentLocation,\\n          nextLocation: viewTransitionOpts.nextLocation\\n        });\\n      }\\n    }, [router$1.window, transition, renderDfd, fetcherData, optInStartTransition]);\\n\\n    // Need to use a layout effect here so we are subscribed early enough to\\n    // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\\n    React__namespace.useLayoutEffect(() => router$1.subscribe(setState), [router$1, setState]);\\n\\n    // When we start a view transition, create a Deferred we can use for the\\n    // eventual \\\"completed\\\" render\\n    React__namespace.useEffect(() => {\\n      if (vtContext.isTransitioning && !vtContext.flushSync) {\\n        setRenderDfd(new Deferred());\\n      }\\n    }, [vtContext]);\\n\\n    // Once the deferred is created, kick off startViewTransition() to update the\\n    // DOM and then wait on the Deferred to resolve (indicating the DOM update has\\n    // happened)\\n    React__namespace.useEffect(() => {\\n      if (renderDfd && pendingState && router$1.window) {\\n        let newState = pendingState;\\n        let renderPromise = renderDfd.promise;\\n        let transition = router$1.window.document.startViewTransition(async () => {\\n          optInStartTransition(() => setStateImpl(newState));\\n          await renderPromise;\\n        });\\n        transition.finished.finally(() => {\\n          setRenderDfd(undefined);\\n          setTransition(undefined);\\n          setPendingState(undefined);\\n          setVtContext({\\n            isTransitioning: false\\n          });\\n        });\\n        setTransition(transition);\\n      }\\n    }, [optInStartTransition, pendingState, renderDfd, router$1.window]);\\n\\n    // When the new location finally renders and is committed to the DOM, this\\n    // effect will run to resolve the transition\\n    React__namespace.useEffect(() => {\\n      if (renderDfd && pendingState && state.location.key === pendingState.location.key) {\\n        renderDfd.resolve();\\n      }\\n    }, [renderDfd, transition, state.location, pendingState]);\\n\\n    // If we get interrupted with a new navigation during a transition, we skip\\n    // the active transition, let it cleanup, then kick it off again here\\n    React__namespace.useEffect(() => {\\n      if (!vtContext.isTransitioning && interruption) {\\n        setPendingState(interruption.state);\\n        setVtContext({\\n          isTransitioning: true,\\n          flushSync: false,\\n          currentLocation: interruption.currentLocation,\\n          nextLocation: interruption.nextLocation\\n        });\\n        setInterruption(undefined);\\n      }\\n    }, [vtContext.isTransitioning, interruption]);\\n    React__namespace.useEffect(() => {\\n      router.UNSAFE_warning(fallbackElement == null || !router$1.future.v7_partialHydration, \\\"`<RouterProvider fallbackElement>` is deprecated when using \\\" + \\\"`v7_partialHydration`, use a `HydrateFallback` component instead\\\") ;\\n      // Only log this once on initial mount\\n      // eslint-disable-next-line react-hooks/exhaustive-deps\\n    }, []);\\n    let navigator = React__namespace.useMemo(() => {\\n      return {\\n        createHref: router$1.createHref,\\n        encodeLocation: router$1.encodeLocation,\\n        go: n => router$1.navigate(n),\\n        push: (to, state, opts) => router$1.navigate(to, {\\n          state,\\n          preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\\n        }),\\n        replace: (to, state, opts) => router$1.navigate(to, {\\n          replace: true,\\n          state,\\n          preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\\n        })\\n      };\\n    }, [router$1]);\\n    let basename = router$1.basename || \\\"/\\\";\\n    let dataRouterContext = React__namespace.useMemo(() => ({\\n      router: router$1,\\n      navigator,\\n      static: false,\\n      basename\\n    }), [router$1, navigator, basename]);\\n    let routerFuture = React__namespace.useMemo(() => ({\\n      v7_relativeSplatPath: router$1.future.v7_relativeSplatPath\\n    }), [router$1.future.v7_relativeSplatPath]);\\n    React__namespace.useEffect(() => reactRouter.UNSAFE_logV6DeprecationWarnings(future, router$1.future), [future, router$1.future]);\\n\\n    // The fragment and {null} here are important!  We need them to keep React 18's\\n    // useId happy when we are server-rendering since we may have a <script> here\\n    // containing the hydrated server-side staticContext (from StaticRouterProvider).\\n    // useId relies on the component tree structure to generate deterministic id's\\n    // so we need to ensure it remains the same on the client even though\\n    // we don't need the <script> tag\\n    return /*#__PURE__*/React__namespace.createElement(React__namespace.Fragment, null, /*#__PURE__*/React__namespace.createElement(reactRouter.UNSAFE_DataRouterContext.Provider, {\\n      value: dataRouterContext\\n    }, /*#__PURE__*/React__namespace.createElement(reactRouter.UNSAFE_DataRouterStateContext.Provider, {\\n      value: state\\n    }, /*#__PURE__*/React__namespace.createElement(FetchersContext.Provider, {\\n      value: fetcherData.current\\n    }, /*#__PURE__*/React__namespace.createElement(ViewTransitionContext.Provider, {\\n      value: vtContext\\n    }, /*#__PURE__*/React__namespace.createElement(reactRouter.Router, {\\n      basename: basename,\\n      location: state.location,\\n      navigationType: state.historyAction,\\n      navigator: navigator,\\n      future: routerFuture\\n    }, state.initialized || router$1.future.v7_partialHydration ? /*#__PURE__*/React__namespace.createElement(MemoizedDataRoutes, {\\n      routes: router$1.routes,\\n      future: router$1.future,\\n      state: state\\n    }) : fallbackElement))))), null);\\n  }\\n\\n  // Memoize to avoid re-renders when updating `ViewTransitionContext`\\n  const MemoizedDataRoutes = /*#__PURE__*/React__namespace.memo(DataRoutes);\\n  function DataRoutes(_ref3) {\\n    let {\\n      routes,\\n      future,\\n      state\\n    } = _ref3;\\n    return reactRouter.UNSAFE_useRoutesImpl(routes, undefined, state, future);\\n  }\\n  /**\\n   * A `<Router>` for use in web browsers. Provides the cleanest URLs.\\n   */\\n  function BrowserRouter(_ref4) {\\n    let {\\n      basename,\\n      children,\\n      future,\\n      window\\n    } = _ref4;\\n    let historyRef = React__namespace.useRef();\\n    if (historyRef.current == null) {\\n      historyRef.current = router.createBrowserHistory({\\n        window,\\n        v5Compat: true\\n      });\\n    }\\n    let history = historyRef.current;\\n    let [state, setStateImpl] = React__namespace.useState({\\n      action: history.action,\\n      location: history.location\\n    });\\n    let {\\n      v7_startTransition\\n    } = future || {};\\n    let setState = React__namespace.useCallback(newState => {\\n      v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\\n    }, [setStateImpl, v7_startTransition]);\\n    React__namespace.useLayoutEffect(() => history.listen(setState), [history, setState]);\\n    React__namespace.useEffect(() => reactRouter.UNSAFE_logV6DeprecationWarnings(future), [future]);\\n    return /*#__PURE__*/React__namespace.createElement(reactRouter.Router, {\\n      basename: basename,\\n      children: children,\\n      location: state.location,\\n      navigationType: state.action,\\n      navigator: history,\\n      future: future\\n    });\\n  }\\n  /**\\n   * A `<Router>` for use in web browsers. Stores the location in the hash\\n   * portion of the URL so it is not sent to the server.\\n   */\\n  function HashRouter(_ref5) {\\n    let {\\n      basename,\\n      children,\\n      future,\\n      window\\n    } = _ref5;\\n    let historyRef = React__namespace.useRef();\\n    if (historyRef.current == null) {\\n      historyRef.current = router.createHashHistory({\\n        window,\\n        v5Compat: true\\n      });\\n    }\\n    let history = historyRef.current;\\n    let [state, setStateImpl] = React__namespace.useState({\\n      action: history.action,\\n      location: history.location\\n    });\\n    let {\\n      v7_startTransition\\n    } = future || {};\\n    let setState = React__namespace.useCallback(newState => {\\n      v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\\n    }, [setStateImpl, v7_startTransition]);\\n    React__namespace.useLayoutEffect(() => history.listen(setState), [history, setState]);\\n    React__namespace.useEffect(() => reactRouter.UNSAFE_logV6DeprecationWarnings(future), [future]);\\n    return /*#__PURE__*/React__namespace.createElement(reactRouter.Router, {\\n      basename: basename,\\n      children: children,\\n      location: state.location,\\n      navigationType: state.action,\\n      navigator: history,\\n      future: future\\n    });\\n  }\\n  /**\\n   * A `<Router>` that accepts a pre-instantiated history object. It's important\\n   * to note that using your own history object is highly discouraged and may add\\n   * two versions of the history library to your bundles unless you use the same\\n   * version of the history library that React Router uses internally.\\n   */\\n  function HistoryRouter(_ref6) {\\n    let {\\n      basename,\\n      children,\\n      future,\\n      history\\n    } = _ref6;\\n    let [state, setStateImpl] = React__namespace.useState({\\n      action: history.action,\\n      location: history.location\\n    });\\n    let {\\n      v7_startTransition\\n    } = future || {};\\n    let setState = React__namespace.useCallback(newState => {\\n      v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\\n    }, [setStateImpl, v7_startTransition]);\\n    React__namespace.useLayoutEffect(() => history.listen(setState), [history, setState]);\\n    React__namespace.useEffect(() => reactRouter.UNSAFE_logV6DeprecationWarnings(future), [future]);\\n    return /*#__PURE__*/React__namespace.createElement(reactRouter.Router, {\\n      basename: basename,\\n      children: children,\\n      location: state.location,\\n      navigationType: state.action,\\n      navigator: history,\\n      future: future\\n    });\\n  }\\n  {\\n    HistoryRouter.displayName = \\\"unstable_HistoryRouter\\\";\\n  }\\n  const isBrowser = typeof window !== \\\"undefined\\\" && typeof window.document !== \\\"undefined\\\" && typeof window.document.createElement !== \\\"undefined\\\";\\n  const ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\\\/\\\\/)/i;\\n\\n  /**\\n   * The public API for rendering a history-aware `<a>`.\\n   */\\n  const Link = /*#__PURE__*/React__namespace.forwardRef(function LinkWithRef(_ref7, ref) {\\n    let {\\n        onClick,\\n        relative,\\n        reloadDocument,\\n        replace,\\n        state,\\n        target,\\n        to,\\n        preventScrollReset,\\n        viewTransition\\n      } = _ref7,\\n      rest = _objectWithoutPropertiesLoose(_ref7, _excluded);\\n    let {\\n      basename\\n    } = React__namespace.useContext(reactRouter.UNSAFE_NavigationContext);\\n\\n    // Rendered into <a href> for absolute URLs\\n    let absoluteHref;\\n    let isExternal = false;\\n    if (typeof to === \\\"string\\\" && ABSOLUTE_URL_REGEX.test(to)) {\\n      // Render the absolute href server- and client-side\\n      absoluteHref = to;\\n\\n      // Only check for external origins client-side\\n      if (isBrowser) {\\n        try {\\n          let currentUrl = new URL(window.location.href);\\n          let targetUrl = to.startsWith(\\\"//\\\") ? new URL(currentUrl.protocol + to) : new URL(to);\\n          let path = router.stripBasename(targetUrl.pathname, basename);\\n          if (targetUrl.origin === currentUrl.origin && path != null) {\\n            // Strip the protocol/origin/basename for same-origin absolute URLs\\n            to = path + targetUrl.search + targetUrl.hash;\\n          } else {\\n            isExternal = true;\\n          }\\n        } catch (e) {\\n          // We can't do external URL detection without a valid URL\\n          router.UNSAFE_warning(false, \\\"<Link to=\\\\\\\"\\\" + to + \\\"\\\\\\\"> contains an invalid URL which will probably break \\\" + \\\"when clicked - please update to a valid URL path.\\\") ;\\n        }\\n      }\\n    }\\n\\n    // Rendered into <a href> for relative URLs\\n    let href = reactRouter.useHref(to, {\\n      relative\\n    });\\n    let internalOnClick = useLinkClickHandler(to, {\\n      replace,\\n      state,\\n      target,\\n      preventScrollReset,\\n      relative,\\n      viewTransition\\n    });\\n    function handleClick(event) {\\n      if (onClick) onClick(event);\\n      if (!event.defaultPrevented) {\\n        internalOnClick(event);\\n      }\\n    }\\n    return (\\n      /*#__PURE__*/\\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\\n      React__namespace.createElement(\\\"a\\\", _extends({}, rest, {\\n        href: absoluteHref || href,\\n        onClick: isExternal || reloadDocument ? onClick : handleClick,\\n        ref: ref,\\n        target: target\\n      }))\\n    );\\n  });\\n  {\\n    Link.displayName = \\\"Link\\\";\\n  }\\n  /**\\n   * A `<Link>` wrapper that knows if it's \\\"active\\\" or not.\\n   */\\n  const NavLink = /*#__PURE__*/React__namespace.forwardRef(function NavLinkWithRef(_ref8, ref) {\\n    let {\\n        \\\"aria-current\\\": ariaCurrentProp = \\\"page\\\",\\n        caseSensitive = false,\\n        className: classNameProp = \\\"\\\",\\n        end = false,\\n        style: styleProp,\\n        to,\\n        viewTransition,\\n        children\\n      } = _ref8,\\n      rest = _objectWithoutPropertiesLoose(_ref8, _excluded2);\\n    let path = reactRouter.useResolvedPath(to, {\\n      relative: rest.relative\\n    });\\n    let location = reactRouter.useLocation();\\n    let routerState = React__namespace.useContext(reactRouter.UNSAFE_DataRouterStateContext);\\n    let {\\n      navigator,\\n      basename\\n    } = React__namespace.useContext(reactRouter.UNSAFE_NavigationContext);\\n    let isTransitioning = routerState != null &&\\n    // Conditional usage is OK here because the usage of a data router is static\\n    // eslint-disable-next-line react-hooks/rules-of-hooks\\n    useViewTransitionState(path) && viewTransition === true;\\n    let toPathname = navigator.encodeLocation ? navigator.encodeLocation(path).pathname : path.pathname;\\n    let locationPathname = location.pathname;\\n    let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\\n    if (!caseSensitive) {\\n      locationPathname = locationPathname.toLowerCase();\\n      nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\\n      toPathname = toPathname.toLowerCase();\\n    }\\n    if (nextLocationPathname && basename) {\\n      nextLocationPathname = router.stripBasename(nextLocationPathname, basename) || nextLocationPathname;\\n    }\\n\\n    // If the `to` has a trailing slash, look at that exact spot.  Otherwise,\\n    // we're looking for a slash _after_ what's in `to`.  For example:\\n    //\\n    // <NavLink to=\\\"/users\\\"> and <NavLink to=\\\"/users/\\\">\\n    // both want to look for a / at index 6 to match URL `/users/matt`\\n    const endSlashPosition = toPathname !== \\\"/\\\" && toPathname.endsWith(\\\"/\\\") ? toPathname.length - 1 : toPathname.length;\\n    let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(endSlashPosition) === \\\"/\\\";\\n    let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === \\\"/\\\");\\n    let renderProps = {\\n      isActive,\\n      isPending,\\n      isTransitioning\\n    };\\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\\n    let className;\\n    if (typeof classNameProp === \\\"function\\\") {\\n      className = classNameProp(renderProps);\\n    } else {\\n      // If the className prop is not a function, we use a default `active`\\n      // class for <NavLink />s that are active. In v5 `active` was the default\\n      // value for `activeClassName`, but we are removing that API and can still\\n      // use the old default behavior for a cleaner upgrade path and keep the\\n      // simple styling rules working as they currently do.\\n      className = [classNameProp, isActive ? \\\"active\\\" : null, isPending ? \\\"pending\\\" : null, isTransitioning ? \\\"transitioning\\\" : null].filter(Boolean).join(\\\" \\\");\\n    }\\n    let style = typeof styleProp === \\\"function\\\" ? styleProp(renderProps) : styleProp;\\n    return /*#__PURE__*/React__namespace.createElement(Link, _extends({}, rest, {\\n      \\\"aria-current\\\": ariaCurrent,\\n      className: className,\\n      ref: ref,\\n      style: style,\\n      to: to,\\n      viewTransition: viewTransition\\n    }), typeof children === \\\"function\\\" ? children(renderProps) : children);\\n  });\\n  {\\n    NavLink.displayName = \\\"NavLink\\\";\\n  }\\n\\n  /**\\n   * Form props shared by navigations and fetchers\\n   */\\n\\n  /**\\n   * Form props available to fetchers\\n   */\\n\\n  /**\\n   * Form props available to navigations\\n   */\\n\\n  /**\\n   * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\\n   * that the interaction with the server is with `fetch` instead of new document\\n   * requests, allowing components to add nicer UX to the page as the form is\\n   * submitted and returns with data.\\n   */\\n  const Form = /*#__PURE__*/React__namespace.forwardRef((_ref9, forwardedRef) => {\\n    let {\\n        fetcherKey,\\n        navigate,\\n        reloadDocument,\\n        replace,\\n        state,\\n        method = defaultMethod,\\n        action,\\n        onSubmit,\\n        relative,\\n        preventScrollReset,\\n        viewTransition\\n      } = _ref9,\\n      props = _objectWithoutPropertiesLoose(_ref9, _excluded3);\\n    let submit = useSubmit();\\n    let formAction = useFormAction(action, {\\n      relative\\n    });\\n    let formMethod = method.toLowerCase() === \\\"get\\\" ? \\\"get\\\" : \\\"post\\\";\\n    let submitHandler = event => {\\n      onSubmit && onSubmit(event);\\n      if (event.defaultPrevented) return;\\n      event.preventDefault();\\n      let submitter = event.nativeEvent.submitter;\\n      let submitMethod = (submitter == null ? void 0 : submitter.getAttribute(\\\"formmethod\\\")) || method;\\n      submit(submitter || event.currentTarget, {\\n        fetcherKey,\\n        method: submitMethod,\\n        navigate,\\n        replace,\\n        state,\\n        relative,\\n        preventScrollReset,\\n        viewTransition\\n      });\\n    };\\n    return /*#__PURE__*/React__namespace.createElement(\\\"form\\\", _extends({\\n      ref: forwardedRef,\\n      method: formMethod,\\n      action: formAction,\\n      onSubmit: reloadDocument ? onSubmit : submitHandler\\n    }, props));\\n  });\\n  {\\n    Form.displayName = \\\"Form\\\";\\n  }\\n  /**\\n   * This component will emulate the browser's scroll restoration on location\\n   * changes.\\n   */\\n  function ScrollRestoration(_ref10) {\\n    let {\\n      getKey,\\n      storageKey\\n    } = _ref10;\\n    useScrollRestoration({\\n      getKey,\\n      storageKey\\n    });\\n    return null;\\n  }\\n  {\\n    ScrollRestoration.displayName = \\\"ScrollRestoration\\\";\\n  }\\n  //#endregion\\n\\n  ////////////////////////////////////////////////////////////////////////////////\\n  //#region Hooks\\n  ////////////////////////////////////////////////////////////////////////////////\\n  var DataRouterHook = /*#__PURE__*/function (DataRouterHook) {\\n    DataRouterHook[\\\"UseScrollRestoration\\\"] = \\\"useScrollRestoration\\\";\\n    DataRouterHook[\\\"UseSubmit\\\"] = \\\"useSubmit\\\";\\n    DataRouterHook[\\\"UseSubmitFetcher\\\"] = \\\"useSubmitFetcher\\\";\\n    DataRouterHook[\\\"UseFetcher\\\"] = \\\"useFetcher\\\";\\n    DataRouterHook[\\\"useViewTransitionState\\\"] = \\\"useViewTransitionState\\\";\\n    return DataRouterHook;\\n  }(DataRouterHook || {});\\n  var DataRouterStateHook = /*#__PURE__*/function (DataRouterStateHook) {\\n    DataRouterStateHook[\\\"UseFetcher\\\"] = \\\"useFetcher\\\";\\n    DataRouterStateHook[\\\"UseFetchers\\\"] = \\\"useFetchers\\\";\\n    DataRouterStateHook[\\\"UseScrollRestoration\\\"] = \\\"useScrollRestoration\\\";\\n    return DataRouterStateHook;\\n  }(DataRouterStateHook || {}); // Internal hooks\\n  function getDataRouterConsoleError(hookName) {\\n    return hookName + \\\" must be used within a data router.  See https://reactrouter.com/v6/routers/picking-a-router.\\\";\\n  }\\n  function useDataRouterContext(hookName) {\\n    let ctx = React__namespace.useContext(reactRouter.UNSAFE_DataRouterContext);\\n    !ctx ? router.UNSAFE_invariant(false, getDataRouterConsoleError(hookName))  : void 0;\\n    return ctx;\\n  }\\n  function useDataRouterState(hookName) {\\n    let state = React__namespace.useContext(reactRouter.UNSAFE_DataRouterStateContext);\\n    !state ? router.UNSAFE_invariant(false, getDataRouterConsoleError(hookName))  : void 0;\\n    return state;\\n  }\\n\\n  // External hooks\\n\\n  /**\\n   * Handles the click behavior for router `<Link>` components. This is useful if\\n   * you need to create custom `<Link>` components with the same click behavior we\\n   * use in our exported `<Link>`.\\n   */\\n  function useLinkClickHandler(to, _temp) {\\n    let {\\n      target,\\n      replace: replaceProp,\\n      state,\\n      preventScrollReset,\\n      relative,\\n      viewTransition\\n    } = _temp === void 0 ? {} : _temp;\\n    let navigate = reactRouter.useNavigate();\\n    let location = reactRouter.useLocation();\\n    let path = reactRouter.useResolvedPath(to, {\\n      relative\\n    });\\n    return React__namespace.useCallback(event => {\\n      if (shouldProcessLinkClick(event, target)) {\\n        event.preventDefault();\\n\\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\\n        // a push, so do the same here unless the replace prop is explicitly set\\n        let replace = replaceProp !== undefined ? replaceProp : reactRouter.createPath(location) === reactRouter.createPath(path);\\n        navigate(to, {\\n          replace,\\n          state,\\n          preventScrollReset,\\n          relative,\\n          viewTransition\\n        });\\n      }\\n    }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative, viewTransition]);\\n  }\\n\\n  /**\\n   * A convenient wrapper for reading and writing search parameters via the\\n   * URLSearchParams interface.\\n   */\\n  function useSearchParams(defaultInit) {\\n    router.UNSAFE_warning(typeof URLSearchParams !== \\\"undefined\\\", \\\"You cannot use the `useSearchParams` hook in a browser that does not \\\" + \\\"support the URLSearchParams API. If you need to support Internet \\\" + \\\"Explorer 11, we recommend you load a polyfill such as \\\" + \\\"https://github.com/ungap/url-search-params.\\\") ;\\n    let defaultSearchParamsRef = React__namespace.useRef(createSearchParams(defaultInit));\\n    let hasSetSearchParamsRef = React__namespace.useRef(false);\\n    let location = reactRouter.useLocation();\\n    let searchParams = React__namespace.useMemo(() =>\\n    // Only merge in the defaults if we haven't yet called setSearchParams.\\n    // Once we call that we want those to take precedence, otherwise you can't\\n    // remove a param with setSearchParams({}) if it has an initial value\\n    getSearchParamsForLocation(location.search, hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current), [location.search]);\\n    let navigate = reactRouter.useNavigate();\\n    let setSearchParams = React__namespace.useCallback((nextInit, navigateOptions) => {\\n      const newSearchParams = createSearchParams(typeof nextInit === \\\"function\\\" ? nextInit(searchParams) : nextInit);\\n      hasSetSearchParamsRef.current = true;\\n      navigate(\\\"?\\\" + newSearchParams, navigateOptions);\\n    }, [navigate, searchParams]);\\n    return [searchParams, setSearchParams];\\n  }\\n\\n  /**\\n   * Submits a HTML `<form>` to the server without reloading the page.\\n   */\\n\\n  /**\\n   * Submits a fetcher `<form>` to the server without reloading the page.\\n   */\\n\\n  function validateClientSideSubmission() {\\n    if (typeof document === \\\"undefined\\\") {\\n      throw new Error(\\\"You are calling submit during the server render. \\\" + \\\"Try calling submit within a `useEffect` or callback instead.\\\");\\n    }\\n  }\\n  let fetcherId = 0;\\n  let getUniqueFetcherId = () => \\\"__\\\" + String(++fetcherId) + \\\"__\\\";\\n\\n  /**\\n   * Returns a function that may be used to programmatically submit a form (or\\n   * some arbitrary data) to the server.\\n   */\\n  function useSubmit() {\\n    let {\\n      router\\n    } = useDataRouterContext(DataRouterHook.UseSubmit);\\n    let {\\n      basename\\n    } = React__namespace.useContext(reactRouter.UNSAFE_NavigationContext);\\n    let currentRouteId = reactRouter.UNSAFE_useRouteId();\\n    return React__namespace.useCallback(function (target, options) {\\n      if (options === void 0) {\\n        options = {};\\n      }\\n      validateClientSideSubmission();\\n      let {\\n        action,\\n        method,\\n        encType,\\n        formData,\\n        body\\n      } = getFormSubmissionInfo(target, basename);\\n      if (options.navigate === false) {\\n        let key = options.fetcherKey || getUniqueFetcherId();\\n        router.fetch(key, currentRouteId, options.action || action, {\\n          preventScrollReset: options.preventScrollReset,\\n          formData,\\n          body,\\n          formMethod: options.method || method,\\n          formEncType: options.encType || encType,\\n          flushSync: options.flushSync\\n        });\\n      } else {\\n        router.navigate(options.action || action, {\\n          preventScrollReset: options.preventScrollReset,\\n          formData,\\n          body,\\n          formMethod: options.method || method,\\n          formEncType: options.encType || encType,\\n          replace: options.replace,\\n          state: options.state,\\n          fromRouteId: currentRouteId,\\n          flushSync: options.flushSync,\\n          viewTransition: options.viewTransition\\n        });\\n      }\\n    }, [router, basename, currentRouteId]);\\n  }\\n\\n  // v7: Eventually we should deprecate this entirely in favor of using the\\n  // router method directly?\\n  function useFormAction(action, _temp2) {\\n    let {\\n      relative\\n    } = _temp2 === void 0 ? {} : _temp2;\\n    let {\\n      basename\\n    } = React__namespace.useContext(reactRouter.UNSAFE_NavigationContext);\\n    let routeContext = React__namespace.useContext(reactRouter.UNSAFE_RouteContext);\\n    !routeContext ? router.UNSAFE_invariant(false, \\\"useFormAction must be used inside a RouteContext\\\")  : void 0;\\n    let [match] = routeContext.matches.slice(-1);\\n    // Shallow clone path so we can modify it below, otherwise we modify the\\n    // object referenced by useMemo inside useResolvedPath\\n    let path = _extends({}, reactRouter.useResolvedPath(action ? action : \\\".\\\", {\\n      relative\\n    }));\\n\\n    // If no action was specified, browsers will persist current search params\\n    // when determining the path, so match that behavior\\n    // https://github.com/remix-run/remix/issues/927\\n    let location = reactRouter.useLocation();\\n    if (action == null) {\\n      // Safe to write to this directly here since if action was undefined, we\\n      // would have called useResolvedPath(\\\".\\\") which will never include a search\\n      path.search = location.search;\\n\\n      // When grabbing search params from the URL, remove any included ?index param\\n      // since it might not apply to our contextual route.  We add it back based\\n      // on match.route.index below\\n      let params = new URLSearchParams(path.search);\\n      let indexValues = params.getAll(\\\"index\\\");\\n      let hasNakedIndexParam = indexValues.some(v => v === \\\"\\\");\\n      if (hasNakedIndexParam) {\\n        params.delete(\\\"index\\\");\\n        indexValues.filter(v => v).forEach(v => params.append(\\\"index\\\", v));\\n        let qs = params.toString();\\n        path.search = qs ? \\\"?\\\" + qs : \\\"\\\";\\n      }\\n    }\\n    if ((!action || action === \\\".\\\") && match.route.index) {\\n      path.search = path.search ? path.search.replace(/^\\\\?/, \\\"?index&\\\") : \\\"?index\\\";\\n    }\\n\\n    // If we're operating within a basename, prepend it to the pathname prior\\n    // to creating the form action.  If this is a root navigation, then just use\\n    // the raw basename which allows the basename to have full control over the\\n    // presence of a trailing slash on root actions\\n    if (basename !== \\\"/\\\") {\\n      path.pathname = path.pathname === \\\"/\\\" ? basename : router.joinPaths([basename, path.pathname]);\\n    }\\n    return reactRouter.createPath(path);\\n  }\\n  // TODO: (v7) Change the useFetcher generic default from `any` to `unknown`\\n  /**\\n   * Interacts with route loaders and actions without causing a navigation. Great\\n   * for any interaction that stays on the same page.\\n   */\\n  function useFetcher(_temp3) {\\n    var _route$matches;\\n    let {\\n      key\\n    } = _temp3 === void 0 ? {} : _temp3;\\n    let {\\n      router: router$1\\n    } = useDataRouterContext(DataRouterHook.UseFetcher);\\n    let state = useDataRouterState(DataRouterStateHook.UseFetcher);\\n    let fetcherData = React__namespace.useContext(FetchersContext);\\n    let route = React__namespace.useContext(reactRouter.UNSAFE_RouteContext);\\n    let routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;\\n    !fetcherData ? router.UNSAFE_invariant(false, \\\"useFetcher must be used inside a FetchersContext\\\")  : void 0;\\n    !route ? router.UNSAFE_invariant(false, \\\"useFetcher must be used inside a RouteContext\\\")  : void 0;\\n    !(routeId != null) ? router.UNSAFE_invariant(false, \\\"useFetcher can only be used on routes that contain a unique \\\\\\\"id\\\\\\\"\\\")  : void 0;\\n\\n    // Fetcher key handling\\n    // OK to call conditionally to feature detect `useId`\\n    // eslint-disable-next-line react-hooks/rules-of-hooks\\n    let defaultKey = useIdImpl ? useIdImpl() : \\\"\\\";\\n    let [fetcherKey, setFetcherKey] = React__namespace.useState(key || defaultKey);\\n    if (key && key !== fetcherKey) {\\n      setFetcherKey(key);\\n    } else if (!fetcherKey) {\\n      // We will only fall through here when `useId` is not available\\n      setFetcherKey(getUniqueFetcherId());\\n    }\\n\\n    // Registration/cleanup\\n    React__namespace.useEffect(() => {\\n      router$1.getFetcher(fetcherKey);\\n      return () => {\\n        // Tell the router we've unmounted - if v7_fetcherPersist is enabled this\\n        // will not delete immediately but instead queue up a delete after the\\n        // fetcher returns to an `idle` state\\n        router$1.deleteFetcher(fetcherKey);\\n      };\\n    }, [router$1, fetcherKey]);\\n\\n    // Fetcher additions\\n    let load = React__namespace.useCallback((href, opts) => {\\n      !routeId ? router.UNSAFE_invariant(false, \\\"No routeId available for fetcher.load()\\\")  : void 0;\\n      router$1.fetch(fetcherKey, routeId, href, opts);\\n    }, [fetcherKey, routeId, router$1]);\\n    let submitImpl = useSubmit();\\n    let submit = React__namespace.useCallback((target, opts) => {\\n      submitImpl(target, _extends({}, opts, {\\n        navigate: false,\\n        fetcherKey\\n      }));\\n    }, [fetcherKey, submitImpl]);\\n    let FetcherForm = React__namespace.useMemo(() => {\\n      let FetcherForm = /*#__PURE__*/React__namespace.forwardRef((props, ref) => {\\n        return /*#__PURE__*/React__namespace.createElement(Form, _extends({}, props, {\\n          navigate: false,\\n          fetcherKey: fetcherKey,\\n          ref: ref\\n        }));\\n      });\\n      {\\n        FetcherForm.displayName = \\\"fetcher.Form\\\";\\n      }\\n      return FetcherForm;\\n    }, [fetcherKey]);\\n\\n    // Exposed FetcherWithComponents\\n    let fetcher = state.fetchers.get(fetcherKey) || router.IDLE_FETCHER;\\n    let data = fetcherData.get(fetcherKey);\\n    let fetcherWithComponents = React__namespace.useMemo(() => _extends({\\n      Form: FetcherForm,\\n      submit,\\n      load\\n    }, fetcher, {\\n      data\\n    }), [FetcherForm, submit, load, fetcher, data]);\\n    return fetcherWithComponents;\\n  }\\n\\n  /**\\n   * Provides all fetchers currently on the page. Useful for layouts and parent\\n   * routes that need to provide pending/optimistic UI regarding the fetch.\\n   */\\n  function useFetchers() {\\n    let state = useDataRouterState(DataRouterStateHook.UseFetchers);\\n    return Array.from(state.fetchers.entries()).map(_ref11 => {\\n      let [key, fetcher] = _ref11;\\n      return _extends({}, fetcher, {\\n        key\\n      });\\n    });\\n  }\\n  const SCROLL_RESTORATION_STORAGE_KEY = \\\"react-router-scroll-positions\\\";\\n  let savedScrollPositions = {};\\n\\n  /**\\n   * When rendered inside a RouterProvider, will restore scroll positions on navigations\\n   */\\n  function useScrollRestoration(_temp4) {\\n    let {\\n      getKey,\\n      storageKey\\n    } = _temp4 === void 0 ? {} : _temp4;\\n    let {\\n      router: router$1\\n    } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\\n    let {\\n      restoreScrollPosition,\\n      preventScrollReset\\n    } = useDataRouterState(DataRouterStateHook.UseScrollRestoration);\\n    let {\\n      basename\\n    } = React__namespace.useContext(reactRouter.UNSAFE_NavigationContext);\\n    let location = reactRouter.useLocation();\\n    let matches = reactRouter.useMatches();\\n    let navigation = reactRouter.useNavigation();\\n\\n    // Trigger manual scroll restoration while we're active\\n    React__namespace.useEffect(() => {\\n      window.history.scrollRestoration = \\\"manual\\\";\\n      return () => {\\n        window.history.scrollRestoration = \\\"auto\\\";\\n      };\\n    }, []);\\n\\n    // Save positions on pagehide\\n    usePageHide(React__namespace.useCallback(() => {\\n      if (navigation.state === \\\"idle\\\") {\\n        let key = (getKey ? getKey(location, matches) : null) || location.key;\\n        savedScrollPositions[key] = window.scrollY;\\n      }\\n      try {\\n        sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));\\n      } catch (error) {\\n        router.UNSAFE_warning(false, \\\"Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (\\\" + error + \\\").\\\") ;\\n      }\\n      window.history.scrollRestoration = \\\"auto\\\";\\n    }, [storageKey, getKey, navigation.state, location, matches]));\\n\\n    // Read in any saved scroll locations\\n    if (typeof document !== \\\"undefined\\\") {\\n      // eslint-disable-next-line react-hooks/rules-of-hooks\\n      React__namespace.useLayoutEffect(() => {\\n        try {\\n          let sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);\\n          if (sessionPositions) {\\n            savedScrollPositions = JSON.parse(sessionPositions);\\n          }\\n        } catch (e) {\\n          // no-op, use default empty object\\n        }\\n      }, [storageKey]);\\n\\n      // Enable scroll restoration in the router\\n      // eslint-disable-next-line react-hooks/rules-of-hooks\\n      React__namespace.useLayoutEffect(() => {\\n        let getKeyWithoutBasename = getKey && basename !== \\\"/\\\" ? (location, matches) => getKey( // Strip the basename to match useLocation()\\n        _extends({}, location, {\\n          pathname: router.stripBasename(location.pathname, basename) || location.pathname\\n        }), matches) : getKey;\\n        let disableScrollRestoration = router$1 == null ? void 0 : router$1.enableScrollRestoration(savedScrollPositions, () => window.scrollY, getKeyWithoutBasename);\\n        return () => disableScrollRestoration && disableScrollRestoration();\\n      }, [router$1, basename, getKey]);\\n\\n      // Restore scrolling when state.restoreScrollPosition changes\\n      // eslint-disable-next-line react-hooks/rules-of-hooks\\n      React__namespace.useLayoutEffect(() => {\\n        // Explicit false means don't do anything (used for submissions)\\n        if (restoreScrollPosition === false) {\\n          return;\\n        }\\n\\n        // been here before, scroll to it\\n        if (typeof restoreScrollPosition === \\\"number\\\") {\\n          window.scrollTo(0, restoreScrollPosition);\\n          return;\\n        }\\n\\n        // try to scroll to the hash\\n        if (location.hash) {\\n          let el = document.getElementById(decodeURIComponent(location.hash.slice(1)));\\n          if (el) {\\n            el.scrollIntoView();\\n            return;\\n          }\\n        }\\n\\n        // Don't reset if this navigation opted out\\n        if (preventScrollReset === true) {\\n          return;\\n        }\\n\\n        // otherwise go to the top on new locations\\n        window.scrollTo(0, 0);\\n      }, [location, restoreScrollPosition, preventScrollReset]);\\n    }\\n  }\\n\\n  /**\\n   * Setup a callback to be fired on the window's `beforeunload` event. This is\\n   * useful for saving some data to `window.localStorage` just before the page\\n   * refreshes.\\n   *\\n   * Note: The `callback` argument should be a function created with\\n   * `React.useCallback()`.\\n   */\\n  function useBeforeUnload(callback, options) {\\n    let {\\n      capture\\n    } = options || {};\\n    React__namespace.useEffect(() => {\\n      let opts = capture != null ? {\\n        capture\\n      } : undefined;\\n      window.addEventListener(\\\"beforeunload\\\", callback, opts);\\n      return () => {\\n        window.removeEventListener(\\\"beforeunload\\\", callback, opts);\\n      };\\n    }, [callback, capture]);\\n  }\\n\\n  /**\\n   * Setup a callback to be fired on the window's `pagehide` event. This is\\n   * useful for saving some data to `window.localStorage` just before the page\\n   * refreshes.  This event is better supported than beforeunload across browsers.\\n   *\\n   * Note: The `callback` argument should be a function created with\\n   * `React.useCallback()`.\\n   */\\n  function usePageHide(callback, options) {\\n    let {\\n      capture\\n    } = options || {};\\n    React__namespace.useEffect(() => {\\n      let opts = capture != null ? {\\n        capture\\n      } : undefined;\\n      window.addEventListener(\\\"pagehide\\\", callback, opts);\\n      return () => {\\n        window.removeEventListener(\\\"pagehide\\\", callback, opts);\\n      };\\n    }, [callback, capture]);\\n  }\\n\\n  /**\\n   * Wrapper around useBlocker to show a window.confirm prompt to users instead\\n   * of building a custom UI with useBlocker.\\n   *\\n   * Warning: This has *a lot of rough edges* and behaves very differently (and\\n   * very incorrectly in some cases) across browsers if user click addition\\n   * back/forward navigations while the confirm is open.  Use at your own risk.\\n   */\\n  function usePrompt(_ref12) {\\n    let {\\n      when,\\n      message\\n    } = _ref12;\\n    let blocker = reactRouter.useBlocker(when);\\n    React__namespace.useEffect(() => {\\n      if (blocker.state === \\\"blocked\\\") {\\n        let proceed = window.confirm(message);\\n        if (proceed) {\\n          // This timeout is needed to avoid a weird \\\"race\\\" on POP navigations\\n          // between the `window.history` revert navigation and the result of\\n          // `window.confirm`\\n          setTimeout(blocker.proceed, 0);\\n        } else {\\n          blocker.reset();\\n        }\\n      }\\n    }, [blocker, message]);\\n    React__namespace.useEffect(() => {\\n      if (blocker.state === \\\"blocked\\\" && !when) {\\n        blocker.reset();\\n      }\\n    }, [blocker, when]);\\n  }\\n\\n  /**\\n   * Return a boolean indicating if there is an active view transition to the\\n   * given href.  You can use this value to render CSS classes or viewTransitionName\\n   * styles onto your elements\\n   *\\n   * @param href The destination href\\n   * @param [opts.relative] Relative routing type (\\\"route\\\" | \\\"path\\\")\\n   */\\n  function useViewTransitionState(to, opts) {\\n    if (opts === void 0) {\\n      opts = {};\\n    }\\n    let vtContext = React__namespace.useContext(ViewTransitionContext);\\n    !(vtContext != null) ? router.UNSAFE_invariant(false, \\\"`useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  \\\" + \\\"Did you accidentally import `RouterProvider` from `react-router`?\\\")  : void 0;\\n    let {\\n      basename\\n    } = useDataRouterContext(DataRouterHook.useViewTransitionState);\\n    let path = reactRouter.useResolvedPath(to, {\\n      relative: opts.relative\\n    });\\n    if (!vtContext.isTransitioning) {\\n      return false;\\n    }\\n    let currentPath = router.stripBasename(vtContext.currentLocation.pathname, basename) || vtContext.currentLocation.pathname;\\n    let nextPath = router.stripBasename(vtContext.nextLocation.pathname, basename) || vtContext.nextLocation.pathname;\\n\\n    // Transition is active if we're going to or coming from the indicated\\n    // destination.  This ensures that other PUSH navigations that reverse\\n    // an indicated transition apply.  I.e., on the list view you have:\\n    //\\n    //   <NavLink to=\\\"/details/1\\\" viewTransition>\\n    //\\n    // If you click the breadcrumb back to the list view:\\n    //\\n    //   <NavLink to=\\\"/list\\\" viewTransition>\\n    //\\n    // We should apply the transition because it's indicated as active going\\n    // from /list -> /details/1 and therefore should be active on the reverse\\n    // (even though this isn't strictly a POP reverse)\\n    return router.matchPath(path.pathname, nextPath) != null || router.matchPath(path.pathname, currentPath) != null;\\n  }\\n\\n  //#endregion\\n\\n  Object.defineProperty(exports, 'AbortedDeferredError', {\\n    enumerable: true,\\n    get: function () { return reactRouter.AbortedDeferredError; }\\n  });\\n  Object.defineProperty(exports, 'Await', {\\n    enumerable: true,\\n    get: function () { return reactRouter.Await; }\\n  });\\n  Object.defineProperty(exports, 'MemoryRouter', {\\n    enumerable: true,\\n    get: function () { return reactRouter.MemoryRouter; }\\n  });\\n  Object.defineProperty(exports, 'Navigate', {\\n    enumerable: true,\\n    get: function () { return reactRouter.Navigate; }\\n  });\\n  Object.defineProperty(exports, 'NavigationType', {\\n    enumerable: true,\\n    get: function () { return reactRouter.NavigationType; }\\n  });\\n  Object.defineProperty(exports, 'Outlet', {\\n    enumerable: true,\\n    get: function () { return reactRouter.Outlet; }\\n  });\\n  Object.defineProperty(exports, 'Route', {\\n    enumerable: true,\\n    get: function () { return reactRouter.Route; }\\n  });\\n  Object.defineProperty(exports, 'Router', {\\n    enumerable: true,\\n    get: function () { return reactRouter.Router; }\\n  });\\n  Object.defineProperty(exports, 'Routes', {\\n    enumerable: true,\\n    get: function () { return reactRouter.Routes; }\\n  });\\n  Object.defineProperty(exports, 'UNSAFE_DataRouterContext', {\\n    enumerable: true,\\n    get: function () { return reactRouter.UNSAFE_DataRouterContext; }\\n  });\\n  Object.defineProperty(exports, 'UNSAFE_DataRouterStateContext', {\\n    enumerable: true,\\n    get: function () { return reactRouter.UNSAFE_DataRouterStateContext; }\\n  });\\n  Object.defineProperty(exports, 'UNSAFE_LocationContext', {\\n    enumerable: true,\\n    get: function () { return reactRouter.UNSAFE_LocationContext; }\\n  });\\n  Object.defineProperty(exports, 'UNSAFE_NavigationContext', {\\n    enumerable: true,\\n    get: function () { return reactRouter.UNSAFE_NavigationContext; }\\n  });\\n  Object.defineProperty(exports, 'UNSAFE_RouteContext', {\\n    enumerable: true,\\n    get: function () { return reactRouter.UNSAFE_RouteContext; }\\n  });\\n  Object.defineProperty(exports, 'UNSAFE_useRouteId', {\\n    enumerable: true,\\n    get: function () { return reactRouter.UNSAFE_useRouteId; }\\n  });\\n  Object.defineProperty(exports, 'createMemoryRouter', {\\n    enumerable: true,\\n    get: function () { return reactRouter.createMemoryRouter; }\\n  });\\n  Object.defineProperty(exports, 'createPath', {\\n    enumerable: true,\\n    get: function () { return reactRouter.createPath; }\\n  });\\n  Object.defineProperty(exports, 'createRoutesFromChildren', {\\n    enumerable: true,\\n    get: function () { return reactRouter.createRoutesFromChildren; }\\n  });\\n  Object.defineProperty(exports, 'createRoutesFromElements', {\\n    enumerable: true,\\n    get: function () { return reactRouter.createRoutesFromElements; }\\n  });\\n  Object.defineProperty(exports, 'defer', {\\n    enumerable: true,\\n    get: function () { return reactRouter.defer; }\\n  });\\n  Object.defineProperty(exports, 'generatePath', {\\n    enumerable: true,\\n    get: function () { return reactRouter.generatePath; }\\n  });\\n  Object.defineProperty(exports, 'isRouteErrorResponse', {\\n    enumerable: true,\\n    get: function () { return reactRouter.isRouteErrorResponse; }\\n  });\\n  Object.defineProperty(exports, 'json', {\\n    enumerable: true,\\n    get: function () { return reactRouter.json; }\\n  });\\n  Object.defineProperty(exports, 'matchPath', {\\n    enumerable: true,\\n    get: function () { return reactRouter.matchPath; }\\n  });\\n  Object.defineProperty(exports, 'matchRoutes', {\\n    enumerable: true,\\n    get: function () { return reactRouter.matchRoutes; }\\n  });\\n  Object.defineProperty(exports, 'parsePath', {\\n    enumerable: true,\\n    get: function () { return reactRouter.parsePath; }\\n  });\\n  Object.defineProperty(exports, 'redirect', {\\n    enumerable: true,\\n    get: function () { return reactRouter.redirect; }\\n  });\\n  Object.defineProperty(exports, 'redirectDocument', {\\n    enumerable: true,\\n    get: function () { return reactRouter.redirectDocument; }\\n  });\\n  Object.defineProperty(exports, 'renderMatches', {\\n    enumerable: true,\\n    get: function () { return reactRouter.renderMatches; }\\n  });\\n  Object.defineProperty(exports, 'replace', {\\n    enumerable: true,\\n    get: function () { return reactRouter.replace; }\\n  });\\n  Object.defineProperty(exports, 'resolvePath', {\\n    enumerable: true,\\n    get: function () { return reactRouter.resolvePath; }\\n  });\\n  Object.defineProperty(exports, 'useActionData', {\\n    enumerable: true,\\n    get: function () { return reactRouter.useActionData; }\\n  });\\n  Object.defineProperty(exports, 'useAsyncError', {\\n    enumerable: true,\\n    get: function () { return reactRouter.useAsyncError; }\\n  });\\n  Object.defineProperty(exports, 'useAsyncValue', {\\n    enumerable: true,\\n    get: function () { return reactRouter.useAsyncValue; }\\n  });\\n  Object.defineProperty(exports, 'useBlocker', {\\n    enumerable: true,\\n    get: function () { return reactRouter.useBlocker; }\\n  });\\n  Object.defineProperty(exports, 'useHref', {\\n    enumerable: true,\\n    get: function () { return reactRouter.useHref; }\\n  });\\n  Object.defineProperty(exports, 'useInRouterContext', {\\n    enumerable: true,\\n    get: function () { return reactRouter.useInRouterContext; }\\n  });\\n  Object.defineProperty(exports, 'useLoaderData', {\\n    enumerable: true,\\n    get: function () { return reactRouter.useLoaderData; }\\n  });\\n  Object.defineProperty(exports, 'useLocation', {\\n    enumerable: true,\\n    get: function () { return reactRouter.useLocation; }\\n  });\\n  Object.defineProperty(exports, 'useMatch', {\\n    enumerable: true,\\n    get: function () { return reactRouter.useMatch; }\\n  });\\n  Object.defineProperty(exports, 'useMatches', {\\n    enumerable: true,\\n    get: function () { return reactRouter.useMatches; }\\n  });\\n  Object.defineProperty(exports, 'useNavigate', {\\n    enumerable: true,\\n    get: function () { return reactRouter.useNavigate; }\\n  });\\n  Object.defineProperty(exports, 'useNavigation', {\\n    enumerable: true,\\n    get: function () { return reactRouter.useNavigation; }\\n  });\\n  Object.defineProperty(exports, 'useNavigationType', {\\n    enumerable: true,\\n    get: function () { return reactRouter.useNavigationType; }\\n  });\\n  Object.defineProperty(exports, 'useOutlet', {\\n    enumerable: true,\\n    get: function () { return reactRouter.useOutlet; }\\n  });\\n  Object.defineProperty(exports, 'useOutletContext', {\\n    enumerable: true,\\n    get: function () { return reactRouter.useOutletContext; }\\n  });\\n  Object.defineProperty(exports, 'useParams', {\\n    enumerable: true,\\n    get: function () { return reactRouter.useParams; }\\n  });\\n  Object.defineProperty(exports, 'useResolvedPath', {\\n    enumerable: true,\\n    get: function () { return reactRouter.useResolvedPath; }\\n  });\\n  Object.defineProperty(exports, 'useRevalidator', {\\n    enumerable: true,\\n    get: function () { return reactRouter.useRevalidator; }\\n  });\\n  Object.defineProperty(exports, 'useRouteError', {\\n    enumerable: true,\\n    get: function () { return reactRouter.useRouteError; }\\n  });\\n  Object.defineProperty(exports, 'useRouteLoaderData', {\\n    enumerable: true,\\n    get: function () { return reactRouter.useRouteLoaderData; }\\n  });\\n  Object.defineProperty(exports, 'useRoutes', {\\n    enumerable: true,\\n    get: function () { return reactRouter.useRoutes; }\\n  });\\n  Object.defineProperty(exports, 'UNSAFE_ErrorResponseImpl', {\\n    enumerable: true,\\n    get: function () { return router.UNSAFE_ErrorResponseImpl; }\\n  });\\n  exports.BrowserRouter = BrowserRouter;\\n  exports.Form = Form;\\n  exports.HashRouter = HashRouter;\\n  exports.Link = Link;\\n  exports.NavLink = NavLink;\\n  exports.RouterProvider = RouterProvider;\\n  exports.ScrollRestoration = ScrollRestoration;\\n  exports.UNSAFE_FetchersContext = FetchersContext;\\n  exports.UNSAFE_ViewTransitionContext = ViewTransitionContext;\\n  exports.UNSAFE_useScrollRestoration = useScrollRestoration;\\n  exports.createBrowserRouter = createBrowserRouter;\\n  exports.createHashRouter = createHashRouter;\\n  exports.createSearchParams = createSearchParams;\\n  exports.unstable_HistoryRouter = HistoryRouter;\\n  exports.unstable_usePrompt = usePrompt;\\n  exports.useBeforeUnload = useBeforeUnload;\\n  exports.useFetcher = useFetcher;\\n  exports.useFetchers = useFetchers;\\n  exports.useFormAction = useFormAction;\\n  exports.useLinkClickHandler = useLinkClickHandler;\\n  exports.useSearchParams = useSearchParams;\\n  exports.useSubmit = useSubmit;\\n  exports.useViewTransitionState = useViewTransitionState;\\n\\n  Object.defineProperty(exports, '__esModule', { value: true });\\n\\n}));\\n//# sourceMappingURL=react-router-dom.development.js.map\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"factory\",\"define\",\"amd\",\"globalThis\",\"self\",\"ReactRouterDOM\",\"React\",\"ReactDOM\",\"ReactRouter\",\"RemixRouter\",\"reactRouter\",\"router\",\"_interopNamespace\",\"e\",\"__esModule\",\"n\",\"Object\",\"create\",\"keys\",\"forEach\",\"k\",\"d\",\"getOwnPropertyDescriptor\",\"defineProperty\",\"get\",\"enumerable\",\"freeze\",\"_extends\",\"assign\",\"bind\",\"target\",\"i\",\"arguments\",\"length\",\"source\",\"key\",\"prototype\",\"hasOwnProperty\",\"call\",\"apply\",\"_objectWithoutPropertiesLoose\",\"excluded\",\"sourceKeys\",\"indexOf\",\"isHtmlElement\",\"object\",\"tagName\",\"createSearchParams\",\"init\",\"URLSearchParams\",\"Array\",\"isArray\",\"reduce\",\"memo\",\"value\",\"concat\",\"map\",\"v\",\"getSearchParamsForLocation\",\"locationSearch\",\"defaultSearchParams\",\"searchParams\",\"_\",\"has\",\"getAll\",\"append\",\"getFormEncType\",\"encType\",\"supportedFormEncTypes\",\"UNSAFE_warning\",\"parseHydrationData\",\"_window\",\"state\",\"window\",\"__staticRouterHydrationData\",\"errors\",\"entries\",\"serialized\",\"val\",\"__type\",\"UNSAFE_ErrorResponseImpl\",\"status\",\"statusText\",\"data\",\"internal\",\"__subType\",\"ErrorConstructor\",\"error\",\"message\",\"stack\",\"Error\",\"flushSyncSafe\",\"cb\",\"flushSyncImpl\",\"HistoryRouter\",\"_ref6\",\"basename\",\"children\",\"future\",\"history\",\"setStateImpl\",\"React__namespace\",\"useState\",\"action\",\"location\",\"v7_startTransition\",\"setState\",\"useCallback\",\"newState\",\"startTransitionImpl\",\"useLayoutEffect\",\"listen\",\"useEffect\",\"UNSAFE_logV6DeprecationWarnings\",\"createElement\",\"Router\",\"navigationType\",\"navigator\",\"ScrollRestoration\",\"_ref10\",\"getKey\",\"storageKey\",\"useScrollRestoration\",\"getDataRouterConsoleError\",\"hookName\",\"useDataRouterContext\",\"ctx\",\"useContext\",\"UNSAFE_DataRouterContext\",\"UNSAFE_invariant\",\"useDataRouterState\",\"UNSAFE_DataRouterStateContext\",\"useLinkClickHandler\",\"to\",\"_temp\",\"replaceProp\",\"preventScrollReset\",\"relative\",\"viewTransition\",\"navigate\",\"useNavigate\",\"useLocation\",\"path\",\"useResolvedPath\",\"event\",\"button\",\"metaKey\",\"altKey\",\"ctrlKey\",\"shiftKey\",\"preventDefault\",\"replace\",\"undefined\",\"createPath\",\"useSubmit\",\"DataRouterHook\",\"UseSubmit\",\"UNSAFE_NavigationContext\",\"currentRouteId\",\"UNSAFE_useRouteId\",\"options\",\"document\",\"method\",\"toLowerCase\",\"attr\",\"getAttribute\",\"stripBasename\",\"defaultMethod\",\"defaultEncType\",\"formData\",\"FormData\",\"form\",\"_formDataSupportsSubmitter\",\"name\",\"type\",\"prefix\",\"body\",\"fetcherKey\",\"String\",\"fetcherId\",\"fetch\",\"formMethod\",\"formEncType\",\"flushSync\",\"fromRouteId\",\"useFormAction\",\"_temp2\",\"routeContext\",\"UNSAFE_RouteContext\",\"match\",\"matches\",\"slice\",\"search\",\"params\",\"indexValues\",\"some\",\"hasNakedIndexParam\",\"delete\",\"filter\",\"qs\",\"toString\",\"index\",\"route\",\"pathname\",\"joinPaths\",\"_temp4\",\"router$1\",\"UseScrollRestoration\",\"restoreScrollPosition\",\"DataRouterStateHook\",\"useMatches\",\"navigation\",\"useNavigation\",\"scrollRestoration\",\"usePageHide\",\"savedScrollPositions\",\"scrollY\",\"sessionStorage\",\"setItem\",\"SCROLL_RESTORATION_STORAGE_KEY\",\"JSON\",\"stringify\",\"sessionPositions\",\"getItem\",\"parse\",\"getKeyWithoutBasename\",\"disableScrollRestoration\",\"enableScrollRestoration\",\"scrollTo\",\"hash\",\"el\",\"getElementById\",\"decodeURIComponent\",\"scrollIntoView\",\"callback\",\"capture\",\"opts\",\"addEventListener\",\"removeEventListener\",\"useViewTransitionState\",\"vtContext\",\"ViewTransitionContext\",\"isTransitioning\",\"currentPath\",\"currentLocation\",\"nextPath\",\"nextLocation\",\"matchPath\",\"ReactDOM__namespace\",\"Set\",\"_excluded\",\"_excluded2\",\"_excluded3\",\"__reactRouterVersion\",\"REACT_ROUTER_VERSION\",\"createContext\",\"displayName\",\"FetchersContext\",\"Map\",\"useIdImpl\",\"Deferred\",\"constructor\",\"promise\",\"Promise\",\"resolve\",\"reject\",\"this.resolve\",\"reason\",\"this.reject\",\"MemoizedDataRoutes\",\"DataRoutes\",\"_ref3\",\"routes\",\"UNSAFE_useRoutesImpl\",\"isBrowser\",\"ABSOLUTE_URL_REGEX\",\"Link\",\"forwardRef\",\"LinkWithRef\",\"_ref7\",\"ref\",\"handleClick\",\"onClick\",\"defaultPrevented\",\"internalOnClick\",\"reloadDocument\",\"rest\",\"absoluteHref\",\"isExternal\",\"test\",\"currentUrl\",\"URL\",\"href\",\"targetUrl\",\"startsWith\",\"protocol\",\"origin\",\"useHref\",\"NavLink\",\"NavLinkWithRef\",\"_ref8\",\"ariaCurrentProp\",\"caseSensitive\",\"classNameProp\",\"end\",\"styleProp\",\"routerState\",\"toPathname\",\"encodeLocation\",\"locationPathname\",\"nextLocationPathname\",\"endSlashPosition\",\"endsWith\",\"isActive\",\"charAt\",\"isPending\",\"renderProps\",\"ariaCurrent\",\"className\",\"Boolean\",\"join\",\"style\",\"Form\",\"_ref9\",\"forwardedRef\",\"onSubmit\",\"props\",\"submit\",\"formAction\",\"submitHandler\",\"submitter\",\"nativeEvent\",\"submitMethod\",\"currentTarget\",\"AbortedDeferredError\",\"Await\",\"MemoryRouter\",\"Navigate\",\"NavigationType\",\"Outlet\",\"Route\",\"Routes\",\"UNSAFE_LocationContext\",\"createMemoryRouter\",\"createRoutesFromChildren\",\"createRoutesFromElements\",\"defer\",\"generatePath\",\"isRouteErrorResponse\",\"json\",\"matchRoutes\",\"parsePath\",\"redirect\",\"redirectDocument\",\"renderMatches\",\"resolvePath\",\"useActionData\",\"useAsyncError\",\"useAsyncValue\",\"useBlocker\",\"useInRouterContext\",\"useLoaderData\",\"useMatch\",\"useNavigationType\",\"useOutlet\",\"useOutletContext\",\"useParams\",\"useRevalidator\",\"useRouteError\",\"useRouteLoaderData\",\"useRoutes\",\"BrowserRouter\",\"_ref4\",\"historyRef\",\"useRef\",\"current\",\"createBrowserHistory\",\"v5Compat\",\"HashRouter\",\"_ref5\",\"createHashHistory\",\"RouterProvider\",\"_ref\",\"fallbackElement\",\"pendingState\",\"setPendingState\",\"setVtContext\",\"renderDfd\",\"setRenderDfd\",\"transition\",\"setTransition\",\"interruption\",\"setInterruption\",\"fetcherData\",\"optInStartTransition\",\"_ref2\",\"deletedFetchers\",\"viewTransitionOpts\",\"fetchers\",\"fetcher\",\"set\",\"isViewTransitionUnavailable\",\"startViewTransition\",\"skipTransition\",\"t\",\"finished\",\"finally\",\"subscribe\",\"renderPromise\",\"v7_partialHydration\",\"useMemo\",\"createHref\",\"go\",\"push\",\"dataRouterContext\",\"static\",\"routerFuture\",\"v7_relativeSplatPath\",\"Fragment\",\"Provider\",\"historyAction\",\"initialized\",\"UNSAFE_FetchersContext\",\"UNSAFE_ViewTransitionContext\",\"UNSAFE_useScrollRestoration\",\"createBrowserRouter\",\"createRouter\",\"v7_prependBasename\",\"hydrationData\",\"mapRouteProperties\",\"UNSAFE_mapRouteProperties\",\"dataStrategy\",\"patchRoutesOnNavigation\",\"initialize\",\"createHashRouter\",\"unstable_HistoryRouter\",\"unstable_usePrompt\",\"usePrompt\",\"_ref12\",\"when\",\"blocker\",\"confirm\",\"proceed\",\"setTimeout\",\"reset\",\"useBeforeUnload\",\"useFetcher\",\"_temp3\",\"_route$matches\",\"UseFetcher\",\"routeId\",\"id\",\"defaultKey\",\"setFetcherKey\",\"getFetcher\",\"deleteFetcher\",\"load\",\"submitImpl\",\"FetcherForm\",\"IDLE_FETCHER\",\"fetcherWithComponents\",\"useFetchers\",\"UseFetchers\",\"from\",\"_ref11\",\"useSearchParams\",\"defaultInit\",\"defaultSearchParamsRef\",\"hasSetSearchParamsRef\",\"setSearchParams\",\"nextInit\",\"navigateOptions\",\"newSearchParams\"]\n}\n"]