["^ ","~:output",["^ ","~:js","goog.provide('devtools.formatters.markup');\ndevtools.formatters.markup.print_with = (function devtools$formatters$markup$print_with(var_args){\nvar args__5732__auto__ = [];\nvar len__5726__auto___15389 = arguments.length;\nvar i__5727__auto___15390 = (0);\nwhile(true){\nif((i__5727__auto___15390 < len__5726__auto___15389)){\nargs__5732__auto__.push((arguments[i__5727__auto___15390]));\n\nvar G__15391 = (i__5727__auto___15390 + (1));\ni__5727__auto___15390 = G__15391;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5733__auto__ = ((((3) < args__5732__auto__.length))?(new cljs.core.IndexedSeq(args__5732__auto__.slice((3)),(0),null)):null);\nreturn devtools.formatters.markup.print_with.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__5733__auto__);\n});\n\n(devtools.formatters.markup.print_with.cljs$core$IFn$_invoke$arity$variadic = (function (method,value,tag,p__14895){\nvar vec__14896 = p__14895;\nvar max_level = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14896,(0),null);\nvar job_fn = (function (){\nvar G__14899 = value;\nvar G__14900 = tag;\nvar G__14901 = (devtools.formatters.markup.get_markup_db.cljs$core$IFn$_invoke$arity$0 ? devtools.formatters.markup.get_markup_db.cljs$core$IFn$_invoke$arity$0() : devtools.formatters.markup.get_markup_db.call(null, ));\nreturn (method.cljs$core$IFn$_invoke$arity$3 ? method.cljs$core$IFn$_invoke$arity$3(G__14899,G__14900,G__14901) : method.call(null, G__14899,G__14900,G__14901));\n});\nif((!((max_level == null)))){\nvar _STAR_print_level_STAR__orig_val__14905 = cljs.core._STAR_print_level_STAR_;\nvar _STAR_print_level_STAR__temp_val__14906 = (max_level + (1));\n(cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR__temp_val__14906);\n\ntry{return job_fn();\n}finally {(cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR__orig_val__14905);\n}} else {\nreturn job_fn();\n}\n}));\n\n(devtools.formatters.markup.print_with.cljs$lang$maxFixedArity = (3));\n\n/** @this {Function} */\n(devtools.formatters.markup.print_with.cljs$lang$applyTo = (function (seq14891){\nvar G__14892 = cljs.core.first(seq14891);\nvar seq14891__$1 = cljs.core.next(seq14891);\nvar G__14893 = cljs.core.first(seq14891__$1);\nvar seq14891__$2 = cljs.core.next(seq14891__$1);\nvar G__14894 = cljs.core.first(seq14891__$2);\nvar seq14891__$3 = cljs.core.next(seq14891__$2);\nvar self__5711__auto__ = this;\nreturn self__5711__auto__.cljs$core$IFn$_invoke$arity$variadic(G__14892,G__14893,G__14894,seq14891__$3);\n}));\n\ndevtools.formatters.markup.print_via_writer = (function devtools$formatters$markup$print_via_writer(var_args){\nvar args__5732__auto__ = [];\nvar len__5726__auto___15399 = arguments.length;\nvar i__5727__auto___15400 = (0);\nwhile(true){\nif((i__5727__auto___15400 < len__5726__auto___15399)){\nargs__5732__auto__.push((arguments[i__5727__auto___15400]));\n\nvar G__15401 = (i__5727__auto___15400 + (1));\ni__5727__auto___15400 = G__15401;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5733__auto__ = ((((2) < args__5732__auto__.length))?(new cljs.core.IndexedSeq(args__5732__auto__.slice((2)),(0),null)):null);\nreturn devtools.formatters.markup.print_via_writer.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5733__auto__);\n});\n\n(devtools.formatters.markup.print_via_writer.cljs$core$IFn$_invoke$arity$variadic = (function (value,tag,p__14917){\nvar vec__14918 = p__14917;\nvar max_level = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14918,(0),null);\nreturn devtools.formatters.markup.print_with.cljs$core$IFn$_invoke$arity$variadic(devtools.formatters.printing.managed_print_via_writer,value,tag,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([max_level], 0));\n}));\n\n(devtools.formatters.markup.print_via_writer.cljs$lang$maxFixedArity = (2));\n\n/** @this {Function} */\n(devtools.formatters.markup.print_via_writer.cljs$lang$applyTo = (function (seq14909){\nvar G__14910 = cljs.core.first(seq14909);\nvar seq14909__$1 = cljs.core.next(seq14909);\nvar G__14911 = cljs.core.first(seq14909__$1);\nvar seq14909__$2 = cljs.core.next(seq14909__$1);\nvar self__5711__auto__ = this;\nreturn self__5711__auto__.cljs$core$IFn$_invoke$arity$variadic(G__14910,G__14911,seq14909__$2);\n}));\n\ndevtools.formatters.markup.print_via_protocol = (function devtools$formatters$markup$print_via_protocol(var_args){\nvar args__5732__auto__ = [];\nvar len__5726__auto___15411 = arguments.length;\nvar i__5727__auto___15412 = (0);\nwhile(true){\nif((i__5727__auto___15412 < len__5726__auto___15411)){\nargs__5732__auto__.push((arguments[i__5727__auto___15412]));\n\nvar G__15413 = (i__5727__auto___15412 + (1));\ni__5727__auto___15412 = G__15413;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5733__auto__ = ((((2) < args__5732__auto__.length))?(new cljs.core.IndexedSeq(args__5732__auto__.slice((2)),(0),null)):null);\nreturn devtools.formatters.markup.print_via_protocol.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5733__auto__);\n});\n\n(devtools.formatters.markup.print_via_protocol.cljs$core$IFn$_invoke$arity$variadic = (function (value,tag,p__14930){\nvar vec__14931 = p__14930;\nvar max_level = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14931,(0),null);\nreturn devtools.formatters.markup.print_with.cljs$core$IFn$_invoke$arity$variadic(devtools.formatters.printing.managed_print_via_protocol,value,tag,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([max_level], 0));\n}));\n\n(devtools.formatters.markup.print_via_protocol.cljs$lang$maxFixedArity = (2));\n\n/** @this {Function} */\n(devtools.formatters.markup.print_via_protocol.cljs$lang$applyTo = (function (seq14924){\nvar G__14925 = cljs.core.first(seq14924);\nvar seq14924__$1 = cljs.core.next(seq14924);\nvar G__14926 = cljs.core.first(seq14924__$1);\nvar seq14924__$2 = cljs.core.next(seq14924__$1);\nvar self__5711__auto__ = this;\nreturn self__5711__auto__.cljs$core$IFn$_invoke$arity$variadic(G__14925,G__14926,seq14924__$2);\n}));\n\ndevtools.formatters.markup._LT_expandable_GT_ = (function devtools$formatters$markup$_LT_expandable_GT_(var_args){\nvar args__5732__auto__ = [];\nvar len__5726__auto___15417 = arguments.length;\nvar i__5727__auto___15418 = (0);\nwhile(true){\nif((i__5727__auto___15418 < len__5726__auto___15417)){\nargs__5732__auto__.push((arguments[i__5727__auto___15418]));\n\nvar G__15419 = (i__5727__auto___15418 + (1));\ni__5727__auto___15418 = G__15419;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5733__auto__ = ((((0) < args__5732__auto__.length))?(new cljs.core.IndexedSeq(args__5732__auto__.slice((0)),(0),null)):null);\nreturn devtools.formatters.markup._LT_expandable_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__5733__auto__);\n});\n\n(devtools.formatters.markup._LT_expandable_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (children){\nvar inner_markup = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"expandable-inner-tag\",\"expandable-inner-tag\",-799648560)], null),children);\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"expandable-tag\",\"expandable-tag\",151027578),new cljs.core.Keyword(null,\"expandable-symbol\",\"expandable-symbol\",1644611290),inner_markup], null);\n}));\n\n(devtools.formatters.markup._LT_expandable_GT_.cljs$lang$maxFixedArity = (0));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_expandable_GT_.cljs$lang$applyTo = (function (seq14934){\nvar self__5712__auto__ = this;\nreturn self__5712__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq14934));\n}));\n\ndevtools.formatters.markup._LT_raw_surrogate_GT_ = (function devtools$formatters$markup$_LT_raw_surrogate_GT_(var_args){\nvar args__5732__auto__ = [];\nvar len__5726__auto___15424 = arguments.length;\nvar i__5727__auto___15425 = (0);\nwhile(true){\nif((i__5727__auto___15425 < len__5726__auto___15424)){\nargs__5732__auto__.push((arguments[i__5727__auto___15425]));\n\nvar G__15426 = (i__5727__auto___15425 + (1));\ni__5727__auto___15425 = G__15426;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5733__auto__ = ((((0) < args__5732__auto__.length))?(new cljs.core.IndexedSeq(args__5732__auto__.slice((0)),(0),null)):null);\nreturn devtools.formatters.markup._LT_raw_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__5733__auto__);\n});\n\n(devtools.formatters.markup._LT_raw_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (args){\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"surrogate\"], null),args);\n}));\n\n(devtools.formatters.markup._LT_raw_surrogate_GT_.cljs$lang$maxFixedArity = (0));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_raw_surrogate_GT_.cljs$lang$applyTo = (function (seq14939){\nvar self__5712__auto__ = this;\nreturn self__5712__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq14939));\n}));\n\ndevtools.formatters.markup._LT_surrogate_GT_ = (function devtools$formatters$markup$_LT_surrogate_GT_(var_args){\nvar args__5732__auto__ = [];\nvar len__5726__auto___15429 = arguments.length;\nvar i__5727__auto___15432 = (0);\nwhile(true){\nif((i__5727__auto___15432 < len__5726__auto___15429)){\nargs__5732__auto__.push((arguments[i__5727__auto___15432]));\n\nvar G__15434 = (i__5727__auto___15432 + (1));\ni__5727__auto___15432 = G__15434;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5733__auto__ = ((((0) < args__5732__auto__.length))?(new cljs.core.IndexedSeq(args__5732__auto__.slice((0)),(0),null)):null);\nreturn devtools.formatters.markup._LT_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__5733__auto__);\n});\n\n(devtools.formatters.markup._LT_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (p__14946){\nvar vec__14947 = p__14946;\nvar object = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14947,(0),null);\nvar header = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14947,(1),null);\nvar body = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14947,(2),null);\nvar start_index = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14947,(3),null);\nvar header__$1 = (((!((body == null))))?devtools.formatters.markup._LT_expandable_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([header], 0)):header);\nreturn devtools.formatters.markup._LT_raw_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([object,header__$1,body,start_index], 0));\n}));\n\n(devtools.formatters.markup._LT_surrogate_GT_.cljs$lang$maxFixedArity = (0));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_surrogate_GT_.cljs$lang$applyTo = (function (seq14944){\nvar self__5712__auto__ = this;\nreturn self__5712__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq14944));\n}));\n\ndevtools.formatters.markup._LT_reference_GT_ = (function devtools$formatters$markup$_LT_reference_GT_(var_args){\nvar args__5732__auto__ = [];\nvar len__5726__auto___15447 = arguments.length;\nvar i__5727__auto___15448 = (0);\nwhile(true){\nif((i__5727__auto___15448 < len__5726__auto___15447)){\nargs__5732__auto__.push((arguments[i__5727__auto___15448]));\n\nvar G__15451 = (i__5727__auto___15448 + (1));\ni__5727__auto___15448 = G__15451;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5733__auto__ = ((((0) < args__5732__auto__.length))?(new cljs.core.IndexedSeq(args__5732__auto__.slice((0)),(0),null)):null);\nreturn devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__5733__auto__);\n});\n\n(devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (args){\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"reference\"], null),args);\n}));\n\n(devtools.formatters.markup._LT_reference_GT_.cljs$lang$maxFixedArity = (0));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_reference_GT_.cljs$lang$applyTo = (function (seq14950){\nvar self__5712__auto__ = this;\nreturn self__5712__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq14950));\n}));\n\ndevtools.formatters.markup._LT_reference_surrogate_GT_ = (function devtools$formatters$markup$_LT_reference_surrogate_GT_(var_args){\nvar args__5732__auto__ = [];\nvar len__5726__auto___15453 = arguments.length;\nvar i__5727__auto___15458 = (0);\nwhile(true){\nif((i__5727__auto___15458 < len__5726__auto___15453)){\nargs__5732__auto__.push((arguments[i__5727__auto___15458]));\n\nvar G__15459 = (i__5727__auto___15458 + (1));\ni__5727__auto___15458 = G__15459;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5733__auto__ = ((((0) < args__5732__auto__.length))?(new cljs.core.IndexedSeq(args__5732__auto__.slice((0)),(0),null)):null);\nreturn devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__5733__auto__);\n});\n\n(devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (args){\nreturn devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.apply.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_surrogate_GT_,args)], 0));\n}));\n\n(devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$lang$maxFixedArity = (0));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$lang$applyTo = (function (seq14954){\nvar self__5712__auto__ = this;\nreturn self__5712__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq14954));\n}));\n\ndevtools.formatters.markup._LT_circular_reference_GT_ = (function devtools$formatters$markup$_LT_circular_reference_GT_(var_args){\nvar args__5732__auto__ = [];\nvar len__5726__auto___15461 = arguments.length;\nvar i__5727__auto___15462 = (0);\nwhile(true){\nif((i__5727__auto___15462 < len__5726__auto___15461)){\nargs__5732__auto__.push((arguments[i__5727__auto___15462]));\n\nvar G__15463 = (i__5727__auto___15462 + (1));\ni__5727__auto___15462 = G__15463;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5733__auto__ = ((((0) < args__5732__auto__.length))?(new cljs.core.IndexedSeq(args__5732__auto__.slice((0)),(0),null)):null);\nreturn devtools.formatters.markup._LT_circular_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__5733__auto__);\n});\n\n(devtools.formatters.markup._LT_circular_reference_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (children){\nreturn devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"circular-reference-tag\",\"circular-reference-tag\",858973471),new cljs.core.Keyword(null,\"circular-ref-icon\",\"circular-ref-icon\",-2087682919)], null),cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"circular-reference-body-tag\",\"circular-reference-body-tag\",-1301830023)], null),children)], 0));\n}));\n\n(devtools.formatters.markup._LT_circular_reference_GT_.cljs$lang$maxFixedArity = (0));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_circular_reference_GT_.cljs$lang$applyTo = (function (seq14955){\nvar self__5712__auto__ = this;\nreturn self__5712__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq14955));\n}));\n\ndevtools.formatters.markup._LT_native_reference_GT_ = (function devtools$formatters$markup$_LT_native_reference_GT_(object){\nvar reference = devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([object,(function (p1__14956_SHARP_){\nreturn devtools.formatters.state.set_prevent_recursion(p1__14956_SHARP_,true);\n})], 0));\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"native-reference-wrapper-tag\",\"native-reference-wrapper-tag\",2047690940),new cljs.core.Keyword(null,\"native-reference-background\",\"native-reference-background\",-286129550),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"native-reference-tag\",\"native-reference-tag\",-1516119079),reference], null)], null);\n});\ndevtools.formatters.markup._LT_header_expander_GT_ = (function devtools$formatters$markup$_LT_header_expander_GT_(object){\nreturn devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([devtools.formatters.markup._LT_raw_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([object,new cljs.core.Keyword(null,\"header-expander-symbol\",\"header-expander-symbol\",907531743),new cljs.core.Keyword(null,\"target\",\"target\",253001721)], 0)),devtools.formatters.state.reset_depth_limits], 0));\n});\ndevtools.formatters.markup._LT_cljs_land_GT_ = (function devtools$formatters$markup$_LT_cljs_land_GT_(var_args){\nvar args__5732__auto__ = [];\nvar len__5726__auto___15471 = arguments.length;\nvar i__5727__auto___15472 = (0);\nwhile(true){\nif((i__5727__auto___15472 < len__5726__auto___15471)){\nargs__5732__auto__.push((arguments[i__5727__auto___15472]));\n\nvar G__15473 = (i__5727__auto___15472 + (1));\ni__5727__auto___15472 = G__15473;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5733__auto__ = ((((0) < args__5732__auto__.length))?(new cljs.core.IndexedSeq(args__5732__auto__.slice((0)),(0),null)):null);\nreturn devtools.formatters.markup._LT_cljs_land_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__5733__auto__);\n});\n\n(devtools.formatters.markup._LT_cljs_land_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (children){\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"cljs-land-tag\",\"cljs-land-tag\",-7524377)], null),children);\n}));\n\n(devtools.formatters.markup._LT_cljs_land_GT_.cljs$lang$maxFixedArity = (0));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_cljs_land_GT_.cljs$lang$applyTo = (function (seq14966){\nvar self__5712__auto__ = this;\nreturn self__5712__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq14966));\n}));\n\ndevtools.formatters.markup._LT_nil_GT_ = (function devtools$formatters$markup$_LT_nil_GT_(){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"nil-tag\",\"nil-tag\",-1587449115),new cljs.core.Keyword(null,\"nil-label\",\"nil-label\",-587789203)], null);\n});\ndevtools.formatters.markup._LT_bool_GT_ = (function devtools$formatters$markup$_LT_bool_GT_(bool){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"bool-tag\",\"bool-tag\",-10409808),cljs.core.str.cljs$core$IFn$_invoke$arity$1(bool)], null);\n});\ndevtools.formatters.markup._LT_keyword_GT_ = (function devtools$formatters$markup$_LT_keyword_GT_(keyword){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"keyword-tag\",\"keyword-tag\",1587228387),cljs.core.str.cljs$core$IFn$_invoke$arity$1(keyword)], null);\n});\ndevtools.formatters.markup._LT_symbol_GT_ = (function devtools$formatters$markup$_LT_symbol_GT_(symbol){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"symbol-tag\",\"symbol-tag\",-100807517),cljs.core.str.cljs$core$IFn$_invoke$arity$1(symbol)], null);\n});\ndevtools.formatters.markup._LT_number_GT_ = (function devtools$formatters$markup$_LT_number_GT_(number){\nif(cljs.core.integer_QMARK_(number)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"integer-tag\",\"integer-tag\",698000472),number], null);\n} else {\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"float-tag\",\"float-tag\",-390834106),number], null);\n}\n});\ndevtools.formatters.markup._LT_string_GT_ = (function devtools$formatters$markup$_LT_string_GT_(string){\nvar dq = devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"dq\",\"dq\",-1690275860));\nvar re_nl = (new RegExp(\"\\n\",\"g\"));\nvar nl_marker = devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"new-line-string-replacer\",\"new-line-string-replacer\",-753206206));\nvar inline_string = string.replace(re_nl,nl_marker);\nvar max_inline_string_size = (devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"string-prefix-limit\",\"string-prefix-limit\",1256106332)) + devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"string-postfix-limit\",\"string-postfix-limit\",-1282205963)));\nvar quote_string = (function (s){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(dq),cljs.core.str.cljs$core$IFn$_invoke$arity$1(s),cljs.core.str.cljs$core$IFn$_invoke$arity$1(dq)].join('');\n});\nvar should_abbreviate_QMARK_ = (cljs.core.count(inline_string) > max_inline_string_size);\nif(should_abbreviate_QMARK_){\nvar abbreviated_string = devtools.formatters.helpers.abbreviate_long_string(inline_string,devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"string-abbreviation-marker\",\"string-abbreviation-marker\",-347785112)),devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"string-prefix-limit\",\"string-prefix-limit\",1256106332)),devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"string-postfix-limit\",\"string-postfix-limit\",-1282205963)));\nvar abbreviated_string_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"string-tag\",\"string-tag\",1639024494),quote_string(abbreviated_string)], null);\nvar string_with_nl_markers = string.replace(re_nl,[cljs.core.str.cljs$core$IFn$_invoke$arity$1(nl_marker),\"\\n\"].join(''));\nvar details_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"expanded-string-tag\",\"expanded-string-tag\",-2125162127),string_with_nl_markers], null);\nreturn devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([string,abbreviated_string_markup,details_markup], 0));\n} else {\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"string-tag\",\"string-tag\",1639024494),quote_string(inline_string)], null);\n}\n});\ndevtools.formatters.markup._LT_preview_GT_ = (function devtools$formatters$markup$_LT_preview_GT_(value){\nreturn devtools.formatters.markup.print_via_writer.cljs$core$IFn$_invoke$arity$variadic(value,new cljs.core.Keyword(null,\"header-tag\",\"header-tag\",1594852433),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"max-print-level\",\"max-print-level\",-462237413))], 0));\n});\ndevtools.formatters.markup._LT_body_GT_ = (function devtools$formatters$markup$_LT_body_GT_(markup){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-tag\",\"body-tag\",433527431),markup], null);\n});\ndevtools.formatters.markup._LT_aligned_body_GT_ = (function devtools$formatters$markup$_LT_aligned_body_GT_(markups_lists){\nvar prepend_li_tag = (function (line){\nif(cljs.core.truth_(line)){\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"aligned-li-tag\",\"aligned-li-tag\",1727029722)], null),line);\n} else {\nreturn null;\n}\n});\nvar aligned_lines = cljs.core.keep.cljs$core$IFn$_invoke$arity$2(prepend_li_tag,markups_lists);\nreturn devtools.formatters.markup._LT_body_GT_(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"standard-ol-no-margin-tag\",\"standard-ol-no-margin-tag\",583023747)], null),aligned_lines));\n});\ndevtools.formatters.markup._LT_standard_body_GT_ = (function devtools$formatters$markup$_LT_standard_body_GT_(var_args){\nvar args__5732__auto__ = [];\nvar len__5726__auto___15479 = arguments.length;\nvar i__5727__auto___15480 = (0);\nwhile(true){\nif((i__5727__auto___15480 < len__5726__auto___15479)){\nargs__5732__auto__.push((arguments[i__5727__auto___15480]));\n\nvar G__15481 = (i__5727__auto___15480 + (1));\ni__5727__auto___15480 = G__15481;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5733__auto__ = ((((1) < args__5732__auto__.length))?(new cljs.core.IndexedSeq(args__5732__auto__.slice((1)),(0),null)):null);\nreturn devtools.formatters.markup._LT_standard_body_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5733__auto__);\n});\n\n(devtools.formatters.markup._LT_standard_body_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (markups_lists,p__14986){\nvar vec__14987 = p__14986;\nvar no_margin_QMARK_ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14987,(0),null);\nvar ol_tag = (cljs.core.truth_(no_margin_QMARK_)?new cljs.core.Keyword(null,\"standard-ol-no-margin-tag\",\"standard-ol-no-margin-tag\",583023747):new cljs.core.Keyword(null,\"standard-ol-tag\",\"standard-ol-tag\",1120081433));\nvar li_tag = (cljs.core.truth_(no_margin_QMARK_)?new cljs.core.Keyword(null,\"standard-li-no-margin-tag\",\"standard-li-no-margin-tag\",-844555468):new cljs.core.Keyword(null,\"standard-li-tag\",\"standard-li-tag\",-932749876));\nvar prepend_li_tag = (function (line){\nif(cljs.core.truth_(line)){\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [li_tag], null),line);\n} else {\nreturn null;\n}\n});\nvar lines_markups = cljs.core.keep.cljs$core$IFn$_invoke$arity$2(prepend_li_tag,markups_lists);\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [ol_tag], null),lines_markups);\n}));\n\n(devtools.formatters.markup._LT_standard_body_GT_.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_standard_body_GT_.cljs$lang$applyTo = (function (seq14972){\nvar G__14973 = cljs.core.first(seq14972);\nvar seq14972__$1 = cljs.core.next(seq14972);\nvar self__5711__auto__ = this;\nreturn self__5711__auto__.cljs$core$IFn$_invoke$arity$variadic(G__14973,seq14972__$1);\n}));\n\ndevtools.formatters.markup._LT_standard_body_reference_GT_ = (function devtools$formatters$markup$_LT_standard_body_reference_GT_(o){\nreturn devtools.formatters.markup._LT_standard_body_GT_(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([o], 0))], null)], null));\n});\ndevtools.formatters.markup._LT_index_GT_ = (function devtools$formatters$markup$_LT_index_GT_(value){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"index-tag\",\"index-tag\",693492486),value,new cljs.core.Keyword(null,\"line-index-separator\",\"line-index-separator\",-1735989246)], null);\n});\ndevtools.formatters.markup.body_line = (function devtools$formatters$markup$body_line(index,value){\nvar index_markup = devtools.formatters.markup._LT_index_GT_(index);\nvar value_markup = devtools.formatters.markup.print_via_writer.cljs$core$IFn$_invoke$arity$variadic(value,new cljs.core.Keyword(null,\"item-tag\",\"item-tag\",-988763304),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"body-line-max-print-level\",\"body-line-max-print-level\",571158623))], 0));\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index_markup,value_markup], null);\n});\ndevtools.formatters.markup.prepare_body_lines = (function devtools$formatters$markup$prepare_body_lines(data,starting_index){\nvar work = data;\nvar index = starting_index;\nvar lines = cljs.core.PersistentVector.EMPTY;\nwhile(true){\nif(cljs.core.empty_QMARK_(work)){\nreturn lines;\n} else {\nvar G__15485 = cljs.core.rest(work);\nvar G__15486 = (index + (1));\nvar G__15487 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(lines,devtools.formatters.markup.body_line(index,cljs.core.first(work)));\nwork = G__15485;\nindex = G__15486;\nlines = G__15487;\ncontinue;\n}\nbreak;\n}\n});\ndevtools.formatters.markup.body_lines = (function devtools$formatters$markup$body_lines(value,starting_index){\nvar seq = cljs.core.seq(value);\nvar max_number_body_items = devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"max-number-body-items\",\"max-number-body-items\",299914624));\nvar chunk = cljs.core.take.cljs$core$IFn$_invoke$arity$2(max_number_body_items,seq);\nvar rest = cljs.core.drop.cljs$core$IFn$_invoke$arity$2(max_number_body_items,seq);\nvar lines = devtools.formatters.markup.prepare_body_lines(chunk,starting_index);\nvar continue_QMARK_ = (!(cljs.core.empty_QMARK_(cljs.core.take.cljs$core$IFn$_invoke$arity$2((1),rest))));\nif((!(continue_QMARK_))){\nreturn lines;\n} else {\nvar more_label_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-items-more-tag\",\"body-items-more-tag\",867141569),new cljs.core.Keyword(null,\"body-items-more-label\",\"body-items-more-label\",-1561152123)], null);\nvar start_index = (starting_index + max_number_body_items);\nvar more_markup = devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([rest,more_label_markup,new cljs.core.Keyword(null,\"target\",\"target\",253001721),start_index], 0));\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(lines,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [more_markup], null));\n}\n});\ndevtools.formatters.markup._LT_details_GT_ = (function devtools$formatters$markup$_LT_details_GT_(value,starting_index){\nvar has_continuation_QMARK_ = (starting_index > (0));\nvar body_markup = devtools.formatters.markup._LT_standard_body_GT_.cljs$core$IFn$_invoke$arity$variadic(devtools.formatters.markup.body_lines(value,starting_index),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([has_continuation_QMARK_], 0));\nif(has_continuation_QMARK_){\nreturn body_markup;\n} else {\nreturn devtools.formatters.markup._LT_body_GT_(body_markup);\n}\n});\ndevtools.formatters.markup._LT_list_details_GT_ = (function devtools$formatters$markup$_LT_list_details_GT_(items,_opts){\nreturn devtools.formatters.markup._LT_aligned_body_GT_(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.list,items));\n});\ndevtools.formatters.markup._LT_list_GT_ = (function devtools$formatters$markup$_LT_list_GT_(var_args){\nvar args__5732__auto__ = [];\nvar len__5726__auto___15490 = arguments.length;\nvar i__5727__auto___15491 = (0);\nwhile(true){\nif((i__5727__auto___15491 < len__5726__auto___15490)){\nargs__5732__auto__.push((arguments[i__5727__auto___15491]));\n\nvar G__15496 = (i__5727__auto___15491 + (1));\ni__5727__auto___15491 = G__15496;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5733__auto__ = ((((2) < args__5732__auto__.length))?(new cljs.core.IndexedSeq(args__5732__auto__.slice((2)),(0),null)):null);\nreturn devtools.formatters.markup._LT_list_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5733__auto__);\n});\n\n(devtools.formatters.markup._LT_list_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (items,max_count,p__15026){\nvar vec__15028 = p__15026;\nvar opts = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15028,(0),null);\nvar items_markups = cljs.core.take.cljs$core$IFn$_invoke$arity$2(max_count,items);\nvar more_count = (cljs.core.count(items) - max_count);\nvar more_QMARK_ = (more_count > (0));\nvar separator = (function (){var or__5002__auto__ = new cljs.core.Keyword(null,\"separator\",\"separator\",-1628749125).cljs$core$IFn$_invoke$arity$1(opts);\nif(cljs.core.truth_(or__5002__auto__)){\nreturn or__5002__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"list-separator\",\"list-separator\",900562185);\n}\n})();\nvar more_symbol = ((more_QMARK_)?(function (){var temp__5802__auto__ = new cljs.core.Keyword(null,\"more-symbol\",\"more-symbol\",-2139760242).cljs$core$IFn$_invoke$arity$1(opts);\nif(cljs.core.truth_(temp__5802__auto__)){\nvar more_symbol = temp__5802__auto__;\nif(cljs.core.fn_QMARK_(more_symbol)){\nreturn (more_symbol.cljs$core$IFn$_invoke$arity$1 ? more_symbol.cljs$core$IFn$_invoke$arity$1(more_count) : more_symbol.call(null, more_count));\n} else {\nreturn more_symbol;\n}\n} else {\nreturn devtools.formatters.helpers.get_more_marker(more_count);\n}\n})():null);\nvar preview_markup = cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var or__5002__auto__ = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(opts);\nif(cljs.core.truth_(or__5002__auto__)){\nreturn or__5002__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"list-tag\",\"list-tag\",1555796884);\n}\n})(),(function (){var or__5002__auto__ = new cljs.core.Keyword(null,\"open-symbol\",\"open-symbol\",674247825).cljs$core$IFn$_invoke$arity$1(opts);\nif(cljs.core.truth_(or__5002__auto__)){\nreturn or__5002__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"list-open-symbol\",\"list-open-symbol\",-1162287443);\n}\n})()], null),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(separator,items_markups),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([((more_QMARK_)?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [separator,more_symbol], null):null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var or__5002__auto__ = new cljs.core.Keyword(null,\"close-symbol\",\"close-symbol\",1051951165).cljs$core$IFn$_invoke$arity$1(opts);\nif(cljs.core.truth_(or__5002__auto__)){\nreturn or__5002__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"list-close-symbol\",\"list-close-symbol\",-1120016586);\n}\n})()], null)], 0));\nif(more_QMARK_){\nvar details_markup = new cljs.core.Keyword(null,\"details\",\"details\",1956795411).cljs$core$IFn$_invoke$arity$1(opts);\nvar default_details_fn = cljs.core.partial.cljs$core$IFn$_invoke$arity$3(devtools.formatters.markup._LT_list_details_GT_,items,opts);\nreturn devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([null,preview_markup,(function (){var or__5002__auto__ = details_markup;\nif(cljs.core.truth_(or__5002__auto__)){\nreturn or__5002__auto__;\n} else {\nreturn default_details_fn;\n}\n})()], 0));\n} else {\nreturn preview_markup;\n}\n}));\n\n(devtools.formatters.markup._LT_list_GT_.cljs$lang$maxFixedArity = (2));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_list_GT_.cljs$lang$applyTo = (function (seq15020){\nvar G__15021 = cljs.core.first(seq15020);\nvar seq15020__$1 = cljs.core.next(seq15020);\nvar G__15022 = cljs.core.first(seq15020__$1);\nvar seq15020__$2 = cljs.core.next(seq15020__$1);\nvar self__5711__auto__ = this;\nreturn self__5711__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15021,G__15022,seq15020__$2);\n}));\n\ndevtools.formatters.markup._LT_meta_GT_ = (function devtools$formatters$markup$_LT_meta_GT_(metadata){\nvar body_fn = (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"meta-body-tag\",\"meta-body-tag\",1689183121),devtools.formatters.markup._LT_preview_GT_(metadata)], null);\n});\nvar header = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"meta-header-tag\",\"meta-header-tag\",-1207812581),\"meta\"], null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"meta-reference-tag\",\"meta-reference-tag\",914791936),devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([metadata,header,body_fn], 0))], null);\n});\ndevtools.formatters.markup._LT_meta_wrapper_GT_ = (function devtools$formatters$markup$_LT_meta_wrapper_GT_(var_args){\nvar args__5732__auto__ = [];\nvar len__5726__auto___15514 = arguments.length;\nvar i__5727__auto___15516 = (0);\nwhile(true){\nif((i__5727__auto___15516 < len__5726__auto___15514)){\nargs__5732__auto__.push((arguments[i__5727__auto___15516]));\n\nvar G__15517 = (i__5727__auto___15516 + (1));\ni__5727__auto___15516 = G__15517;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5733__auto__ = ((((1) < args__5732__auto__.length))?(new cljs.core.IndexedSeq(args__5732__auto__.slice((1)),(0),null)):null);\nreturn devtools.formatters.markup._LT_meta_wrapper_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5733__auto__);\n});\n\n(devtools.formatters.markup._LT_meta_wrapper_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (metadata,children){\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"meta-wrapper-tag\",\"meta-wrapper-tag\",1927429038)], null),children,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [devtools.formatters.markup._LT_meta_GT_(metadata)], null)], 0));\n}));\n\n(devtools.formatters.markup._LT_meta_wrapper_GT_.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_meta_wrapper_GT_.cljs$lang$applyTo = (function (seq15052){\nvar G__15053 = cljs.core.first(seq15052);\nvar seq15052__$1 = cljs.core.next(seq15052);\nvar self__5711__auto__ = this;\nreturn self__5711__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15053,seq15052__$1);\n}));\n\ndevtools.formatters.markup._LT_function_details_GT_ = (function devtools$formatters$markup$_LT_function_details_GT_(fn_obj,ns,_name,arities,prefix){\nif(cljs.core.fn_QMARK_(fn_obj)){\n} else {\nthrow (new Error(\"Assert failed: (fn? fn-obj)\"));\n}\n\nvar arities__$1 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.helpers.wrap_arity,arities);\nvar make_arity_markup_list = (function (arity){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-multi-arity-args-indent-tag\",\"fn-multi-arity-args-indent-tag\",-1931373734),prefix], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-args-tag\",\"fn-args-tag\",549126831),arity], null)], null);\n});\nvar arities_markupts_lists = (((cljs.core.count(arities__$1) > (1)))?cljs.core.map.cljs$core$IFn$_invoke$arity$2(make_arity_markup_list,arities__$1):null);\nvar ns_markups_list = (((!(cljs.core.empty_QMARK_(ns))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ns-icon\",\"ns-icon\",725601214),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-ns-name-tag\",\"fn-ns-name-tag\",-900073712),ns], null)], null):null);\nvar native_markups_list = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"native-icon\",\"native-icon\",-126040824),devtools.formatters.markup._LT_native_reference_GT_(fn_obj)], null);\nreturn devtools.formatters.markup._LT_aligned_body_GT_(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(arities_markupts_lists,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns_markups_list,native_markups_list], null)));\n});\ndevtools.formatters.markup._LT_arities_GT_ = (function devtools$formatters$markup$_LT_arities_GT_(arities){\nvar multi_arity_QMARK_ = (cljs.core.count(arities) > (1));\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-args-tag\",\"fn-args-tag\",549126831),devtools.formatters.helpers.wrap_arity(((multi_arity_QMARK_)?devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"multi-arity-symbol\",\"multi-arity-symbol\",-420139653)):cljs.core.first(arities)))], null);\n});\ndevtools.formatters.markup._LT_function_GT_ = (function devtools$formatters$markup$_LT_function_GT_(fn_obj){\nif(cljs.core.fn_QMARK_(fn_obj)){\n} else {\nthrow (new Error(\"Assert failed: (fn? fn-obj)\"));\n}\n\nvar vec__15059 = devtools.munging.parse_fn_info(fn_obj);\nvar ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15059,(0),null);\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15059,(1),null);\nvar lambda_QMARK_ = cljs.core.empty_QMARK_(name);\nvar spacer_symbol = devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"spacer\",\"spacer\",2067425139));\nvar rest_symbol = devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"rest-symbol\",\"rest-symbol\",1021371174));\nvar multi_arity_symbol = devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"multi-arity-symbol\",\"multi-arity-symbol\",-420139653));\nvar arities = devtools.munging.extract_arities(fn_obj,true,spacer_symbol,multi_arity_symbol,rest_symbol);\nvar arities_markup = devtools.formatters.markup._LT_arities_GT_(arities);\nvar name_markup = (((!(lambda_QMARK_)))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-name-tag\",\"fn-name-tag\",555823755),name], null):null);\nvar icon_markup = ((lambda_QMARK_)?new cljs.core.Keyword(null,\"lambda-icon\",\"lambda-icon\",980753546):new cljs.core.Keyword(null,\"fn-icon\",\"fn-icon\",-1412665288));\nvar prefix_markup = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-prefix-tag\",\"fn-prefix-tag\",1947411856),icon_markup,name_markup], null);\nvar preview_markup = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-header-tag\",\"fn-header-tag\",-1262068349),prefix_markup,arities_markup], null);\nvar details_fn = cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(devtools.formatters.markup._LT_function_details_GT_,fn_obj,ns,name,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([arities,prefix_markup], 0));\nreturn devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([fn_obj,preview_markup,details_fn], 0));\n});\ndevtools.formatters.markup._LT_type_basis_item_GT_ = (function devtools$formatters$markup$_LT_type_basis_item_GT_(basis_item){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"type-basis-item-tag\",\"type-basis-item-tag\",50612816),cljs.core.name(basis_item)], null);\n});\ndevtools.formatters.markup._LT_type_basis_GT_ = (function devtools$formatters$markup$_LT_type_basis_GT_(basis){\nvar item_markups = cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_type_basis_item_GT_,basis);\nvar children_markups = cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"type-basis-item-separator\",\"type-basis-item-separator\",-2029193896),item_markups);\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"type-basis-tag\",\"type-basis-tag\",-2122159204)], null),children_markups);\n});\ndevtools.formatters.markup._LT_type_details_GT_ = (function devtools$formatters$markup$_LT_type_details_GT_(constructor_fn,ns,_name,basis){\nvar ns_markup = (((!(cljs.core.empty_QMARK_(ns))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ns-icon\",\"ns-icon\",725601214),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-ns-name-tag\",\"fn-ns-name-tag\",-900073712),ns], null)], null):null);\nvar basis_markup = ((cljs.core.empty_QMARK_(basis))?new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"empty-basis-symbol\",\"empty-basis-symbol\",-1971559593)], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"basis-icon\",\"basis-icon\",1917779567),devtools.formatters.markup._LT_type_basis_GT_(basis)], null));\nvar native_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"native-icon\",\"native-icon\",-126040824),devtools.formatters.markup._LT_native_reference_GT_(constructor_fn)], null);\nreturn devtools.formatters.markup._LT_aligned_body_GT_(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [basis_markup,ns_markup,native_markup], null));\n});\ndevtools.formatters.markup._LT_type_GT_ = (function devtools$formatters$markup$_LT_type_GT_(var_args){\nvar args__5732__auto__ = [];\nvar len__5726__auto___15530 = arguments.length;\nvar i__5727__auto___15531 = (0);\nwhile(true){\nif((i__5727__auto___15531 < len__5726__auto___15530)){\nargs__5732__auto__.push((arguments[i__5727__auto___15531]));\n\nvar G__15532 = (i__5727__auto___15531 + (1));\ni__5727__auto___15531 = G__15532;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5733__auto__ = ((((1) < args__5732__auto__.length))?(new cljs.core.IndexedSeq(args__5732__auto__.slice((1)),(0),null)):null);\nreturn devtools.formatters.markup._LT_type_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5733__auto__);\n});\n\n(devtools.formatters.markup._LT_type_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (constructor_fn,p__15073){\nvar vec__15074 = p__15073;\nvar header_tag = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15074,(0),null);\nvar vec__15077 = devtools.munging.parse_constructor_info(constructor_fn);\nvar ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15077,(0),null);\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15077,(1),null);\nvar basis = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15077,(2),null);\nvar name_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"type-name-tag\",\"type-name-tag\",-1317275511),name], null);\nvar preview_markup = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var or__5002__auto__ = header_tag;\nif(cljs.core.truth_(or__5002__auto__)){\nreturn or__5002__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"type-header-tag\",\"type-header-tag\",1645372265);\n}\n})(),new cljs.core.Keyword(null,\"type-symbol\",\"type-symbol\",-941894755),name_markup], null);\nvar details_markup_fn = cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(devtools.formatters.markup._LT_type_details_GT_,constructor_fn,ns,name,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([basis], 0));\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"type-wrapper-tag\",\"type-wrapper-tag\",-1732366004),new cljs.core.Keyword(null,\"type-header-background\",\"type-header-background\",-810861696),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"type-ref-tag\",\"type-ref-tag\",2126727355),devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([constructor_fn,preview_markup,details_markup_fn], 0))], null)], null);\n}));\n\n(devtools.formatters.markup._LT_type_GT_.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_type_GT_.cljs$lang$applyTo = (function (seq15067){\nvar G__15068 = cljs.core.first(seq15067);\nvar seq15067__$1 = cljs.core.next(seq15067);\nvar self__5711__auto__ = this;\nreturn self__5711__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15068,seq15067__$1);\n}));\n\ndevtools.formatters.markup._LT_standalone_type_GT_ = (function devtools$formatters$markup$_LT_standalone_type_GT_(var_args){\nvar args__5732__auto__ = [];\nvar len__5726__auto___15553 = arguments.length;\nvar i__5727__auto___15554 = (0);\nwhile(true){\nif((i__5727__auto___15554 < len__5726__auto___15553)){\nargs__5732__auto__.push((arguments[i__5727__auto___15554]));\n\nvar G__15559 = (i__5727__auto___15554 + (1));\ni__5727__auto___15554 = G__15559;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5733__auto__ = ((((1) < args__5732__auto__.length))?(new cljs.core.IndexedSeq(args__5732__auto__.slice((1)),(0),null)):null);\nreturn devtools.formatters.markup._LT_standalone_type_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5733__auto__);\n});\n\n(devtools.formatters.markup._LT_standalone_type_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (constructor_fn,p__15088){\nvar vec__15089 = p__15088;\nvar header_tag = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15089,(0),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"standalone-type-tag\",\"standalone-type-tag\",-1677164791),devtools.formatters.markup._LT_type_GT_.cljs$core$IFn$_invoke$arity$variadic(constructor_fn,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([header_tag], 0))], null);\n}));\n\n(devtools.formatters.markup._LT_standalone_type_GT_.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_standalone_type_GT_.cljs$lang$applyTo = (function (seq15084){\nvar G__15085 = cljs.core.first(seq15084);\nvar seq15084__$1 = cljs.core.next(seq15084);\nvar self__5711__auto__ = this;\nreturn self__5711__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15085,seq15084__$1);\n}));\n\ndevtools.formatters.markup._LT_protocol_method_arity_GT_ = (function devtools$formatters$markup$_LT_protocol_method_arity_GT_(arity_fn){\nreturn devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([arity_fn], 0));\n});\ndevtools.formatters.markup._LT_protocol_method_arities_details_GT_ = (function devtools$formatters$markup$_LT_protocol_method_arities_details_GT_(fns){\nreturn devtools.formatters.markup._LT_aligned_body_GT_(cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_protocol_method_arity_GT_,fns));\n});\ndevtools.formatters.markup._LT_protocol_method_arities_GT_ = (function devtools$formatters$markup$_LT_protocol_method_arities_GT_(var_args){\nvar args__5732__auto__ = [];\nvar len__5726__auto___15566 = arguments.length;\nvar i__5727__auto___15567 = (0);\nwhile(true){\nif((i__5727__auto___15567 < len__5726__auto___15566)){\nargs__5732__auto__.push((arguments[i__5727__auto___15567]));\n\nvar G__15568 = (i__5727__auto___15567 + (1));\ni__5727__auto___15567 = G__15568;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5733__auto__ = ((((1) < args__5732__auto__.length))?(new cljs.core.IndexedSeq(args__5732__auto__.slice((1)),(0),null)):null);\nreturn devtools.formatters.markup._LT_protocol_method_arities_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5733__auto__);\n});\n\n(devtools.formatters.markup._LT_protocol_method_arities_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (fns,p__15109){\nvar vec__15110 = p__15109;\nvar max_fns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15110,(0),null);\nvar max_fns__$1 = (function (){var or__5002__auto__ = max_fns;\nif(cljs.core.truth_(or__5002__auto__)){\nreturn or__5002__auto__;\n} else {\nreturn devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"max-protocol-method-arities-list\",\"max-protocol-method-arities-list\",-45936465));\n}\n})();\nvar more_QMARK_ = (cljs.core.count(fns) > max_fns__$1);\nvar aritites_markups = cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_protocol_method_arity_GT_,cljs.core.take.cljs$core$IFn$_invoke$arity$2(max_fns__$1,fns));\nvar preview_markup = cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"protocol-method-arities-header-tag\",\"protocol-method-arities-header-tag\",734407707),new cljs.core.Keyword(null,\"protocol-method-arities-header-open-symbol\",\"protocol-method-arities-header-open-symbol\",1704200465)], null),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"protocol-method-arities-list-header-separator\",\"protocol-method-arities-list-header-separator\",-115158954),aritites_markups),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([((more_QMARK_)?new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"protocol-method-arities-more-symbol\",\"protocol-method-arities-more-symbol\",-477018522)], null):null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"protocol-method-arities-header-close-symbol\",\"protocol-method-arities-header-close-symbol\",-1375237120)], null)], 0));\nif(more_QMARK_){\nvar details_markup_fn = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_protocol_method_arities_details_GT_,fns);\nreturn devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([null,preview_markup,details_markup_fn], 0));\n} else {\nreturn preview_markup;\n}\n}));\n\n(devtools.formatters.markup._LT_protocol_method_arities_GT_.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_protocol_method_arities_GT_.cljs$lang$applyTo = (function (seq15097){\nvar G__15098 = cljs.core.first(seq15097);\nvar seq15097__$1 = cljs.core.next(seq15097);\nvar self__5711__auto__ = this;\nreturn self__5711__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15098,seq15097__$1);\n}));\n\ndevtools.formatters.markup._LT_protocol_method_GT_ = (function devtools$formatters$markup$_LT_protocol_method_GT_(name,arities){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"protocol-method-tag\",\"protocol-method-tag\",2032279830),new cljs.core.Keyword(null,\"method-icon\",\"method-icon\",-1678775281),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"protocol-method-name-tag\",\"protocol-method-name-tag\",-1030376744),name], null),devtools.formatters.markup._LT_protocol_method_arities_GT_(arities)], null);\n});\ndevtools.formatters.markup._LT_protocol_details_GT_ = (function devtools$formatters$markup$_LT_protocol_details_GT_(obj,ns,_name,selector,_fast_QMARK_){\nvar protocol_obj = devtools.munging.get_protocol_object(selector);\nvar ns_markups_list = (((!(cljs.core.empty_QMARK_(ns))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ns-icon\",\"ns-icon\",725601214),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"protocol-ns-name-tag\",\"protocol-ns-name-tag\",1832081510),ns], null)], null):null);\nvar native_markups_list = (((!((protocol_obj == null))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"native-icon\",\"native-icon\",-126040824),devtools.formatters.markup._LT_native_reference_GT_(protocol_obj)], null):null);\nvar methods$ = devtools.munging.collect_protocol_methods(obj,selector);\nvar methods_markups = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p__15135){\nvar vec__15139 = p__15135;\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15139,(0),null);\nvar arities = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15139,(1),null);\nreturn devtools.formatters.markup._LT_protocol_method_GT_(name,arities);\n}),methods$);\nvar methods_markups_lists = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.list,methods_markups);\nreturn devtools.formatters.markup._LT_aligned_body_GT_(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(methods_markups_lists,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns_markups_list,native_markups_list], null)));\n});\ndevtools.formatters.markup._LT_protocol_GT_ = (function devtools$formatters$markup$_LT_protocol_GT_(var_args){\nvar args__5732__auto__ = [];\nvar len__5726__auto___15573 = arguments.length;\nvar i__5727__auto___15575 = (0);\nwhile(true){\nif((i__5727__auto___15575 < len__5726__auto___15573)){\nargs__5732__auto__.push((arguments[i__5727__auto___15575]));\n\nvar G__15576 = (i__5727__auto___15575 + (1));\ni__5727__auto___15575 = G__15576;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5733__auto__ = ((((2) < args__5732__auto__.length))?(new cljs.core.IndexedSeq(args__5732__auto__.slice((2)),(0),null)):null);\nreturn devtools.formatters.markup._LT_protocol_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5733__auto__);\n});\n\n(devtools.formatters.markup._LT_protocol_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (obj,protocol,p__15163){\nvar vec__15164 = p__15163;\nvar tag = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15164,(0),null);\nvar map__15167 = protocol;\nvar map__15167__$1 = cljs.core.__destructure_map(map__15167);\nvar ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__15167__$1,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760));\nvar name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__15167__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nvar selector = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__15167__$1,new cljs.core.Keyword(null,\"selector\",\"selector\",762528866));\nvar fast_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__15167__$1,new cljs.core.Keyword(null,\"fast?\",\"fast?\",-1813307150));\nvar preview_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var or__5002__auto__ = tag;\nif(cljs.core.truth_(or__5002__auto__)){\nreturn or__5002__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"protocol-name-tag\",\"protocol-name-tag\",1508238310);\n}\n})(),name], null);\nvar prefix_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(cljs.core.truth_(fast_QMARK_)?new cljs.core.Keyword(null,\"fast-protocol-tag\",\"fast-protocol-tag\",2066025065):new cljs.core.Keyword(null,\"slow-protocol-tag\",\"slow-protocol-tag\",2061129467)),new cljs.core.Keyword(null,\"protocol-background\",\"protocol-background\",1111513794)], null);\nif((!((obj == null)))){\nvar details_markup_fn = cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(devtools.formatters.markup._LT_protocol_details_GT_,obj,ns,name,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([selector,fast_QMARK_], 0));\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(prefix_markup,devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([obj,preview_markup,details_markup_fn], 0)));\n} else {\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(prefix_markup,preview_markup);\n}\n}));\n\n(devtools.formatters.markup._LT_protocol_GT_.cljs$lang$maxFixedArity = (2));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_protocol_GT_.cljs$lang$applyTo = (function (seq15147){\nvar G__15148 = cljs.core.first(seq15147);\nvar seq15147__$1 = cljs.core.next(seq15147);\nvar G__15149 = cljs.core.first(seq15147__$1);\nvar seq15147__$2 = cljs.core.next(seq15147__$1);\nvar self__5711__auto__ = this;\nreturn self__5711__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15148,G__15149,seq15147__$2);\n}));\n\ndevtools.formatters.markup._LT_more_protocols_GT_ = (function devtools$formatters$markup$_LT_more_protocols_GT_(more_count){\nvar fake_protocol = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),devtools.formatters.helpers.get_more_marker(more_count)], null);\nreturn devtools.formatters.markup._LT_protocol_GT_.cljs$core$IFn$_invoke$arity$variadic(null,fake_protocol,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"protocol-more-tag\",\"protocol-more-tag\",2098702865)], 0));\n});\ndevtools.formatters.markup._LT_protocols_list_GT_ = (function devtools$formatters$markup$_LT_protocols_list_GT_(var_args){\nvar args__5732__auto__ = [];\nvar len__5726__auto___15597 = arguments.length;\nvar i__5727__auto___15599 = (0);\nwhile(true){\nif((i__5727__auto___15599 < len__5726__auto___15597)){\nargs__5732__auto__.push((arguments[i__5727__auto___15599]));\n\nvar G__15602 = (i__5727__auto___15599 + (1));\ni__5727__auto___15599 = G__15602;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5733__auto__ = ((((2) < args__5732__auto__.length))?(new cljs.core.IndexedSeq(args__5732__auto__.slice((2)),(0),null)):null);\nreturn devtools.formatters.markup._LT_protocols_list_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5733__auto__);\n});\n\n(devtools.formatters.markup._LT_protocols_list_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (obj,protocols,p__15199){\nvar vec__15200 = p__15199;\nvar max_protocols = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15200,(0),null);\nvar max_protocols__$1 = (function (){var or__5002__auto__ = max_protocols;\nif(cljs.core.truth_(or__5002__auto__)){\nreturn or__5002__auto__;\n} else {\nreturn devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"max-list-protocols\",\"max-list-protocols\",-537135129));\n}\n})();\nvar protocols_markups = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_protocol_GT_,obj),protocols);\nreturn devtools.formatters.markup._LT_list_GT_.cljs$core$IFn$_invoke$arity$variadic(protocols_markups,max_protocols__$1,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"protocols-header-tag\",\"protocols-header-tag\",-734413384),new cljs.core.Keyword(null,\"open-symbol\",\"open-symbol\",674247825),new cljs.core.Keyword(null,\"protocols-list-open-symbol\",\"protocols-list-open-symbol\",-729713043),new cljs.core.Keyword(null,\"close-symbol\",\"close-symbol\",1051951165),new cljs.core.Keyword(null,\"protocols-list-close-symbol\",\"protocols-list-close-symbol\",652072902),new cljs.core.Keyword(null,\"separator\",\"separator\",-1628749125),new cljs.core.Keyword(null,\"header-protocol-separator\",\"header-protocol-separator\",445531439),new cljs.core.Keyword(null,\"more-symbol\",\"more-symbol\",-2139760242),devtools.formatters.markup._LT_more_protocols_GT_], null)], 0));\n}));\n\n(devtools.formatters.markup._LT_protocols_list_GT_.cljs$lang$maxFixedArity = (2));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_protocols_list_GT_.cljs$lang$applyTo = (function (seq15184){\nvar G__15185 = cljs.core.first(seq15184);\nvar seq15184__$1 = cljs.core.next(seq15184);\nvar G__15186 = cljs.core.first(seq15184__$1);\nvar seq15184__$2 = cljs.core.next(seq15184__$1);\nvar self__5711__auto__ = this;\nreturn self__5711__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15185,G__15186,seq15184__$2);\n}));\n\ndevtools.formatters.markup._LT_field_GT_ = (function devtools$formatters$markup$_LT_field_GT_(name,value){\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"header-field-tag\",\"header-field-tag\",-1403476101),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"header-field-name-tag\",\"header-field-name-tag\",82291956),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name)], null),new cljs.core.Keyword(null,\"header-field-value-spacer\",\"header-field-value-spacer\",-1210630679),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"header-field-value-tag\",\"header-field-value-tag\",-1708691701),devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([devtools.formatters.markup._LT_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([value], 0)),(function (p1__15207_SHARP_){\nreturn devtools.formatters.state.set_managed_print_level(p1__15207_SHARP_,(1));\n})], 0))], null),new cljs.core.Keyword(null,\"header-field-separator\",\"header-field-separator\",-774444018)], null);\n});\ndevtools.formatters.markup._LT_fields_details_row_GT_ = (function devtools$formatters$markup$_LT_fields_details_row_GT_(field){\nvar vec__15212 = field;\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15212,(0),null);\nvar value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15212,(1),null);\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-field-tr-tag\",\"body-field-tr-tag\",37280691),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-field-td1-tag\",\"body-field-td1-tag\",256357429),new cljs.core.Keyword(null,\"body-field-symbol\",\"body-field-symbol\",256897537),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-field-name-tag\",\"body-field-name-tag\",917867601),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name)], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-field-td2-tag\",\"body-field-td2-tag\",94501500),new cljs.core.Keyword(null,\"body-field-value-spacer\",\"body-field-value-spacer\",1279911362)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-field-td3-tag\",\"body-field-td3-tag\",-803119922),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body-field-value-tag\",\"body-field-value-tag\",800789079),devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([value], 0))], null)], null)], null);\n});\ndevtools.formatters.markup._LT_fields_GT_ = (function devtools$formatters$markup$_LT_fields_GT_(var_args){\nvar args__5732__auto__ = [];\nvar len__5726__auto___15615 = arguments.length;\nvar i__5727__auto___15616 = (0);\nwhile(true){\nif((i__5727__auto___15616 < len__5726__auto___15615)){\nargs__5732__auto__.push((arguments[i__5727__auto___15616]));\n\nvar G__15617 = (i__5727__auto___15616 + (1));\ni__5727__auto___15616 = G__15617;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5733__auto__ = ((((1) < args__5732__auto__.length))?(new cljs.core.IndexedSeq(args__5732__auto__.slice((1)),(0),null)):null);\nreturn devtools.formatters.markup._LT_fields_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5733__auto__);\n});\n\n(devtools.formatters.markup._LT_fields_GT_.cljs$core$IFn$_invoke$arity$variadic = (function (fields,p__15233){\nvar vec__15234 = p__15233;\nvar max_fields = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15234,(0),null);\nif((cljs.core.count(fields) === (0))){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fields-header-tag\",\"fields-header-tag\",1339134308),new cljs.core.Keyword(null,\"fields-header-no-fields-symbol\",\"fields-header-no-fields-symbol\",-1749204979)], null);\n} else {\nvar max_fields__$1 = (function (){var or__5002__auto__ = max_fields;\nif(cljs.core.truth_(or__5002__auto__)){\nreturn or__5002__auto__;\n} else {\nreturn devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\"max-instance-header-fields\",\"max-instance-header-fields\",-126007269));\n}\n})();\nvar more_QMARK_ = (cljs.core.count(fields) > max_fields__$1);\nvar fields_markups = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p__15247){\nvar vec__15250 = p__15247;\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15250,(0),null);\nvar value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15250,(1),null);\nreturn devtools.formatters.markup._LT_field_GT_(name,value);\n}),cljs.core.take.cljs$core$IFn$_invoke$arity$2(max_fields__$1,fields));\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fields-header-tag\",\"fields-header-tag\",1339134308),new cljs.core.Keyword(null,\"fields-header-open-symbol\",\"fields-header-open-symbol\",-26243798)], null),fields_markups,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [((more_QMARK_)?new cljs.core.Keyword(null,\"more-fields-symbol\",\"more-fields-symbol\",720022882):null),new cljs.core.Keyword(null,\"fields-header-close-symbol\",\"fields-header-close-symbol\",1615181116)], null)], 0));\n}\n}));\n\n(devtools.formatters.markup._LT_fields_GT_.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_fields_GT_.cljs$lang$applyTo = (function (seq15222){\nvar G__15223 = cljs.core.first(seq15222);\nvar seq15222__$1 = cljs.core.next(seq15222);\nvar self__5711__auto__ = this;\nreturn self__5711__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15223,seq15222__$1);\n}));\n\ndevtools.formatters.markup._LT_fields_details_GT_ = (function devtools$formatters$markup$_LT_fields_details_GT_(fields,obj){\nvar protocols = devtools.munging.scan_protocols(obj);\nvar has_protocols_QMARK_ = (!(cljs.core.empty_QMARK_(protocols)));\nvar fields_markup = (((!((cljs.core.count(fields) === (0)))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fields-icon\",\"fields-icon\",-436030420),cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"instance-body-fields-table-tag\",\"instance-body-fields-table-tag\",1306340776)], null),cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_fields_details_row_GT_,fields))], null):null);\nvar protocols_list_markup = ((has_protocols_QMARK_)?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"protocols-icon\",\"protocols-icon\",-517302494),devtools.formatters.markup._LT_protocols_list_GT_(obj,protocols)], null):null);\nvar native_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"native-icon\",\"native-icon\",-126040824),devtools.formatters.markup._LT_native_reference_GT_(obj)], null);\nreturn devtools.formatters.markup._LT_aligned_body_GT_(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [fields_markup,protocols_list_markup,native_markup], null));\n});\ndevtools.formatters.markup._LT_instance_GT_ = (function devtools$formatters$markup$_LT_instance_GT_(value){\nvar constructor_fn = devtools.formatters.helpers.get_constructor(value);\nvar vec__15282 = devtools.munging.parse_constructor_info(constructor_fn);\nvar _ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15282,(0),null);\nvar _name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15282,(1),null);\nvar basis = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15282,(2),null);\nvar custom_printing_QMARK_ = (((!((value == null))))?(((((value.cljs$lang$protocol_mask$partition0$ & (2147483648))) || ((cljs.core.PROTOCOL_SENTINEL === value.cljs$core$IPrintWithWriter$))))?true:false):false);\nvar type_markup = devtools.formatters.markup._LT_type_GT_.cljs$core$IFn$_invoke$arity$variadic(constructor_fn,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"instance-type-header-tag\",\"instance-type-header-tag\",-1015702989)], 0));\nvar fields = devtools.formatters.helpers.fetch_fields_values(value,basis);\nvar fields_markup = devtools.formatters.markup._LT_fields_GT_.cljs$core$IFn$_invoke$arity$variadic(fields,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([((custom_printing_QMARK_)?(0):null)], 0));\nvar fields_details_markup_fn = (function (){\nreturn devtools.formatters.markup._LT_fields_details_GT_(fields,value);\n});\nvar fields_preview_markup = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"instance-value-tag\",\"instance-value-tag\",-1739593896),devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([value,fields_markup,fields_details_markup_fn], 0))], null);\nvar custom_printing_markup = ((custom_printing_QMARK_)?new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"instance-custom-printing-wrapper-tag\",\"instance-custom-printing-wrapper-tag\",1461890684),new cljs.core.Keyword(null,\"instance-custom-printing-background\",\"instance-custom-printing-background\",-248433646),devtools.formatters.markup.print_via_protocol(value,new cljs.core.Keyword(null,\"instance-custom-printing-tag\",\"instance-custom-printing-tag\",-67034432))], null):null);\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"instance-header-tag\",\"instance-header-tag\",903623870),new cljs.core.Keyword(null,\"instance-header-background\",\"instance-header-background\",1510357287),fields_preview_markup,custom_printing_markup,type_markup], null);\n});\ndevtools.formatters.markup._LT_header_GT_ = (function devtools$formatters$markup$_LT_header_GT_(value){\nreturn devtools.formatters.markup._LT_cljs_land_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([devtools.formatters.markup._LT_preview_GT_(value)], 0));\n});\ndevtools.formatters.markup._LT_surrogate_header_GT_ = (function devtools$formatters$markup$_LT_surrogate_header_GT_(surrogate){\nvar or__5002__auto__ = devtools.formatters.templating.get_surrogate_header(surrogate);\nif(cljs.core.truth_(or__5002__auto__)){\nreturn or__5002__auto__;\n} else {\nreturn devtools.formatters.markup._LT_preview_GT_(devtools.formatters.templating.get_surrogate_target(surrogate));\n}\n});\ndevtools.formatters.markup._LT_surrogate_target_GT_ = (function devtools$formatters$markup$_LT_surrogate_target_GT_(surrogate){\nvar target = devtools.formatters.templating.get_surrogate_target(surrogate);\nif(cljs.core.seqable_QMARK_(target)){\nvar starting_index = devtools.formatters.templating.get_surrogate_start_index(surrogate);\nreturn devtools.formatters.markup._LT_details_GT_(target,starting_index);\n} else {\nreturn devtools.formatters.markup._LT_standard_body_reference_GT_(target);\n}\n});\ndevtools.formatters.markup._LT_surrogate_body_GT_ = (function devtools$formatters$markup$_LT_surrogate_body_GT_(surrogate){\nvar temp__5802__auto__ = devtools.formatters.templating.get_surrogate_body(surrogate);\nif(cljs.core.truth_(temp__5802__auto__)){\nvar body = temp__5802__auto__;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"target\",\"target\",253001721),body)){\nreturn devtools.formatters.markup._LT_surrogate_target_GT_(surrogate);\n} else {\nreturn body;\n}\n} else {\nreturn null;\n}\n});\ndevtools.formatters.markup._LT_atomic_GT_ = (function devtools$formatters$markup$_LT_atomic_GT_(value){\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-nils\",\"render-nils\",1360008699),value,cljs.core.nil_QMARK_))){\nreturn devtools.formatters.markup._LT_nil_GT_();\n} else {\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-bools\",\"render-bools\",1793659724),value,devtools.formatters.helpers.bool_QMARK_))){\nreturn devtools.formatters.markup._LT_bool_GT_(value);\n} else {\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-strings\",\"render-strings\",-1497177335),value,cljs.core.string_QMARK_))){\nreturn devtools.formatters.markup._LT_string_GT_(value);\n} else {\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-numbers\",\"render-numbers\",-1385392009),value,cljs.core.number_QMARK_))){\nreturn devtools.formatters.markup._LT_number_GT_(value);\n} else {\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-keywords\",\"render-keywords\",1200455875),value,cljs.core.keyword_QMARK_))){\nreturn devtools.formatters.markup._LT_keyword_GT_(value);\n} else {\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-symbols\",\"render-symbols\",-887705016),value,cljs.core.symbol_QMARK_))){\nreturn devtools.formatters.markup._LT_symbol_GT_(value);\n} else {\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-instances\",\"render-instances\",-1803579686),value,devtools.formatters.helpers.should_render_instance_QMARK_))){\nreturn devtools.formatters.markup._LT_instance_GT_(value);\n} else {\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-types\",\"render-types\",-129927851),value,devtools.formatters.helpers.cljs_type_QMARK_))){\nreturn devtools.formatters.markup._LT_standalone_type_GT_(value);\n} else {\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-functions\",\"render-functions\",1273333002),value,devtools.formatters.helpers.cljs_function_QMARK_))){\nreturn devtools.formatters.markup._LT_function_GT_(value);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n}\n}\n}\n}\n});\ndevtools.formatters.markup.get_markup_db = (function devtools$formatters$markup$get_markup_db(){\nif((devtools.formatters.markup._STAR_markup_db_STAR_ == null)){\n(devtools.formatters.markup._STAR_markup_db_STAR_ = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"aligned-body\",\"aligned-body\",-2124118747),new cljs.core.Keyword(null,\"native-reference\",\"native-reference\",-2013708658),new cljs.core.Keyword(null,\"reference-surrogate\",\"reference-surrogate\",274031791),new cljs.core.Keyword(null,\"keyword\",\"keyword\",811389747),new cljs.core.Keyword(null,\"protocol-method-arities\",\"protocol-method-arities\",-545542044),new cljs.core.Keyword(null,\"surrogate-header\",\"surrogate-header\",1705524526),new cljs.core.Keyword(null,\"details\",\"details\",1956795411),new cljs.core.Keyword(null,\"more-protocols\",\"more-protocols\",359555207),new cljs.core.Keyword(null,\"field\",\"field\",-1302436500),new cljs.core.Keyword(null,\"symbol\",\"symbol\",-1038572696),new cljs.core.Keyword(null,\"fields-details\",\"fields-details\",-269572714),new cljs.core.Keyword(null,\"atomic\",\"atomic\",-120459460),new cljs.core.Keyword(null,\"string\",\"string\",-1989541586),new cljs.core.Keyword(null,\"standard-body\",\"standard-body\",-1563020798),new cljs.core.Keyword(null,\"type-basis\",\"type-basis\",-1825246054),new cljs.core.Keyword(null,\"bool\",\"bool\",1444635321),new cljs.core.Keyword(null,\"standalone-type\",\"standalone-type\",-802565278),new cljs.core.Keyword(null,\"preview\",\"preview\",451279890),new cljs.core.Keyword(null,\"header\",\"header\",119441134),new cljs.core.Keyword(null,\"protocol-method\",\"protocol-method\",1794903206),new cljs.core.Keyword(null,\"cljs-land\",\"cljs-land\",1255896927),new cljs.core.Keyword(null,\"type-basis-item\",\"type-basis-item\",-1662150132),new cljs.core.Keyword(null,\"protocol-method-arities-details\",\"protocol-method-arities-details\",1944702118),new cljs.core.Keyword(null,\"fields-details-row\",\"fields-details-row\",2066344936),new cljs.core.Keyword(null,\"standard-body-reference\",\"standard-body-reference\",1513301561),new cljs.core.Keyword(null,\"surrogate-body\",\"surrogate-body\",-1618569585),new cljs.core.Keyword(null,\"expandable\",\"expandable\",-704609097),new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"protocol-method-arity\",\"protocol-method-arity\",-1861927833),new cljs.core.Keyword(null,\"raw-surrogate\",\"raw-surrogate\",904931181),new cljs.core.Keyword(null,\"type-details\",\"type-details\",477755178),new cljs.core.Keyword(null,\"list\",\"list\",765357683),new cljs.core.Keyword(null,\"meta-wrapper\",\"meta-wrapper\",-1989845587),new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118),new cljs.core.Keyword(null,\"index\",\"index\",-1531685915),new cljs.core.Keyword(null,\"surrogate\",\"surrogate\",2122284260),new cljs.core.Keyword(null,\"protocols-list\",\"protocols-list\",371434187),new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964),new cljs.core.Keyword(null,\"instance\",\"instance\",-2121349050),new cljs.core.Keyword(null,\"reference\",\"reference\",-1711695023),new cljs.core.Keyword(null,\"function-details\",\"function-details\",1501147310),new cljs.core.Keyword(null,\"function\",\"function\",-2127255473),new cljs.core.Keyword(null,\"arities\",\"arities\",-1781122917),new cljs.core.Keyword(null,\"header-expander\",\"header-expander\",-1606368578),new cljs.core.Keyword(null,\"list-details\",\"list-details\",46031799),new cljs.core.Keyword(null,\"circular-reference\",\"circular-reference\",970308727),new cljs.core.Keyword(null,\"surrogate-target\",\"surrogate-target\",-1262730220),new cljs.core.Keyword(null,\"fields\",\"fields\",-1932066230),new cljs.core.Keyword(null,\"nil\",\"nil\",99600501),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),new cljs.core.Keyword(null,\"number\",\"number\",1570378438),new cljs.core.Keyword(null,\"protocol-details\",\"protocol-details\",-121549824)],[devtools.formatters.markup._LT_aligned_body_GT_,devtools.formatters.markup._LT_native_reference_GT_,devtools.formatters.markup._LT_reference_surrogate_GT_,devtools.formatters.markup._LT_keyword_GT_,devtools.formatters.markup._LT_protocol_method_arities_GT_,devtools.formatters.markup._LT_surrogate_header_GT_,devtools.formatters.markup._LT_details_GT_,devtools.formatters.markup._LT_more_protocols_GT_,devtools.formatters.markup._LT_field_GT_,devtools.formatters.markup._LT_symbol_GT_,devtools.formatters.markup._LT_fields_details_GT_,devtools.formatters.markup._LT_atomic_GT_,devtools.formatters.markup._LT_string_GT_,devtools.formatters.markup._LT_standard_body_GT_,devtools.formatters.markup._LT_type_basis_GT_,devtools.formatters.markup._LT_bool_GT_,devtools.formatters.markup._LT_standalone_type_GT_,devtools.formatters.markup._LT_preview_GT_,devtools.formatters.markup._LT_header_GT_,devtools.formatters.markup._LT_protocol_method_GT_,devtools.formatters.markup._LT_cljs_land_GT_,devtools.formatters.markup._LT_type_basis_item_GT_,devtools.formatters.markup._LT_protocol_method_arities_details_GT_,devtools.formatters.markup._LT_fields_details_row_GT_,devtools.formatters.markup._LT_standard_body_reference_GT_,devtools.formatters.markup._LT_surrogate_body_GT_,devtools.formatters.markup._LT_expandable_GT_,devtools.formatters.markup._LT_type_GT_,devtools.formatters.markup._LT_protocol_method_arity_GT_,devtools.formatters.markup._LT_raw_surrogate_GT_,devtools.formatters.markup._LT_type_details_GT_,devtools.formatters.markup._LT_list_GT_,devtools.formatters.markup._LT_meta_wrapper_GT_,devtools.formatters.markup._LT_protocol_GT_,devtools.formatters.markup._LT_index_GT_,devtools.formatters.markup._LT_surrogate_GT_,devtools.formatters.markup._LT_protocols_list_GT_,devtools.formatters.markup._LT_meta_GT_,devtools.formatters.markup._LT_instance_GT_,devtools.formatters.markup._LT_reference_GT_,devtools.formatters.markup._LT_function_details_GT_,devtools.formatters.markup._LT_function_GT_,devtools.formatters.markup._LT_arities_GT_,devtools.formatters.markup._LT_header_expander_GT_,devtools.formatters.markup._LT_list_details_GT_,devtools.formatters.markup._LT_circular_reference_GT_,devtools.formatters.markup._LT_surrogate_target_GT_,devtools.formatters.markup._LT_fields_GT_,devtools.formatters.markup._LT_nil_GT_,devtools.formatters.markup._LT_body_GT_,devtools.formatters.markup._LT_number_GT_,devtools.formatters.markup._LT_protocol_details_GT_]));\n} else {\n}\n\nreturn devtools.formatters.markup._STAR_markup_db_STAR_;\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","devtools/formatters/markup.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",31],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha","~$react","~$shadow.js.shim.module$react","~$clojure.core","~$cljs.core"],"~:use-macros",["^ ","~$emit-markup-db","~$devtools.formatters.markup"],"~:excludes",["~#set",[]],"~:macros",["^ ","^G",["^ ","~:arglists",["~#list",[[]]],"^7",9,"^8",1,"^6","devtools/formatters/markup.clj","~:name","~$devtools.formatters.markup/emit-markup-db","~:ns","^H","~:macro",true]],"^N","^H","~:reader-aliases",["^ "],"~:op","^P","~:imports",null,"~:requires",["^ ","~$devtools.formatters.helpers","^V","~$devtools.formatters.printing","^W","~$devtools.formatters.state","^X","~$devtools.formatters.templating","^Y","~$devtools.munging","^Z","~$munging","^Z","^E","^E","~$goog","^10"],"~:seen",["^J",["~:require","~:require-macros"]],"~:uses",["^ ","~$expandable?","^V","~$should-render?","^V","~$set-managed-print-level","^X","~$bool?","^V","~$cljs-instance?","^V","~$get-surrogate-body","^Y","~$get-constructor","^V","~$managed-print-via-writer","^W","~$pref","^V","~$wrap-arity","^V","~$cljs-function?","^V","~$get-more-marker","^V","~$fetch-fields-values","^V","~$managed-print-via-protocol","^W","~$abbreviated?","^V","~$get-surrogate-header","^Y","~$reset-depth-limits","^X","~$get-surrogate-target","^Y","~$set-prevent-recursion","^X","~$get-surrogate-start-index","^Y","~$abbreviate-long-string","^V","~$cljs-type?","^V","~$should-render-instance?","^V"],"^13",["^ ","^H","^H","^E","^E","^Z","^Z","^[","^Z"],"~:form",["^M",["~$ns","^H",["^M",["^13",["^H","~:refer",["^G"]]]],["^M",["^12",["^V","^1N",["^18","^1?","^1J","^19","^1K","^15","^1C","^1I","^1;","^1=","^16","^1@","^1>","^1A"]],["^W","^1N",["^1<","^1B"]],["^X","^1N",["^1G","^17","^1E"]],["^Y","^1N",["^1:","^1F","^1H","^1D"]],["^Z","~:as","^["]]]]],"~:flags",["^ ","^13",["^J",[]],"^12",["^J",[]]],"~:js-deps",[],"~:deps",["^10","^E","^V","^W","^X","^Y","^Z"]],"^P","^H","~:resource-id",["~:shadow.build.classpath/resource","devtools/formatters/markup.cljs"],"~:compiled-at",1735855677171,"^R",["^ ","^V","^V","^H","^H","^W","^W","^Y","^Y","^[","^Z","^X","^X","^E","^E","^10","^10","^Z","^Z"],"~:resource-name","devtools/formatters/markup.cljs","~:warnings",[],"~:source","(ns devtools.formatters.markup\n  (:require-macros [devtools.formatters.markup :refer [emit-markup-db]])\n  (:require [devtools.formatters.helpers :refer [bool? cljs-function? cljs-type? cljs-instance?\n                                                 should-render-instance? expandable? abbreviated?\n                                                 abbreviate-long-string get-constructor pref should-render?\n                                                 get-more-marker wrap-arity fetch-fields-values]]\n            [devtools.formatters.printing :refer [managed-print-via-writer managed-print-via-protocol]]\n            [devtools.formatters.state :refer [set-prevent-recursion set-managed-print-level reset-depth-limits]]\n            [devtools.formatters.templating :refer [get-surrogate-body\n                                                    get-surrogate-target\n                                                    get-surrogate-start-index\n                                                    get-surrogate-header]]\n            [devtools.munging :as munging]))\n\n; reusable hiccup-like templates\n\n(declare get-markup-db)\n\n; -- cljs printing  ---------------------------------------------------------------------------------------------------------\n\n(defn print-with [method value tag & [max-level]]\n  (let [job-fn #(method value tag (get-markup-db))]\n    (if (some? max-level)\n      (binding [*print-level* (inc max-level)]                                                                                ; when printing do at most print-level deep recursion\n        (job-fn))\n      (job-fn))))\n\n(defn print-via-writer [value tag & [max-level]]\n  (print-with managed-print-via-writer value tag max-level))\n\n(defn print-via-protocol [value tag & [max-level]]\n  (print-with managed-print-via-protocol value tag max-level))\n\n; -- references -------------------------------------------------------------------------------------------------------------\n\n(defn <expandable> [& children]\n  (let [inner-markup (concat [:expandable-inner-tag] children)]\n    [:expandable-tag :expandable-symbol inner-markup]))\n\n(defn <raw-surrogate> [& args]\n  (concat [\"surrogate\"] args))\n\n(defn <surrogate> [& [object header body start-index]]\n  (let [header (if (some? body) (<expandable> header) header)]\n    (<raw-surrogate> object header body start-index)))\n\n(defn <reference> [& args]\n  (concat [\"reference\"] args))\n\n(defn <reference-surrogate> [& args]\n  (<reference> (apply <surrogate> args)))\n\n(defn <circular-reference> [& children]\n  (<reference-surrogate> nil [:circular-reference-tag :circular-ref-icon] (concat [:circular-reference-body-tag] children)))\n\n(defn <native-reference> [object]\n  (let [reference (<reference> object #(set-prevent-recursion % true))]\n    [:native-reference-wrapper-tag :native-reference-background [:native-reference-tag reference]]))\n\n(defn <header-expander> [object]\n  (<reference> (<raw-surrogate> object :header-expander-symbol :target) reset-depth-limits))\n\n; -- simple markup ----------------------------------------------------------------------------------------------------------\n\n(defn <cljs-land> [& children]\n  (concat [:cljs-land-tag] children))\n\n(defn <nil> []\n  ; this code is duplicated in templating.cljs, see make-reference\n  [:nil-tag :nil-label])\n\n(defn <bool> [bool]\n  [:bool-tag (str bool)])\n\n(defn <keyword> [keyword]\n  [:keyword-tag (str keyword)])\n\n(defn <symbol> [symbol]\n  [:symbol-tag (str symbol)])\n\n(defn <number> [number]\n  (if (integer? number)\n    [:integer-tag number]\n    [:float-tag number]))\n\n; -- string markup ----------------------------------------------------------------------------------------------------------\n\n(defn <string> [string]\n  (let [dq (pref :dq)\n        re-nl (js/RegExp. \"\\n\" \"g\")\n        nl-marker (pref :new-line-string-replacer)\n        inline-string (.replace string re-nl nl-marker)\n        max-inline-string-size (+ (pref :string-prefix-limit) (pref :string-postfix-limit))\n        quote-string (fn [s] (str dq s dq))\n        should-abbreviate? (> (count inline-string) max-inline-string-size)]\n    (if should-abbreviate?\n      (let [abbreviated-string (abbreviate-long-string inline-string\n                                                       (pref :string-abbreviation-marker)\n                                                       (pref :string-prefix-limit)\n                                                       (pref :string-postfix-limit))\n            abbreviated-string-markup [:string-tag (quote-string abbreviated-string)]\n            string-with-nl-markers (.replace string re-nl (str nl-marker \"\\n\"))\n            details-markup [:expanded-string-tag string-with-nl-markers]]\n        (<reference-surrogate> string abbreviated-string-markup details-markup))\n      [:string-tag (quote-string inline-string)])))\n\n; -- generic preview markup -------------------------------------------------------------------------------------------------\n\n(defn <preview> [value]\n  (print-via-writer value :header-tag (pref :max-print-level)))\n\n; -- body-related templates -------------------------------------------------------------------------------------------------\n\n(defn <body> [markup]\n  [:body-tag markup])\n\n(defn <aligned-body> [markups-lists]\n  (let [prepend-li-tag (fn [line]\n                         (if line\n                           (concat [:aligned-li-tag] line)))\n        aligned-lines (keep prepend-li-tag markups-lists)]\n    (<body> (concat [:standard-ol-no-margin-tag] aligned-lines))))\n\n(defn <standard-body> [markups-lists & [no-margin?]]\n  (let [ol-tag (if no-margin? :standard-ol-no-margin-tag :standard-ol-tag)\n        li-tag (if no-margin? :standard-li-no-margin-tag :standard-li-tag)\n        prepend-li-tag (fn [line]\n                         (if line\n                           (concat [li-tag] line)))\n        lines-markups (keep prepend-li-tag markups-lists)]\n    (concat [ol-tag] lines-markups)))\n\n(defn <standard-body-reference> [o]\n  (<standard-body> [[(<reference> o)]]))\n\n; -- generic details markup -------------------------------------------------------------------------------------------------\n\n(defn <index> [value]\n  [:index-tag value :line-index-separator])\n\n(defn- body-line [index value]\n  (let [index-markup (<index> index)\n        value-markup (print-via-writer value :item-tag (pref :body-line-max-print-level))]\n    [index-markup value-markup]))\n\n; TODO: this fn is screaming for rewrite\n(defn- prepare-body-lines [data starting-index]\n  (loop [work data\n         index starting-index\n         lines []]\n    (if (empty? work)\n      lines\n      (recur (rest work) (inc index) (conj lines (body-line index (first work)))))))\n\n(defn- body-lines [value starting-index]\n  (let [seq (seq value)\n        max-number-body-items (pref :max-number-body-items)\n        chunk (take max-number-body-items seq)\n        rest (drop max-number-body-items seq)\n        lines (prepare-body-lines chunk starting-index)\n        continue? (not (empty? (take 1 rest)))]\n    (if-not continue?\n      lines\n      (let [more-label-markup [:body-items-more-tag :body-items-more-label]\n            start-index (+ starting-index max-number-body-items)\n            more-markup (<reference-surrogate> rest more-label-markup :target start-index)]\n        (conj lines [more-markup])))))\n\n(defn <details> [value starting-index]\n  (let [has-continuation? (pos? starting-index)\n        body-markup (<standard-body> (body-lines value starting-index) has-continuation?)]\n    (if has-continuation?\n      body-markup\n      (<body> body-markup))))\n\n; -- generic list template --------------------------------------------------------------------------------------------------\n\n(defn <list-details> [items _opts]\n  (<aligned-body> (map list items)))\n\n(defn <list> [items max-count & [opts]]\n  (let [items-markups (take max-count items)\n        more-count (- (count items) max-count)\n        more? (pos? more-count)\n        separator (or (:separator opts) :list-separator)\n        more-symbol (if more?\n                      (if-let [more-symbol (:more-symbol opts)]\n                        (if (fn? more-symbol)\n                          (more-symbol more-count)\n                          more-symbol)\n                        (get-more-marker more-count)))\n        preview-markup (concat [(or (:tag opts) :list-tag)\n                                (or (:open-symbol opts) :list-open-symbol)]\n                               (interpose separator items-markups)\n                               (if more? [separator more-symbol])\n                               [(or (:close-symbol opts) :list-close-symbol)])]\n    (if more?\n      (let [details-markup (:details opts)\n            default-details-fn (partial <list-details> items opts)]\n        (<reference-surrogate> nil preview-markup (or details-markup default-details-fn)))\n      preview-markup)))\n\n; -- mete-related markup ----------------------------------------------------------------------------------------------------\n\n(defn <meta> [metadata]\n  (let [body-fn (fn [] [:meta-body-tag (<preview> metadata)])\n        header [:meta-header-tag \"meta\"]]\n    [:meta-reference-tag (<reference-surrogate> metadata header body-fn)]))                                                   ; body must be lazy, see #35\n\n(defn <meta-wrapper> [metadata & children]\n  (concat [:meta-wrapper-tag] children [(<meta> metadata)]))\n\n; -- function markup --------------------------------------------------------------------------------------------------------\n\n(defn <function-details> [fn-obj ns _name arities prefix]\n  {:pre [(fn? fn-obj)]}\n  (let [arities (map wrap-arity arities)\n        make-arity-markup-list (fn [arity]\n                                 [[:fn-multi-arity-args-indent-tag prefix]\n                                  [:fn-args-tag arity]])\n        arities-markupts-lists (if (> (count arities) 1) (map make-arity-markup-list arities))\n        ns-markups-list (if-not (empty? ns) [:ns-icon [:fn-ns-name-tag ns]])\n        native-markups-list [:native-icon (<native-reference> fn-obj)]]\n    (<aligned-body> (concat arities-markupts-lists [ns-markups-list native-markups-list]))))\n\n(defn <arities> [arities]\n  (let [multi-arity? (> (count arities) 1)]\n    [:fn-args-tag (wrap-arity (if multi-arity?\n                                (pref :multi-arity-symbol)\n                                (first arities)))]))\n\n(defn <function> [fn-obj]\n  {:pre [(fn? fn-obj)]}\n  (let [[ns name] (munging/parse-fn-info fn-obj)\n        lambda? (empty? name)\n        spacer-symbol (pref :spacer)\n        rest-symbol (pref :rest-symbol)\n        multi-arity-symbol (pref :multi-arity-symbol)\n        arities (munging/extract-arities fn-obj true spacer-symbol multi-arity-symbol rest-symbol)\n        arities-markup (<arities> arities)\n        name-markup (if-not lambda? [:fn-name-tag name])\n        icon-markup (if lambda? :lambda-icon :fn-icon)\n        prefix-markup [:fn-prefix-tag icon-markup name-markup]\n        preview-markup [:fn-header-tag prefix-markup arities-markup]\n        details-fn (partial <function-details> fn-obj ns name arities prefix-markup)]\n    (<reference-surrogate> fn-obj preview-markup details-fn)))\n\n; -- type markup ------------------------------------------------------------------------------------------------------------\n\n(defn <type-basis-item> [basis-item]\n  [:type-basis-item-tag (name basis-item)])\n\n(defn <type-basis> [basis]\n  (let [item-markups (map <type-basis-item> basis)\n        children-markups (interpose :type-basis-item-separator item-markups)]\n    (concat [:type-basis-tag] children-markups)))\n\n(defn <type-details> [constructor-fn ns _name basis]\n  (let [ns-markup (if-not (empty? ns) [:ns-icon [:fn-ns-name-tag ns]])\n        basis-markup (if (empty? basis)\n                       [:empty-basis-symbol]\n                       [:basis-icon (<type-basis> basis)])\n        native-markup [:native-icon (<native-reference> constructor-fn)]]\n    (<aligned-body> [basis-markup ns-markup native-markup])))\n\n(defn <type> [constructor-fn & [header-tag]]\n  (let [[ns name basis] (munging/parse-constructor-info constructor-fn)\n        name-markup [:type-name-tag name]\n        preview-markup [(or header-tag :type-header-tag) :type-symbol name-markup]\n        details-markup-fn (partial <type-details> constructor-fn ns name basis)]\n    [:type-wrapper-tag\n     :type-header-background\n     [:type-ref-tag (<reference-surrogate> constructor-fn preview-markup details-markup-fn)]]))\n\n(defn <standalone-type> [constructor-fn & [header-tag]]\n  [:standalone-type-tag (<type> constructor-fn header-tag)])\n\n; -- protocols markup -------------------------------------------------------------------------------------------------------\n\n(defn <protocol-method-arity> [arity-fn]\n  (<reference> arity-fn))\n\n(defn <protocol-method-arities-details> [fns]\n  (<aligned-body> (map <protocol-method-arity> fns)))\n\n(defn <protocol-method-arities> [fns & [max-fns]]\n  (let [max-fns (or max-fns (pref :max-protocol-method-arities-list))\n        more? (> (count fns) max-fns)\n        aritites-markups (map <protocol-method-arity> (take max-fns fns))\n        preview-markup (concat [:protocol-method-arities-header-tag :protocol-method-arities-header-open-symbol]\n                               (interpose :protocol-method-arities-list-header-separator aritites-markups)\n                               (if more? [:protocol-method-arities-more-symbol])\n                               [:protocol-method-arities-header-close-symbol])]\n    (if more?\n      (let [details-markup-fn (partial <protocol-method-arities-details> fns)]\n        (<reference-surrogate> nil preview-markup details-markup-fn))\n      preview-markup)))\n\n(defn <protocol-method> [name arities]\n  [:protocol-method-tag\n   :method-icon\n   [:protocol-method-name-tag name]\n   (<protocol-method-arities> arities)])\n\n(defn <protocol-details> [obj ns _name selector _fast?]\n  (let [protocol-obj (munging/get-protocol-object selector)\n        ns-markups-list (if-not (empty? ns) [:ns-icon [:protocol-ns-name-tag ns]])\n        native-markups-list (if (some? protocol-obj) [:native-icon (<native-reference> protocol-obj)])\n        methods (munging/collect-protocol-methods obj selector)\n        methods-markups (map (fn [[name arities]] (<protocol-method> name arities)) methods)\n        methods-markups-lists (map list methods-markups)]\n    (<aligned-body> (concat methods-markups-lists [ns-markups-list native-markups-list]))))\n\n(defn <protocol> [obj protocol & [tag]]\n  (let [{:keys [ns name selector fast?]} protocol\n        preview-markup [(or tag :protocol-name-tag) name]\n        prefix-markup [(if fast? :fast-protocol-tag :slow-protocol-tag) :protocol-background]]\n    (if (some? obj)\n      (let [details-markup-fn (partial <protocol-details> obj ns name selector fast?)]\n        (conj prefix-markup (<reference-surrogate> obj preview-markup details-markup-fn)))\n      (conj prefix-markup preview-markup))))\n\n(defn <more-protocols> [more-count]\n  (let [fake-protocol {:name (get-more-marker more-count)}]\n    (<protocol> nil fake-protocol :protocol-more-tag)))\n\n(defn <protocols-list> [obj protocols & [max-protocols]]\n  (let [max-protocols (or max-protocols (pref :max-list-protocols))\n        protocols-markups (map (partial <protocol> obj) protocols)]\n    (<list> protocols-markups max-protocols {:tag          :protocols-header-tag\n                                             :open-symbol  :protocols-list-open-symbol\n                                             :close-symbol :protocols-list-close-symbol\n                                             :separator    :header-protocol-separator\n                                             :more-symbol  <more-protocols>})))\n\n; -- instance fields markup -------------------------------------------------------------------------------------------------\n\n(defn <field> [name value]\n  [:header-field-tag\n   [:header-field-name-tag (str name)]\n   :header-field-value-spacer\n   [:header-field-value-tag (<reference> (<surrogate> value) #(set-managed-print-level % 1))]\n   :header-field-separator])\n\n(defn <fields-details-row> [field]\n  (let [[name value] field]\n    [:body-field-tr-tag\n     [:body-field-td1-tag\n      :body-field-symbol\n      [:body-field-name-tag (str name)]]\n     [:body-field-td2-tag\n      :body-field-value-spacer]\n     [:body-field-td3-tag\n      [:body-field-value-tag (<reference-surrogate> value)]]]))\n\n(defn <fields> [fields & [max-fields]]\n  (if (zero? (count fields))\n    [:fields-header-tag :fields-header-no-fields-symbol]\n    (let [max-fields (or max-fields (pref :max-instance-header-fields))\n          more? (> (count fields) max-fields)\n          fields-markups (map (fn [[name value]] (<field> name value)) (take max-fields fields))]\n      (concat [:fields-header-tag\n               :fields-header-open-symbol]\n              fields-markups\n              [(if more? :more-fields-symbol)\n               :fields-header-close-symbol]))))\n\n(defn <fields-details> [fields obj]\n  (let [protocols (munging/scan-protocols obj)\n        has-protocols? (not (empty? protocols))\n        fields-markup (if-not (zero? (count fields))\n                        [:fields-icon (concat [:instance-body-fields-table-tag] (map <fields-details-row> fields))])\n        protocols-list-markup (if has-protocols? [:protocols-icon (<protocols-list> obj protocols)])\n        native-markup [:native-icon (<native-reference> obj)]]\n    (<aligned-body> [fields-markup protocols-list-markup native-markup])))\n\n; -- type/record instance markup --------------------------------------------------------------------------------------------\n\n(defn <instance> [value]\n  (let [constructor-fn (get-constructor value)\n        [_ns _name basis] (munging/parse-constructor-info constructor-fn)\n        custom-printing? (implements? IPrintWithWriter value)\n        type-markup (<type> constructor-fn :instance-type-header-tag)\n        fields (fetch-fields-values value basis)\n        fields-markup (<fields> fields (if custom-printing? 0))\n        fields-details-markup-fn #(<fields-details> fields value)\n        fields-preview-markup [:instance-value-tag (<reference-surrogate> value fields-markup fields-details-markup-fn)]\n        custom-printing-markup (if custom-printing?\n                                 [:instance-custom-printing-wrapper-tag\n                                  :instance-custom-printing-background\n                                  (print-via-protocol value :instance-custom-printing-tag)])]\n    [:instance-header-tag\n     :instance-header-background\n     fields-preview-markup\n     custom-printing-markup\n     type-markup]))\n\n; ---------------------------------------------------------------------------------------------------------------------------\n\n(defn <header> [value]\n  (<cljs-land> (<preview> value)))\n\n(defn <surrogate-header> [surrogate]\n  (or (get-surrogate-header surrogate)\n      (<preview> (get-surrogate-target surrogate))))\n\n(defn <surrogate-target> [surrogate]\n  (let [target (get-surrogate-target surrogate)]\n    (if (seqable? target)\n      (let [starting-index (get-surrogate-start-index surrogate)]\n        (<details> target starting-index))\n      (<standard-body-reference> target))))\n\n(defn <surrogate-body> [surrogate]\n  (if-let [body (get-surrogate-body surrogate)]\n    (if (= :target body)\n      (<surrogate-target> surrogate)\n      body)))\n\n; ---------------------------------------------------------------------------------------------------------------------------\n\n(defn <atomic> [value]\n  (cond\n    (should-render? :render-nils value nil?) (<nil>)\n    (should-render? :render-bools value bool?) (<bool> value)\n    (should-render? :render-strings value string?) (<string> value)\n    (should-render? :render-numbers value number?) (<number> value)\n    (should-render? :render-keywords value keyword?) (<keyword> value)\n    (should-render? :render-symbols value symbol?) (<symbol> value)\n    (should-render? :render-instances value should-render-instance?) (<instance> value)\n    (should-render? :render-types value cljs-type?) (<standalone-type> value)\n    (should-render? :render-functions value cljs-function?) (<function> value)))\n\n; ---------------------------------------------------------------------------------------------------------------------------\n\n(def ^:dynamic *markup-db*)\n\n; emit-markup-db macro will generate a map of all markup <functions> in this namespace:\n;\n;    {:atomic              <atomic>\n;     :reference           <reference>\n;     :native-reference    <native-reference>\n;     ...}\n;\n; we generate it only on first call and cache it in *markup-db*\n; emitting markup db statically into def would prevent dead-code elimination\n;\n(defn get-markup-db []\n  (if (nil? *markup-db*)\n    (set! *markup-db* (emit-markup-db)))\n  *markup-db*)\n","~:reader-features",["^J",["~:cljs"]],"~:used-var-namespaces",["^J",["^V","^H","^W","^Y","^X","^E","~$js","^Z"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["var_args","args__5732__auto__","len__5726__auto__","i__5727__auto__","argseq__5733__auto__","cljs.core/IndexedSeq","devtools.formatters.markup/print-with","p__14895","vec__14896","cljs.core.nth","seq14891","G__14892","cljs.core/first","cljs.core/next","G__14893","G__14894","self__5711__auto__","method","value","tag","max-level","job-fn","G__14899","G__14900","G__14901","devtools.formatters.markup/get-markup-db","*print-level*-orig-val__14905","*print-level*-temp-val__14906","cljs.core/*print-level*","devtools.formatters.markup/print-via-writer","p__14917","vec__14918","seq14909","G__14910","G__14911","devtools.formatters.markup.print_with","devtools.formatters.printing/managed-print-via-writer","devtools.formatters.markup/print-via-protocol","p__14930","vec__14931","seq14924","G__14925","G__14926","devtools.formatters.printing/managed-print-via-protocol","devtools.formatters.markup/<expandable>","seq14934","self__5712__auto__","cljs.core/seq","children","inner-markup","cljs.core.concat","devtools.formatters.markup/<raw-surrogate>","seq14939","args","devtools.formatters.markup/<surrogate>","p__14946","vec__14947","seq14944","object","header","body","start-index","devtools.formatters.markup._LT_expandable_GT_","devtools.formatters.markup._LT_raw_surrogate_GT_","devtools.formatters.markup/<reference>","seq14950","devtools.formatters.markup/<reference-surrogate>","seq14954","devtools.formatters.markup._LT_reference_GT_","cljs.core.apply","devtools.formatters.markup/<circular-reference>","seq14955","devtools.formatters.markup._LT_reference_surrogate_GT_","devtools.formatters.markup/<native-reference>","reference","p1__14956#","devtools.formatters.state/set-prevent-recursion","devtools.formatters.markup/<header-expander>","devtools.formatters.state/reset-depth-limits","devtools.formatters.markup/<cljs-land>","seq14966","devtools.formatters.markup/<nil>","devtools.formatters.markup/<bool>","bool","devtools.formatters.markup/<keyword>","keyword","devtools.formatters.markup/<symbol>","symbol","devtools.formatters.markup/<number>","number","cljs.core/integer?","devtools.formatters.markup/<string>","string","dq","devtools.formatters.helpers/pref","re-nl","js/RegExp","nl-marker","inline-string","max-inline-string-size","quote-string","s","should-abbreviate?","cljs.core/count","abbreviated-string","devtools.formatters.helpers/abbreviate-long-string","abbreviated-string-markup","string-with-nl-markers","details-markup","devtools.formatters.markup/<preview>","devtools.formatters.markup.print_via_writer","devtools.formatters.markup/<body>","markup","devtools.formatters.markup/<aligned-body>","markups-lists","prepend-li-tag","line","aligned-lines","cljs.core.keep","devtools.formatters.markup/<standard-body>","p__14986","vec__14987","seq14972","G__14973","no-margin?","ol-tag","li-tag","lines-markups","devtools.formatters.markup/<standard-body-reference>","o","devtools.formatters.markup/<index>","devtools.formatters.markup/body-line","index","index-markup","value-markup","devtools.formatters.markup/prepare-body-lines","data","starting-index","work","lines","cljs.core/empty?","cljs.core/rest","cljs.core.conj","devtools.formatters.markup/body-lines","seq","max-number-body-items","chunk","cljs.core.take","rest","cljs.core.drop","continue?","more-label-markup","more-markup","devtools.formatters.markup/<details>","has-continuation?","body-markup","devtools.formatters.markup._LT_standard_body_GT_","devtools.formatters.markup/<list-details>","items","_opts","cljs.core.map","cljs.core/list","devtools.formatters.markup/<list>","p__15026","vec__15028","seq15020","G__15021","G__15022","max-count","opts","items-markups","more-count","more?","separator","or__5002__auto__","more-symbol","temp__5802__auto__","cljs.core/fn?","devtools.formatters.helpers/get-more-marker","preview-markup","cljs.core.interpose","default-details-fn","cljs.core.partial","devtools.formatters.markup/<meta>","metadata","body-fn","devtools.formatters.markup/<meta-wrapper>","seq15052","G__15053","js/Error","devtools.formatters.markup/<function-details>","fn-obj","ns","_name","arities","prefix","devtools.formatters.helpers/wrap-arity","make-arity-markup-list","arity","arities-markupts-lists","ns-markups-list","native-markups-list","devtools.formatters.markup/<arities>","multi-arity?","devtools.formatters.markup/<function>","vec__15059","name","devtools.munging/parse-fn-info","lambda?","spacer-symbol","rest-symbol","multi-arity-symbol","devtools.munging/extract-arities","arities-markup","name-markup","icon-markup","prefix-markup","details-fn","devtools.formatters.markup/<type-basis-item>","basis-item","cljs.core/name","devtools.formatters.markup/<type-basis>","basis","item-markups","children-markups","devtools.formatters.markup/<type-details>","constructor-fn","ns-markup","basis-markup","native-markup","devtools.formatters.markup/<type>","p__15073","vec__15074","seq15067","G__15068","header-tag","vec__15077","devtools.munging/parse-constructor-info","details-markup-fn","devtools.formatters.markup/<standalone-type>","p__15088","vec__15089","seq15084","G__15085","devtools.formatters.markup._LT_type_GT_","devtools.formatters.markup/<protocol-method-arity>","arity-fn","devtools.formatters.markup/<protocol-method-arities-details>","fns","devtools.formatters.markup/<protocol-method-arities>","p__15109","vec__15110","seq15097","G__15098","max-fns","aritites-markups","devtools.formatters.markup/<protocol-method>","devtools.formatters.markup/<protocol-details>","obj","selector","_fast?","protocol-obj","devtools.munging/get-protocol-object","methods","devtools.munging/collect-protocol-methods","methods-markups","p__15135","vec__15139","methods-markups-lists","devtools.formatters.markup/<protocol>","p__15163","vec__15164","seq15147","G__15148","G__15149","protocol","map__15167","cljs.core/--destructure-map","cljs.core.get","fast?","devtools.formatters.markup/<more-protocols>","fake-protocol","devtools.formatters.markup._LT_protocol_GT_","devtools.formatters.markup/<protocols-list>","p__15199","vec__15200","seq15184","G__15185","G__15186","protocols","max-protocols","protocols-markups","devtools.formatters.markup._LT_list_GT_","devtools.formatters.markup/<field>","p1__15207#","devtools.formatters.markup._LT_surrogate_GT_","devtools.formatters.state/set-managed-print-level","devtools.formatters.markup/<fields-details-row>","field","vec__15212","devtools.formatters.markup/<fields>","p__15233","vec__15234","seq15222","G__15223","fields","max-fields","fields-markups","p__15247","vec__15250","devtools.formatters.markup/<fields-details>","devtools.munging/scan-protocols","has-protocols?","fields-markup","protocols-list-markup","devtools.formatters.markup/<instance>","vec__15282","devtools.formatters.helpers/get-constructor","_ns","custom-printing?","cljs.core/PROTOCOL_SENTINEL","type-markup","devtools.formatters.helpers/fetch-fields-values","devtools.formatters.markup._LT_fields_GT_","fields-details-markup-fn","fields-preview-markup","custom-printing-markup","devtools.formatters.markup/<header>","devtools.formatters.markup._LT_cljs_land_GT_","devtools.formatters.markup/<surrogate-header>","surrogate","devtools.formatters.templating/get-surrogate-header","devtools.formatters.templating/get-surrogate-target","devtools.formatters.markup/<surrogate-target>","target","cljs.core/seqable?","devtools.formatters.templating/get-surrogate-start-index","devtools.formatters.markup/<surrogate-body>","devtools.formatters.templating/get-surrogate-body","cljs.core._EQ_","devtools.formatters.markup/<atomic>","devtools.formatters.helpers/should-render?","cljs.core/nil?","devtools.formatters.helpers/bool?","cljs.core/string?","cljs.core/number?","cljs.core/keyword?","cljs.core/symbol?","devtools.formatters.helpers/should-render-instance?","devtools.formatters.helpers/cljs-type?","devtools.formatters.helpers/cljs-function?","devtools.formatters.markup/*markup-db*","cljs.core/PersistentHashMap"]],"~:used-vars",["^J",["~$cljs.core/--destructure-map","~$cljs.core/keep","~$devtools.formatters.markup/<type-basis-item>","~$devtools.formatters.markup/<cljs-land>","~$devtools.formatters.printing/managed-print-via-protocol","~$cljs.core/PROTOCOL_SENTINEL","~$cljs.core/rest","~$cljs.core/PersistentHashMap","~$devtools.formatters.markup/<standalone-type>","~$cljs.core/*print-level*","~$js/RegExp","~$cljs.core/keyword?","~$devtools.formatters.markup/<string>","~$devtools.formatters.markup/body-lines","~$devtools.formatters.markup/<atomic>","~$devtools.formatters.markup/body-line","~$devtools.formatters.markup/<fields-details>","~$devtools.formatters.markup/<surrogate-body>","~$devtools.formatters.markup/<header-expander>","~$cljs.core/=","~$devtools.formatters.printing/managed-print-via-writer","~$devtools.formatters.markup/<type-basis>","~$devtools.formatters.markup/<fields-details-row>","~$devtools.formatters.markup/<standard-body>","~$cljs.core/partial","~$devtools.formatters.markup/<arities>","~$devtools.formatters.helpers/abbreviate-long-string","~$devtools.formatters.helpers/should-render-instance?","~$cljs.core/IndexedSeq","~$devtools.munging/get-protocol-object","~$devtools.formatters.helpers/cljs-type?","~$cljs.core/count","~$cljs.core/seq","~$cljs.core/apply","~$devtools.formatters.markup/<preview>","~$cljs.core/take","~$devtools.formatters.templating/get-surrogate-start-index","~$devtools.formatters.helpers/cljs-function?","~$devtools.formatters.markup/<surrogate>","~$cljs.core/string?","~$devtools.formatters.markup/get-markup-db","~$cljs.core/concat","~$devtools.formatters.markup/<symbol>","~$devtools.formatters.markup/<protocol-method-arities-details>","~$devtools.formatters.markup/<standard-body-reference>","~$devtools.formatters.markup/<type-details>","~$devtools.formatters.markup/<protocol-method-arity>","~$devtools.formatters.markup/<type>","~$devtools.formatters.markup/<surrogate-header>","~$cljs.core/empty?","~$devtools.munging/parse-constructor-info","~$devtools.formatters.state/reset-depth-limits","~$cljs.core/conj","~$devtools.munging/parse-fn-info","~$devtools.formatters.markup/<more-protocols>","~$devtools.formatters.markup/*markup-db*","~$devtools.formatters.markup/<protocols-list>","~$cljs.core/map","~$devtools.formatters.markup/<index>","~$cljs.core/fn?","~$devtools.formatters.markup/<protocol>","~$devtools.formatters.templating/get-surrogate-target","~$devtools.formatters.markup/<instance>","~$devtools.formatters.helpers/bool?","~$devtools.formatters.state/set-prevent-recursion","~$devtools.formatters.markup/<meta>","~$cljs.core/number?","~$devtools.munging/extract-arities","~$devtools.formatters.helpers/get-constructor","~$cljs.core/get","~$cljs.core/integer?","~$devtools.formatters.markup/<reference>","~$devtools.formatters.helpers/pref","~$devtools.formatters.markup/<function-details>","~$devtools.formatters.markup/<bool>","~$devtools.formatters.markup/print-with","~$devtools.formatters.helpers/wrap-arity","~$devtools.formatters.markup/print-via-protocol","~$cljs.core/nil?","~$devtools.formatters.markup/<function>","~$cljs.core/nth","~$devtools.munging/scan-protocols","~$devtools.formatters.markup/<nil>","~$devtools.formatters.markup/<circular-reference>","~$devtools.formatters.markup/<header>","~$devtools.formatters.markup/<protocol-method>","~$devtools.formatters.markup/<expandable>","~$cljs.core/next","~$devtools.formatters.markup/<body>","~$devtools.formatters.markup/<fields>","~$cljs.core/not","~$devtools.formatters.helpers/get-more-marker","~$devtools.formatters.markup/<surrogate-target>","~$cljs.core/interpose","~$devtools.formatters.templating/get-surrogate-header","~$devtools.formatters.markup/prepare-body-lines","~$cljs.core/seqable?","~$cljs.core/symbol?","~$devtools.formatters.helpers/fetch-fields-values","~$devtools.formatters.markup/<protocol-details>","~$devtools.formatters.markup/<native-reference>","~$devtools.formatters.state/set-managed-print-level","~$devtools.formatters.markup/<number>","~$devtools.formatters.markup/<reference-surrogate>","~$devtools.formatters.markup/<keyword>","~$devtools.formatters.markup/<list>","~$devtools.formatters.markup/<meta-wrapper>","~$cljs.core/first","~$devtools.formatters.markup/<protocol-method-arities>","~$devtools.formatters.markup/<raw-surrogate>","~$devtools.formatters.markup/<list-details>","~$devtools.formatters.templating/get-surrogate-body","~$cljs.core/list","~$devtools.formatters.markup/print-via-writer","~$devtools.formatters.markup/<aligned-body>","~$cljs.core/name","~$devtools.munging/collect-protocol-methods","~$js/Error","~$devtools.formatters.helpers/should-render?","~$cljs.core/drop","~$devtools.formatters.markup/<details>","~$devtools.formatters.markup/<field>"]]],"~:cache-keys",["~#cmap",[["^1T","goog/dom/tagname.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^J",[]],"~:deps-syms",["^10","~$goog.dom.HtmlElement"]]],["^1T","devtools/formatters/printing.cljs"],["a9a67577712ad6d677b31d47dcd3c659308cd024","^4Z",["^ ","^4[",null,"^50",["^J",[]],"^51",["^10","^E","~$devtools.prefs","~$devtools.format","~$devtools.protocols","^X","^V"]]],["^1T","goog/labs/useragent/platform.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^4Z",["^ ","^4[",null,"^50",["^J",[]],"^51",["^10","~$goog.string.internal","~$goog.labs.userAgent.util","~$goog.labs.userAgent.highEntropy.highEntropyValue","~$goog.labs.userAgent.highEntropy.highEntropyData","~$goog.labs.userAgent"]]],["^1T","devtools/formatters/markup.cljs"],["a9a67577712ad6d677b31d47dcd3c659308cd024","^4Z",["^ ","^4[",null,"^50",["^J",[]],"^51",["^10","^E","^V","^W","^X","^Y","^Z"]]],["^1T","devtools/formatters/helpers.cljs"],["a9a67577712ad6d677b31d47dcd3c659308cd024","^4Z",["^ ","^4[",null,"^50",["^J",[]],"^51",["^10","^E","^53","^Z","^54","^55"]]],["^1T","goog/html/trustedtypes.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^4Z",["^ ","^4[",null,"^50",["^J",[]],"^51",["^10"]]],["^1T","goog/labs/useragent/browser.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^4Z",["^ ","^4[",null,"^50",["^J",[]],"^51",["^10","^57","^58","~$goog.asserts","^56","^59","^5:"]]],["^1T","goog/html/safeurl.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^4Z",["^ ","^4[",null,"^50",["^J",[]],"^51",["^10","^5;","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.string.Const","~$goog.string.TypedString","^56"]]],["^1T","goog/array/array.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^4Z",["^ ","^4[",null,"^50",["^J",[]],"^51",["^10","^5;"]]],["^1T","goog/useragent/useragent.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^4Z",["^ ","^4[",null,"^50",["^J",[]],"^51",["^10","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^57","~$goog.reflect","^56"]]],["^1T","devtools/formatters/templating.cljs"],["a9a67577712ad6d677b31d47dcd3c659308cd024","^4Z",["^ ","^4[",null,"^50",["^J",[]],"^51",["^10","^E","~$clojure.walk","~$devtools.util","^55","^V","^X","~$clojure.string"]]],["^1T","goog/debug/error.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^4Z",["^ ","^4[",null,"^50",["^J",[]],"^51",["^10"]]],["^1T","goog/flags/flags.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^4Z",["^ ","^4[",null,"^50",["^J",[]],"^51",["^10"]]],["^1T","goog/dom/nodetype.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^4Z",["^ ","^4[",null,"^50",["^J",[]],"^51",["^10"]]],["^1T","goog/labs/useragent/highentropy/highentropyvalue.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^4Z",["^ ","^4[",null,"^50",["^J",[]],"^51",["^10","^57","^56"]]],["^1T","cljs/pprint.cljs"],["b89362aeac5c1cafea76c798929ee5d385c461d8","^4Z",["^ ","^4[",null,"^50",["^J",[]],"^51",["^10","^E","^5F","~$goog.string","~$goog.string.StringBuffer"]]],["^1T","goog/string/typedstring.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^4Z",["^ ","^4[",null,"^50",["^J",[]],"^51",["^10"]]],["^1T","goog/object/object.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^4Z",["^ ","^4[",null,"^50",["^J",[]],"^51",["^10"]]],["^1T","goog/dom/asserts.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^4Z",["^ ","^4[",null,"^50",["^J",[]],"^51",["^10","^5;"]]],"~:SHADOW-TIMESTAMP",[1733506754000,1733506754000,1715719162000],["^1T","goog/math/long.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^4Z",["^ ","^4[",null,"^50",["^J",[]],"^51",["^10","^5;","^5C"]]],["^1T","goog/html/trustedresourceurl.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^4Z",["^ ","^4[",null,"^50",["^J",[]],"^51",["^10","^5;","~$goog.fs.blob","^5<","~$goog.html.SafeScript","~$goog.html.trustedtypes","^5>","^5?"]]],["^1T","devtools/version.cljs"],["a9a67577712ad6d677b31d47dcd3c659308cd024","^4Z",["^ ","^4[",null,"^50",["^J",[]],"^51",["^10","^E"]]],["^1T","goog/string/internal.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^4Z",["^ ","^4[",null,"^50",["^J",[]],"^51",["^10"]]],["^1T","goog/functions/functions.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^4Z",["^ ","^4[",null,"^50",["^J",[]],"^51",["^10"]]],["^1T","goog/html/safestyle.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^4Z",["^ ","^4[",null,"^50",["^J",[]],"^51",["^10","^5>","~$goog.html.SafeUrl","^5?","^5;","^56"]]],["^1T","goog/dom/safe.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^4Z",["^ ","^4[",null,"^50",["^J",[]],"^51",["^10","^5;","~$goog.asserts.dom","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^5K","~$goog.html.SafeStyle","^5M","^5=","~$goog.html.uncheckedconversions","^5>","^56"]]],["^1T","devtools/prefs.cljs"],["a9a67577712ad6d677b31d47dcd3c659308cd024","^4Z",["^ ","^4[",null,"^50",["^J",[]],"^51",["^10","^E","~$devtools.defaults"]]],["^1T","goog/asserts/dom.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^4Z",["^ ","^4[",null,"^50",["^J",[]],"^51",["^10","~$goog.dom.TagName","^5;","~$goog.dom.element"]]],["^1T","clojure/walk.cljs"],["b89362aeac5c1cafea76c798929ee5d385c461d8","^4Z",["^ ","^4[",null,"^50",["^J",[]],"^51",["^10","^E"]]],["^1T","goog/html/safehtml.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^4Z",["^ ","^4[",null,"^50",["^J",[]],"^51",["^10","^5>","^5K","^5R","~$goog.html.SafeStyleSheet","^5M","^5U","^5=","^5?","^5;","^5@","~$goog.array","~$goog.object","^56","~$goog.dom.tags","^5L"]]],["^1T","goog/dom/tags.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^4Z",["^ ","^4[",null,"^50",["^J",[]],"^51",["^10","^5Y"]]],["^1T","devtools/munging.cljs"],["a9a67577712ad6d677b31d47dcd3c659308cd024","^4Z",["^ ","^4[",null,"^50",["^J",[]],"^51",["^10","^E","^5F","~$devtools.context","^5Y","^5H"]]],["^1T","goog/labs/useragent/engine.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^4Z",["^ ","^4[",null,"^50",["^J",[]],"^51",["^10","^5X","^56","^57"]]],["^1T","goog/fs/blob.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^4Z",["^ ","^4[",null,"^50",["^J",[]],"^51",["^10"]]],["^1T","goog/asserts/asserts.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^4Z",["^ ","^4[",null,"^50",["^J",[]],"^51",["^10","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1T","goog/uri/uri.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^4Z",["^ ","^4[",null,"^50",["^J",[]],"^51",["^10","^5X","^5;","~$goog.collections.maps","^5G","~$goog.structs","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1T","goog/labs/useragent/highentropy/highentropydata.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^4Z",["^ ","^4[",null,"^50",["^J",[]],"^51",["^10","^58"]]],["^1T","goog/collections/maps.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^4Z",["^ ","^4[",null,"^50",["^J",[]],"^51",["^10"]]],["^1T","goog/fs/url.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^4Z",["^ ","^4[",null,"^50",["^J",[]],"^51",["^10"]]],["^1T","goog/base.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^4Z",["^ ","^4[",null,"^50",["^J",[]],"^51",[]]],["^1T","goog/structs/structs.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^4Z",["^ ","^4[",null,"^50",["^J",[]],"^51",["^10","^5X","^5Y"]]],["^1T","clojure/string.cljs"],["b89362aeac5c1cafea76c798929ee5d385c461d8","^4Z",["^ ","^4[",null,"^50",["^J",[]],"^51",["^10","^E","^5G","^5H"]]],["^1T","devtools/formatters/state.cljs"],["a9a67577712ad6d677b31d47dcd3c659308cd024","^4Z",["^ ","^4[",null,"^50",["^J",[]],"^51",["^10","^E"]]],["^1T","goog/string/string.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^4Z",["^ ","^4[",null,"^50",["^J",[]],"^51",["^10","~$goog.dom.safe","^5S","^5>","^56"]]],["^1T","clojure/data.cljs"],["b89362aeac5c1cafea76c798929ee5d385c461d8","^4Z",["^ ","^4[",null,"^50",["^J",[]],"^51",["^10","^E","~$clojure.set"]]],["^1T","goog/reflect/reflect.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^4Z",["^ ","^4[",null,"^50",["^J",[]],"^51",["^10"]]],["^1T","goog/labs/useragent/util.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^4Z",["^ ","^4[",null,"^50",["^J",[]],"^51",["^10","^56","^5:"]]],["^1T","goog/string/stringbuffer.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^4Z",["^ ","^4[",null,"^50",["^J",[]],"^51",["^10"]]],["^1T","goog/labs/useragent/useragent.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^4Z",["^ ","^4[",null,"^50",["^J",[]],"^51",["^10","~$goog.flags"]]],["^1T","goog/dom/element.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^4Z",["^ ","^4[",null,"^50",["^J",[]],"^51",["^10","^61","^5U"]]],["^1T","goog/html/uncheckedconversions.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^4Z",["^ ","^4[",null,"^50",["^J",[]],"^51",["^10","^5;","^5Q","^5K","^5R","^5W","^5M","^5=","^5>","^56"]]],["^1T","devtools/defaults.cljs"],["a9a67577712ad6d677b31d47dcd3c659308cd024","^4Z",["^ ","^4[",null,"^50",["^J",[]],"^51",["^10","^E"]]],["^1T","goog/dom/htmlelement.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^4Z",["^ ","^4[",null,"^50",["^J",[]],"^51",["^10"]]],["^1T","cljs/core.cljs"],["b89362aeac5c1cafea76c798929ee5d385c461d8","^4Z",["^ ","^4[",null,"^50",["^J",[]],"^51",["^10","~$goog.math.Long","~$goog.math.Integer","^5G","^5Y","^5X","~$goog.Uri","^5H"]]],["^1T","goog/html/safescript.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^4Z",["^ ","^4[",null,"^50",["^J",[]],"^51",["^10","^5>","^5?","^5L","^5;"]]],["^1T","devtools/context.cljs"],["a9a67577712ad6d677b31d47dcd3c659308cd024","^4Z",["^ ","^4[",null,"^50",["^J",[]],"^51",["^10","^E"]]],["^1T","goog/html/safestylesheet.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^4Z",["^ ","^4[",null,"^50",["^J",[]],"^51",["^10","^5>","^5R","^5?","^5Y","^5;","^56"]]],["^1T","goog/math/integer.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^4Z",["^ ","^4[",null,"^50",["^J",[]],"^51",["^10","^5C"]]],["^1T","devtools/format.cljs"],["a9a67577712ad6d677b31d47dcd3c659308cd024","^4Z",["^ ","^4[",null,"^50",["^J",[]],"^51",["^10","^E","^5["]]],["^1T","clojure/set.cljs"],["b89362aeac5c1cafea76c798929ee5d385c461d8","^4Z",["^ ","^4[",null,"^50",["^J",[]],"^51",["^10","^E"]]],["^1T","goog/uri/utils.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^4Z",["^ ","^4[",null,"^50",["^J",[]],"^51",["^10","^5;","^5G"]]],["^1T","goog/string/const.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^4Z",["^ ","^4[",null,"^50",["^J",[]],"^51",["^10","^5;","^5?"]]],["^1T","devtools/protocols.cljs"],["a9a67577712ad6d677b31d47dcd3c659308cd024","^4Z",["^ ","^4[",null,"^50",["^J",[]],"^51",["^10","^E"]]],["^1T","devtools/util.cljs"],["a9a67577712ad6d677b31d47dcd3c659308cd024","^4Z",["^ ","^4[",null,"^50",["^J",[]],"^51",["^10","^E","~$goog.userAgent","~$clojure.data","~$devtools.version","^5[","^?","^53"]]]]],"~:clj-info",["^ ","jar:file:/Users/john/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/edn.clj",1690756440000,"jar:file:/Users/john/.m2/repository/binaryage/env-config/0.2.2/env-config-0.2.2.jar!/env_config/core.cljc",1679776603000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/source_map.clj",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/analyzer.cljc",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/analyzer/passes/and_or.cljc",1715719162000,"jar:file:/Users/john/.m2/repository/binaryage/devtools/0.9.7/devtools-0.9.7.jar!/devtools/version.clj",1725206106000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/vendor/clojure/tools/reader/reader_types.clj",1715719162000,"jar:file:/Users/john/.m2/repository/binaryage/env-config/0.2.2/env-config-0.2.2.jar!/env_config/impl/read.cljc",1679776603000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/vendor/clojure/tools/reader/impl/errors.clj",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/instant.clj",1690756440000,"jar:file:/Users/john/.m2/repository/binaryage/devtools/0.9.7/devtools-0.9.7.jar!/devtools/prefs.clj",1725206106000,"jar:file:/Users/john/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/pprint.clj",1690756440000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/vendor/clojure/tools/reader/default_data_readers.clj",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/compiler.cljc",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/util.cljc",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/tagged_literals.cljc",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/env.cljc",1715719162000,"jar:file:/Users/john/.m2/repository/binaryage/devtools/0.9.7/devtools-0.9.7.jar!/devtools/formatters/markup.clj",1725206106000,"jar:file:/Users/john/.m2/repository/binaryage/env-config/0.2.2/env-config-0.2.2.jar!/env_config/impl/coercers.cljc",1679776603000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/analyzer/impl/namespaces.cljc",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/core.clj",1690756440000,"jar:file:/Users/john/.m2/repository/binaryage/env-config/0.2.2/env-config-0.2.2.jar!/env_config/impl/types.cljc",1679776603000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/vendor/clojure/tools/reader.clj",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/analyzer/passes.cljc",1715719162000,"jar:file:/Users/john/.m2/repository/binaryage/devtools/0.9.7/devtools-0.9.7.jar!/devtools/defaults.clj",1725206106000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/source_map/base64.clj",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/vendor/clojure/tools/reader/impl/inspect.clj",1715719162000,"jar:file:/Users/john/.m2/repository/binaryage/devtools/0.9.7/devtools-0.9.7.jar!/devtools/oops.clj",1725206106000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/instant.clj",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/analyzer/impl.cljc",1715719162000,"jar:file:/Users/john/.m2/repository/binaryage/devtools/0.9.7/devtools-0.9.7.jar!/devtools/munging.clj",1725206106000,"jar:file:/Users/john/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/walk.clj",1690756440000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/core.cljc",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/set.clj",1690756440000,"jar:file:/Users/john/.m2/repository/binaryage/env-config/0.2.2/env-config-0.2.2.jar!/env_config/impl/logging.clj",1679776603000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/js_deps.cljc",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/pprint.cljc",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/java/io.clj",1690756440000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/vendor/clojure/data/json.clj",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/source_map/base64_vlq.clj",1715719162000,"jar:file:/Users/john/.m2/repository/binaryage/env-config/0.2.2/env-config-0.2.2.jar!/env_config/impl/report.cljc",1679776603000,"jar:file:/Users/john/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/string.clj",1690756440000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/externs.clj",1715719162000,"jar:file:/Users/john/.m2/repository/binaryage/env-config/0.2.2/env-config-0.2.2.jar!/env_config/impl/coerce.cljc",1679776603000,"jar:file:/Users/john/.m2/repository/binaryage/devtools/0.9.7/devtools-0.9.7.jar!/devtools/compiler.clj",1725206106000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",1,"^8",5,"^9",1,"^:",31],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E"],"^F",["^ ","^G","^H"],"^I",["^J",[]],"^K",["^ ","^G",["^ ","^L",["^M",[[]]],"^7",9,"^8",1,"^6","devtools/formatters/markup.clj","^N","^O","^P","^H","^Q",true]],"^N","^H","^R",["^ "],"^T",null,"^U",["^ ","^V","^V","^W","^W","^X","^X","^Y","^Y","^Z","^Z","^[","^Z","^E","^E","^10","^10"],"^11",["^J",["^12","^13"]],"~:shadow/js-access-global",["^J",["RegExp","Error"]],"^14",["^ ","^15","^V","^16","^V","^17","^X","^18","^V","^19","^V","^1:","^Y","^1;","^V","^1<","^W","^1=","^V","^1>","^V","^1?","^V","^1@","^V","^1A","^V","^1B","^W","^1C","^V","^1D","^Y","^1E","^X","^1F","^Y","^1G","^X","^1H","^Y","^1I","^V","^1J","^V","^1K","^V"],"~:defs",["^ ","~$<aligned-body>",["^ ","~:protocol-inline",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",117,"^8",7,"^9",117,"^:",21,"^L",["^M",["~$quote",["^M",[["~$markups-lists"]]]]]],"^N","^4P","^6","devtools/formatters/markup.cljs","^:",21,"~:method-params",["^M",[["^7H"]]],"~:protocol-impl",null,"~:arglists-meta",["^M",[null,null]],"^8",1,"~:variadic?",false,"^7",117,"~:ret-tag","~$cljs.core/IVector","^9",117,"~:max-fixed-arity",1,"~:fn-var",true,"^L",["^M",["^7G",["^M",[["^7H"]]]]]],"~$<native-reference>",["^ ","^7F",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",56,"^8",7,"^9",56,"^:",25,"^L",["^M",["^7G",["^M",[["~$object"]]]]]],"^N","^4B","^6","devtools/formatters/markup.cljs","^:",25,"^7I",["^M",[["^7R"]]],"^7J",null,"^7K",["^M",[null,null]],"^8",1,"^7L",false,"^7",56,"^7M","^7N","^9",56,"^7O",1,"^7P",true,"^L",["^M",["^7G",["^M",[["^7R"]]]]]],"~$<reference-surrogate>",["^ ","^7F",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",50,"^8",7,"^9",50,"^:",28,"^L",["^M",["^7G",["^M",[["~$&","~$args"]]]]],"~:top-fn",["^ ","^7L",true,"~:fixed-arity",0,"^7O",0,"^7I",[["^M",["^7T"]]],"^L",["^M",[["~$&","^7T"]]],"^7K",["^M",[null]]]],"^N","^4E","^6","devtools/formatters/markup.cljs","^:",28,"^7U",["^ ","^7L",true,"^7V",0,"^7O",0,"^7I",[["^M",["^7T"]]],"^L",["^M",[["~$&","^7T"]]],"^7K",["^M",[null]]],"^7I",[["^M",["^7T"]]],"^7J",null,"^7V",0,"^7K",["^M",[null]],"^8",1,"^7L",true,"~:methods",[["^ ","^7V",0,"^7L",true,"~:tag","~$cljs.core/LazySeq"]],"^7",50,"^7M","~$any","^9",50,"^7O",0,"^7P",true,"^L",["^M",[["~$&","^7T"]]]],"~$<keyword>",["^ ","^7F",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",75,"^8",7,"^9",75,"^:",16,"^L",["^M",["^7G",["^M",[["~$keyword"]]]]]],"^N","^4F","^6","devtools/formatters/markup.cljs","^:",16,"^7I",["^M",[["^80"]]],"^7J",null,"^7K",["^M",[null,null]],"^8",1,"^7L",false,"^7",75,"^7M","^7N","^9",75,"^7O",1,"^7P",true,"^L",["^M",["^7G",["^M",[["^80"]]]]]],"~$print-via-writer",["^ ","^7F",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",28,"^8",7,"^9",28,"^:",23,"^L",["^M",["^7G",["^M",[["~$value","~$tag","~$&",["~$max-level"]]]]]],"^7U",["^ ","^7L",true,"^7V",2,"^7O",2,"^7I",[["^M",["^82","^83",["^84"]]]],"^L",["^M",[["^82","^83","~$&",["^84"]]]],"^7K",["^M",[null]]]],"^N","^4O","^6","devtools/formatters/markup.cljs","^:",23,"^7U",["^ ","^7L",true,"^7V",2,"^7O",2,"^7I",[["^M",["^82","^83",["^84"]]]],"^L",["^M",[["^82","^83","~$&",["^84"]]]],"^7K",["^M",[null]]],"^7I",[["^M",["^82","^83",["^84"]]]],"^7J",null,"^7V",2,"^7K",["^M",[null]],"^8",1,"^7L",true,"^7W",[["^ ","^7V",2,"^7L",true,"^7X",["^J",[null,"^7Z"]]]],"^7",28,"^7M","^7Z","^9",28,"^7O",2,"^7P",true,"^L",["^M",[["^82","^83","~$&",["^84"]]]]],"~$<protocol-method-arities>",["^ ","^7F",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",286,"^8",7,"^9",286,"^:",32,"^L",["^M",["^7G",["^M",[["~$fns","~$&",["~$max-fns"]]]]]],"^7U",["^ ","^7L",true,"^7V",1,"^7O",1,"^7I",[["^M",["^86",["^87"]]]],"^L",["^M",[["^86","~$&",["^87"]]]],"^7K",["^M",[null]]]],"^N","^4J","^6","devtools/formatters/markup.cljs","^:",32,"^7U",["^ ","^7L",true,"^7V",1,"^7O",1,"^7I",[["^M",["^86",["^87"]]]],"^L",["^M",[["^86","~$&",["^87"]]]],"^7K",["^M",[null]]],"^7I",[["^M",["^86",["^87"]]]],"^7J",null,"^7V",1,"^7K",["^M",[null]],"^8",1,"^7L",true,"^7W",[["^ ","^7V",1,"^7L",true,"^7X","^7Y"]],"^7",286,"^7M","^7Z","^9",286,"^7O",1,"^7P",true,"^L",["^M",[["^86","~$&",["^87"]]]]],"~$<surrogate-header>",["^ ","^7F",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",403,"^8",7,"^9",403,"^:",25,"^L",["^M",["^7G",["^M",[["~$surrogate"]]]]]],"^N","^3:","^6","devtools/formatters/markup.cljs","^:",25,"^7I",["^M",[["^89"]]],"^7J",null,"^7K",["^M",[null,null]],"^8",1,"^7L",false,"^7",403,"^7M",["^J",[null,"^7Z"]],"^9",403,"^7O",1,"^7P",true,"^L",["^M",["^7G",["^M",[["^89"]]]]]],"~$<details>",["^ ","^7F",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",169,"^8",7,"^9",169,"^:",16,"^L",["^M",["^7G",["^M",[["^82","~$starting-index"]]]]]],"^N","^4V","^6","devtools/formatters/markup.cljs","^:",16,"^7I",["^M",[["^82","^8;"]]],"^7J",null,"^7K",["^M",[null,null]],"^8",1,"^7L",false,"^7",169,"^7M","~$clj","^9",169,"^7O",2,"^7P",true,"^L",["^M",["^7G",["^M",[["^82","^8;"]]]]]],"~$<more-protocols>",["^ ","^7F",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",323,"^8",7,"^9",323,"^:",23,"^L",["^M",["^7G",["^M",[["~$more-count"]]]]]],"^N","^3@","^6","devtools/formatters/markup.cljs","^:",23,"^7I",["^M",[["^8>"]]],"^7J",null,"^7K",["^M",[null,null]],"^8",1,"^7L",false,"^7",323,"^7M","^8<","^9",323,"^7O",1,"^7P",true,"^L",["^M",["^7G",["^M",[["^8>"]]]]]],"~$<field>",["^ ","^7F",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",338,"^8",7,"^9",338,"^:",14,"^L",["^M",["^7G",["^M",[["~$name","^82"]]]]]],"^N","^4W","^6","devtools/formatters/markup.cljs","^:",14,"^7I",["^M",[["^8@","^82"]]],"^7J",null,"^7K",["^M",[null,null]],"^8",1,"^7L",false,"^7",338,"^7M","^7N","^9",338,"^7O",2,"^7P",true,"^L",["^M",["^7G",["^M",[["^8@","^82"]]]]]],"~$<symbol>",["^ ","^7F",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",78,"^8",7,"^9",78,"^:",15,"^L",["^M",["^7G",["^M",[["~$symbol"]]]]]],"^N","^34","^6","devtools/formatters/markup.cljs","^:",15,"^7I",["^M",[["^8B"]]],"^7J",null,"^7K",["^M",[null,null]],"^8",1,"^7L",false,"^7",78,"^7M","^7N","^9",78,"^7O",1,"^7P",true,"^L",["^M",["^7G",["^M",[["^8B"]]]]]],"~$<fields-details>",["^ ","^7F",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",368,"^8",7,"^9",368,"^:",23,"^L",["^M",["^7G",["^M",[["~$fields","~$obj"]]]]]],"^N","^2F","^6","devtools/formatters/markup.cljs","^:",23,"^7I",["^M",[["^8D","^8E"]]],"^7J",null,"^7K",["^M",[null,null]],"^8",1,"^7L",false,"^7",368,"^7M","^7N","^9",368,"^7O",2,"^7P",true,"^L",["^M",["^7G",["^M",[["^8D","^8E"]]]]]],"~$<atomic>",["^ ","^7F",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",422,"^8",7,"^9",422,"^:",15,"^L",["^M",["^7G",["^M",[["^82"]]]]]],"^N","^2D","^6","devtools/formatters/markup.cljs","^:",15,"^7I",["^M",[["^82"]]],"^7J",null,"^7K",["^M",[null,null]],"^8",1,"^7L",false,"^7",422,"^7M",["^J",["^8<","^7N","^7Y","~$clj-nil"]],"^9",422,"^7O",1,"^7P",true,"^L",["^M",["^7G",["^M",[["^82"]]]]]],"~$<string>",["^ ","^7F",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",88,"^8",7,"^9",88,"^:",15,"^L",["^M",["^7G",["^M",[["~$string"]]]]]],"^N","^2B","^6","devtools/formatters/markup.cljs","^:",15,"^7I",["^M",[["^8I"]]],"^7J",null,"^7K",["^M",[null,null]],"^8",1,"^7L",false,"^7",88,"^7M","^8<","^9",88,"^7O",1,"^7P",true,"^L",["^M",["^7G",["^M",[["^8I"]]]]]],"~$<standard-body>",["^ ","^7F",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",124,"^8",7,"^9",124,"^:",22,"^L",["^M",["^7G",["^M",[["^7H","~$&",["~$no-margin?"]]]]]],"^7U",["^ ","^7L",true,"^7V",1,"^7O",1,"^7I",[["^M",["^7H",["^8K"]]]],"^L",["^M",[["^7H","~$&",["^8K"]]]],"^7K",["^M",[null]]]],"^N","^2M","^6","devtools/formatters/markup.cljs","^:",22,"^7U",["^ ","^7L",true,"^7V",1,"^7O",1,"^7I",[["^M",["^7H",["^8K"]]]],"^L",["^M",[["^7H","~$&",["^8K"]]]],"^7K",["^M",[null]]],"^7I",[["^M",["^7H",["^8K"]]]],"^7J",null,"^7V",1,"^7K",["^M",[null]],"^8",1,"^7L",true,"^7W",[["^ ","^7V",1,"^7L",true,"^7X","^7Y"]],"^7",124,"^7M","^7Z","^9",124,"^7O",1,"^7P",true,"^L",["^M",[["^7H","~$&",["^8K"]]]]],"~$<type-basis>",["^ ","^7F",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",253,"^8",7,"^9",253,"^:",19,"^L",["^M",["^7G",["^M",[["~$basis"]]]]]],"^N","^2K","^6","devtools/formatters/markup.cljs","^:",19,"^7I",["^M",[["^8M"]]],"^7J",null,"^7K",["^M",[null,null]],"^8",1,"^7L",false,"^7",253,"^7M","^7Y","^9",253,"^7O",1,"^7P",true,"^L",["^M",["^7G",["^M",[["^8M"]]]]]],"~$*markup-db*",["^ ","^5",["^ ","^6","devtools/formatters/markup.cljs","^7",436,"^8",16,"^9",436,"^:",27,"~:dynamic",true],"^N","^3A","^6","devtools/formatters/markup.cljs","^:",27,"^8",1,"^8O",true,"^7",436,"^9",436,"^7X","^7Z"],"~$print-via-protocol",["^ ","^7F",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",31,"^8",7,"^9",31,"^:",25,"^L",["^M",["^7G",["^M",[["^82","^83","~$&",["^84"]]]]]],"^7U",["^ ","^7L",true,"^7V",2,"^7O",2,"^7I",[["^M",["^82","^83",["^84"]]]],"^L",["^M",[["^82","^83","~$&",["^84"]]]],"^7K",["^M",[null]]]],"^N","^3W","^6","devtools/formatters/markup.cljs","^:",25,"^7U",["^ ","^7L",true,"^7V",2,"^7O",2,"^7I",[["^M",["^82","^83",["^84"]]]],"^L",["^M",[["^82","^83","~$&",["^84"]]]],"^7K",["^M",[null]]],"^7I",[["^M",["^82","^83",["^84"]]]],"^7J",null,"^7V",2,"^7K",["^M",[null]],"^8",1,"^7L",true,"^7W",[["^ ","^7V",2,"^7L",true,"^7X",["^J",[null,"^7Z"]]]],"^7",31,"^7M","^7Z","^9",31,"^7O",2,"^7P",true,"^L",["^M",[["^82","^83","~$&",["^84"]]]]],"~$print-with",["^ ","^7F",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",21,"^8",7,"^9",21,"^:",17,"^L",["^M",["^7G",["^M",[["~$method","^82","^83","~$&",["^84"]]]]]],"^7U",["^ ","^7L",true,"^7V",3,"^7O",3,"^7I",[["^M",["^8R","^82","^83",["^84"]]]],"^L",["^M",[["^8R","^82","^83","~$&",["^84"]]]],"^7K",["^M",[null]]]],"^N","^3U","^6","devtools/formatters/markup.cljs","^:",17,"^7U",["^ ","^7L",true,"^7V",3,"^7O",3,"^7I",[["^M",["^8R","^82","^83",["^84"]]]],"^L",["^M",[["^8R","^82","^83","~$&",["^84"]]]],"^7K",["^M",[null]]],"^7I",[["^M",["^8R","^82","^83",["^84"]]]],"^7J",null,"^7V",3,"^7K",["^M",[null]],"^8",1,"^7L",true,"^7W",[["^ ","^7V",3,"^7L",true,"^7X",["^J",[null,"^7Z"]]]],"^7",21,"^7M","^7Z","^9",21,"^7O",3,"^7P",true,"^L",["^M",[["^8R","^82","^83","~$&",["^84"]]]]],"~$<bool>",["^ ","^7F",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",72,"^8",7,"^9",72,"^:",13,"^L",["^M",["^7G",["^M",[["~$bool"]]]]]],"^N","^3T","^6","devtools/formatters/markup.cljs","^:",13,"^7I",["^M",[["^8T"]]],"^7J",null,"^7K",["^M",[null,null]],"^8",1,"^7L",false,"^7",72,"^7M","^7N","^9",72,"^7O",1,"^7P",true,"^L",["^M",["^7G",["^M",[["^8T"]]]]]],"~$<standalone-type>",["^ ","^7F",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",275,"^8",7,"^9",275,"^:",24,"^L",["^M",["^7G",["^M",[["~$constructor-fn","~$&",["~$header-tag"]]]]]],"^7U",["^ ","^7L",true,"^7V",1,"^7O",1,"^7I",[["^M",["^8V",["^8W"]]]],"^L",["^M",[["^8V","~$&",["^8W"]]]],"^7K",["^M",[null]]]],"^N","^2>","^6","devtools/formatters/markup.cljs","^:",24,"^7U",["^ ","^7L",true,"^7V",1,"^7O",1,"^7I",[["^M",["^8V",["^8W"]]]],"^L",["^M",[["^8V","~$&",["^8W"]]]],"^7K",["^M",[null]]],"^7I",[["^M",["^8V",["^8W"]]]],"^7J",null,"^7V",1,"^7K",["^M",[null]],"^8",1,"^7L",true,"^7W",[["^ ","^7V",1,"^7L",true,"^7X","^7N"]],"^7",275,"^7M","^7Z","^9",275,"^7O",1,"^7P",true,"^L",["^M",[["^8V","~$&",["^8W"]]]]],"~$<preview>",["^ ","^7F",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",109,"^8",7,"^9",109,"^:",16,"^L",["^M",["^7G",["^M",[["^82"]]]]]],"^N","^2X","^6","devtools/formatters/markup.cljs","^:",16,"^7I",["^M",[["^82"]]],"^7J",null,"^7K",["^M",[null,null]],"^8",1,"^7L",false,"^7",109,"^7M",["^J",[null,"^7Z"]],"^9",109,"^7O",1,"^7P",true,"^L",["^M",["^7G",["^M",[["^82"]]]]]],"~$<header>",["^ ","^7F",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",400,"^8",7,"^9",400,"^:",15,"^L",["^M",["^7G",["^M",[["^82"]]]]]],"^N","^42","^6","devtools/formatters/markup.cljs","^:",15,"^7I",["^M",[["^82"]]],"^7J",null,"^7K",["^M",[null,null]],"^8",1,"^7L",false,"^7",400,"^7M","^7Y","^9",400,"^7O",1,"^7P",true,"^L",["^M",["^7G",["^M",[["^82"]]]]]],"~$<protocol-method>",["^ ","^7F",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",299,"^8",7,"^9",299,"^:",24,"^L",["^M",["^7G",["^M",[["^8@","~$arities"]]]]]],"^N","^43","^6","devtools/formatters/markup.cljs","^:",24,"^7I",["^M",[["^8@","^8["]]],"^7J",null,"^7K",["^M",[null,null]],"^8",1,"^7L",false,"^7",299,"^7M","^7N","^9",299,"^7O",2,"^7P",true,"^L",["^M",["^7G",["^M",[["^8@","^8["]]]]]],"~$<cljs-land>",["^ ","^7F",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",65,"^8",7,"^9",65,"^:",18,"^L",["^M",["^7G",["^M",[["~$&","~$children"]]]]],"^7U",["^ ","^7L",true,"^7V",0,"^7O",0,"^7I",[["^M",["^91"]]],"^L",["^M",[["~$&","^91"]]],"^7K",["^M",[null]]]],"^N","^29","^6","devtools/formatters/markup.cljs","^:",18,"^7U",["^ ","^7L",true,"^7V",0,"^7O",0,"^7I",[["^M",["^91"]]],"^L",["^M",[["~$&","^91"]]],"^7K",["^M",[null]]],"^7I",[["^M",["^91"]]],"^7J",null,"^7V",0,"^7K",["^M",[null]],"^8",1,"^7L",true,"^7W",[["^ ","^7V",0,"^7L",true,"^7X","^7Y"]],"^7",65,"^7M","^7Z","^9",65,"^7O",0,"^7P",true,"^L",["^M",[["~$&","^91"]]]],"~$<type-basis-item>",["^ ","^7F",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",250,"^8",7,"^9",250,"^:",24,"^L",["^M",["^7G",["^M",[["~$basis-item"]]]]]],"^N","^28","^6","devtools/formatters/markup.cljs","^:",24,"^7I",["^M",[["^93"]]],"^7J",null,"^7K",["^M",[null,null]],"^8",1,"^7L",false,"^7",250,"^7M","^7N","^9",250,"^7O",1,"^7P",true,"^L",["^M",["^7G",["^M",[["^93"]]]]]],"~$<protocol-method-arities-details>",["^ ","^7F",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",283,"^8",7,"^9",283,"^:",40,"^L",["^M",["^7G",["^M",[["^86"]]]]]],"^N","^35","^6","devtools/formatters/markup.cljs","^:",40,"^7I",["^M",[["^86"]]],"^7J",null,"^7K",["^M",[null,null]],"^8",1,"^7L",false,"^7",283,"^7M","^7N","^9",283,"^7O",1,"^7P",true,"^L",["^M",["^7G",["^M",[["^86"]]]]]],"~$<fields-details-row>",["^ ","^7F",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",345,"^8",7,"^9",345,"^:",27,"^L",["^M",["^7G",["^M",[["~$field"]]]]]],"^N","^2L","^6","devtools/formatters/markup.cljs","^:",27,"^7I",["^M",[["^96"]]],"^7J",null,"^7K",["^M",[null,null]],"^8",1,"^7L",false,"^7",345,"^7M","^7N","^9",345,"^7O",1,"^7P",true,"^L",["^M",["^7G",["^M",[["^96"]]]]]],"~$<standard-body-reference>",["^ ","^7F",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",133,"^8",7,"^9",133,"^:",32,"^L",["^M",["^7G",["^M",[["~$o"]]]]]],"^N","^36","^6","devtools/formatters/markup.cljs","^:",32,"^7I",["^M",[["~$o"]]],"^7J",null,"^7K",["^M",[null,null]],"^8",1,"^7L",false,"^7",133,"^7M","^7Y","^9",133,"^7O",1,"^7P",true,"^L",["^M",["^7G",["^M",[["~$o"]]]]]],"~$<surrogate-body>",["^ ","^7F",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",414,"^8",7,"^9",414,"^:",23,"^L",["^M",["^7G",["^M",[["^89"]]]]]],"^N","^2G","^6","devtools/formatters/markup.cljs","^:",23,"^7I",["^M",[["^89"]]],"^7J",null,"^7K",["^M",[null,null]],"^8",1,"^7L",false,"^7",414,"^7M",["^J",["^8<","^7Z","^8G"]],"^9",414,"^7O",1,"^7P",true,"^L",["^M",["^7G",["^M",[["^89"]]]]]],"~$get-markup-db",["^ ","^7F",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",448,"^8",7,"^9",448,"^:",20,"^L",["^M",["^7G",["^M",[[]]]]]],"^N","^32","^6","devtools/formatters/markup.cljs","^:",20,"^7I",["^M",[[]]],"^7J",null,"^7K",["^M",[null,null]],"^8",1,"^7L",false,"^7",448,"^7M","^7Z","^9",448,"^7O",0,"^7P",true,"^L",["^M",["^7G",["^M",[[]]]]]],"~$<expandable>",["^ ","^7F",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",36,"^8",7,"^9",36,"^:",19,"^L",["^M",["^7G",["^M",[["~$&","^91"]]]]],"^7U",["^ ","^7L",true,"^7V",0,"^7O",0,"^7I",[["^M",["^91"]]],"^L",["^M",[["~$&","^91"]]],"^7K",["^M",[null]]]],"^N","^44","^6","devtools/formatters/markup.cljs","^:",19,"^7U",["^ ","^7L",true,"^7V",0,"^7O",0,"^7I",[["^M",["^91"]]],"^L",["^M",[["~$&","^91"]]],"^7K",["^M",[null]]],"^7I",[["^M",["^91"]]],"^7J",null,"^7V",0,"^7K",["^M",[null]],"^8",1,"^7L",true,"^7W",[["^ ","^7V",0,"^7L",true,"^7X","^7N"]],"^7",36,"^7M","^7Z","^9",36,"^7O",0,"^7P",true,"^L",["^M",[["~$&","^91"]]]],"~$<type>",["^ ","^7F",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",266,"^8",7,"^9",266,"^:",13,"^L",["^M",["^7G",["^M",[["^8V","~$&",["^8W"]]]]]],"^7U",["^ ","^7L",true,"^7V",1,"^7O",1,"^7I",[["^M",["^8V",["^8W"]]]],"^L",["^M",[["^8V","~$&",["^8W"]]]],"^7K",["^M",[null]]]],"^N","^39","^6","devtools/formatters/markup.cljs","^:",13,"^7U",["^ ","^7L",true,"^7V",1,"^7O",1,"^7I",[["^M",["^8V",["^8W"]]]],"^L",["^M",[["^8V","~$&",["^8W"]]]],"^7K",["^M",[null]]],"^7I",[["^M",["^8V",["^8W"]]]],"^7J",null,"^7V",1,"^7K",["^M",[null]],"^8",1,"^7L",true,"^7W",[["^ ","^7V",1,"^7L",true,"^7X","^7N"]],"^7",266,"^7M","^7Z","^9",266,"^7O",1,"^7P",true,"^L",["^M",[["^8V","~$&",["^8W"]]]]],"~$<protocol-method-arity>",["^ ","^7F",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",280,"^8",7,"^9",280,"^:",30,"^L",["^M",["^7G",["^M",[["~$arity-fn"]]]]]],"^N","^38","^6","devtools/formatters/markup.cljs","^:",30,"^7I",["^M",[["^9="]]],"^7J",null,"^7K",["^M",[null,null]],"^8",1,"^7L",false,"^7",280,"^7M","^7Y","^9",280,"^7O",1,"^7P",true,"^L",["^M",["^7G",["^M",[["^9="]]]]]],"~$<raw-surrogate>",["^ ","^7F",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",40,"^8",7,"^9",40,"^:",22,"^L",["^M",["^7G",["^M",[["~$&","^7T"]]]]],"^7U",["^ ","^7L",true,"^7V",0,"^7O",0,"^7I",[["^M",["^7T"]]],"^L",["^M",[["~$&","^7T"]]],"^7K",["^M",[null]]]],"^N","^4K","^6","devtools/formatters/markup.cljs","^:",22,"^7U",["^ ","^7L",true,"^7V",0,"^7O",0,"^7I",[["^M",["^7T"]]],"^L",["^M",[["~$&","^7T"]]],"^7K",["^M",[null]]],"^7I",[["^M",["^7T"]]],"^7J",null,"^7V",0,"^7K",["^M",[null]],"^8",1,"^7L",true,"^7W",[["^ ","^7V",0,"^7L",true,"^7X","^7Y"]],"^7",40,"^7M","^7Z","^9",40,"^7O",0,"^7P",true,"^L",["^M",[["~$&","^7T"]]]],"~$<type-details>",["^ ","^7F",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",258,"^8",7,"^9",258,"^:",21,"^L",["^M",["^7G",["^M",[["^8V","^1M","~$_name","^8M"]]]]]],"^N","^37","^6","devtools/formatters/markup.cljs","^:",21,"^7I",["^M",[["^8V","^1M","^9@","^8M"]]],"^7J",null,"^7K",["^M",[null,null]],"^8",1,"^7L",false,"^7",258,"^7M","^7N","^9",258,"^7O",4,"^7P",true,"^L",["^M",["^7G",["^M",[["^8V","^1M","^9@","^8M"]]]]]],"~$<list>",["^ ","^7F",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",181,"^8",7,"^9",181,"^:",13,"^L",["^M",["^7G",["^M",[["~$items","~$max-count","~$&",["~$opts"]]]]]],"^7U",["^ ","^7L",true,"^7V",2,"^7O",2,"^7I",[["^M",["^9B","^9C",["^9D"]]]],"^L",["^M",[["^9B","^9C","~$&",["^9D"]]]],"^7K",["^M",[null]]]],"^N","^4G","^6","devtools/formatters/markup.cljs","^:",13,"^7U",["^ ","^7L",true,"^7V",2,"^7O",2,"^7I",[["^M",["^9B","^9C",["^9D"]]]],"^L",["^M",[["^9B","^9C","~$&",["^9D"]]]],"^7K",["^M",[null]]],"^7I",[["^M",["^9B","^9C",["^9D"]]]],"^7J",null,"^7V",2,"^7K",["^M",[null]],"^8",1,"^7L",true,"^7W",[["^ ","^7V",2,"^7L",true,"^7X","^7Y"]],"^7",181,"^7M","^7Z","^9",181,"^7O",2,"^7P",true,"^L",["^M",[["^9B","^9C","~$&",["^9D"]]]]],"~$<meta-wrapper>",["^ ","^7F",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",210,"^8",7,"^9",210,"^:",21,"^L",["^M",["^7G",["^M",[["~$metadata","~$&","^91"]]]]],"^7U",["^ ","^7L",true,"^7V",1,"^7O",1,"^7I",[["^M",["^9F","^91"]]],"^L",["^M",[["^9F","~$&","^91"]]],"^7K",["^M",[null]]]],"^N","^4H","^6","devtools/formatters/markup.cljs","^:",21,"^7U",["^ ","^7L",true,"^7V",1,"^7O",1,"^7I",[["^M",["^9F","^91"]]],"^L",["^M",[["^9F","~$&","^91"]]],"^7K",["^M",[null]]],"^7I",[["^M",["^9F","^91"]]],"^7J",null,"^7V",1,"^7K",["^M",[null]],"^8",1,"^7L",true,"^7W",[["^ ","^7V",1,"^7L",true,"^7X","^7Y"]],"^7",210,"^7M","^7Z","^9",210,"^7O",1,"^7P",true,"^L",["^M",[["^9F","~$&","^91"]]]],"~$<protocol>",["^ ","^7F",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",314,"^8",7,"^9",314,"^:",17,"^L",["^M",["^7G",["^M",[["^8E","~$protocol","~$&",["^83"]]]]]],"^7U",["^ ","^7L",true,"^7V",2,"^7O",2,"^7I",[["^M",["^8E","^9H",["^83"]]]],"^L",["^M",[["^8E","^9H","~$&",["^83"]]]],"^7K",["^M",[null]]]],"^N","^3F","^6","devtools/formatters/markup.cljs","^:",17,"^7U",["^ ","^7L",true,"^7V",2,"^7O",2,"^7I",[["^M",["^8E","^9H",["^83"]]]],"^L",["^M",[["^8E","^9H","~$&",["^83"]]]],"^7K",["^M",[null]]],"^7I",[["^M",["^8E","^9H",["^83"]]]],"^7J",null,"^7V",2,"^7K",["^M",[null]],"^8",1,"^7L",true,"^7W",[["^ ","^7V",2,"^7L",true,"^7X","^8<"]],"^7",314,"^7M","^7Z","^9",314,"^7O",2,"^7P",true,"^L",["^M",[["^8E","^9H","~$&",["^83"]]]]],"~$<index>",["^ ","^7F",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",138,"^8",7,"^9",138,"^:",14,"^L",["^M",["^7G",["^M",[["^82"]]]]]],"^N","^3D","^6","devtools/formatters/markup.cljs","^:",14,"^7I",["^M",[["^82"]]],"^7J",null,"^7K",["^M",[null,null]],"^8",1,"^7L",false,"^7",138,"^7M","^7N","^9",138,"^7O",1,"^7P",true,"^L",["^M",["^7G",["^M",[["^82"]]]]]],"~$<surrogate>",["^ ","^7F",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",43,"^8",7,"^9",43,"^:",18,"^L",["^M",["^7G",["^M",[["~$&",["^7R","~$header","~$body","~$start-index"]]]]]],"^7U",["^ ","^7L",true,"^7V",0,"^7O",0,"^7I",[["^M",[["^7R","^9K","^9L","^9M"]]]],"^L",["^M",[["~$&",["^7R","^9K","^9L","^9M"]]]],"^7K",["^M",[null]]]],"^N","^30","^6","devtools/formatters/markup.cljs","^:",18,"^7U",["^ ","^7L",true,"^7V",0,"^7O",0,"^7I",[["^M",[["^7R","^9K","^9L","^9M"]]]],"^L",["^M",[["~$&",["^7R","^9K","^9L","^9M"]]]],"^7K",["^M",[null]]],"^7I",[["^M",[["^7R","^9K","^9L","^9M"]]]],"^7J",null,"^7V",0,"^7K",["^M",[null]],"^8",1,"^7L",true,"^7W",[["^ ","^7V",0,"^7L",true,"^7X","^7Y"]],"^7",43,"^7M","^7Z","^9",43,"^7O",0,"^7P",true,"^L",["^M",[["~$&",["^7R","^9K","^9L","^9M"]]]]],"~$<protocols-list>",["^ ","^7F",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",327,"^8",7,"^9",327,"^:",23,"^L",["^M",["^7G",["^M",[["^8E","~$protocols","~$&",["~$max-protocols"]]]]]],"^7U",["^ ","^7L",true,"^7V",2,"^7O",2,"^7I",[["^M",["^8E","^9O",["^9P"]]]],"^L",["^M",[["^8E","^9O","~$&",["^9P"]]]],"^7K",["^M",[null]]]],"^N","^3B","^6","devtools/formatters/markup.cljs","^:",23,"^7U",["^ ","^7L",true,"^7V",2,"^7O",2,"^7I",[["^M",["^8E","^9O",["^9P"]]]],"^L",["^M",[["^8E","^9O","~$&",["^9P"]]]],"^7K",["^M",[null]]],"^7I",[["^M",["^8E","^9O",["^9P"]]]],"^7J",null,"^7V",2,"^7K",["^M",[null]],"^8",1,"^7L",true,"^7W",[["^ ","^7V",2,"^7L",true,"^7X","^7Y"]],"^7",327,"^7M","^7Z","^9",327,"^7O",2,"^7P",true,"^L",["^M",[["^8E","^9O","~$&",["^9P"]]]]],"~$<meta>",["^ ","^7F",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",205,"^8",7,"^9",205,"^:",13,"^L",["^M",["^7G",["^M",[["^9F"]]]]]],"^N","^3K","^6","devtools/formatters/markup.cljs","^:",13,"^7I",["^M",[["^9F"]]],"^7J",null,"^7K",["^M",[null,null]],"^8",1,"^7L",false,"^7",205,"^7M","^7N","^9",205,"^7O",1,"^7P",true,"^L",["^M",["^7G",["^M",[["^9F"]]]]]],"~$<instance>",["^ ","^7F",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",379,"^8",7,"^9",379,"^:",17,"^L",["^M",["^7G",["^M",[["^82"]]]]]],"^N","^3H","^6","devtools/formatters/markup.cljs","^:",17,"^7I",["^M",[["^82"]]],"^7J",null,"^7K",["^M",[null,null]],"^8",1,"^7L",false,"^7",379,"^7M","^7N","^9",379,"^7O",1,"^7P",true,"^L",["^M",["^7G",["^M",[["^82"]]]]]],"~$<reference>",["^ ","^7F",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",47,"^8",7,"^9",47,"^:",18,"^L",["^M",["^7G",["^M",[["~$&","^7T"]]]]],"^7U",["^ ","^7L",true,"^7V",0,"^7O",0,"^7I",[["^M",["^7T"]]],"^L",["^M",[["~$&","^7T"]]],"^7K",["^M",[null]]]],"^N","^3Q","^6","devtools/formatters/markup.cljs","^:",18,"^7U",["^ ","^7L",true,"^7V",0,"^7O",0,"^7I",[["^M",["^7T"]]],"^L",["^M",[["~$&","^7T"]]],"^7K",["^M",[null]]],"^7I",[["^M",["^7T"]]],"^7J",null,"^7V",0,"^7K",["^M",[null]],"^8",1,"^7L",true,"^7W",[["^ ","^7V",0,"^7L",true,"^7X","^7Y"]],"^7",47,"^7M","^7Z","^9",47,"^7O",0,"^7P",true,"^L",["^M",[["~$&","^7T"]]]],"~$<function-details>",["^ ","^7F",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",215,"^8",7,"^9",215,"^:",25,"^L",["^M",["^7G",["^M",[["~$fn-obj","^1M","^9@","^8[","~$prefix"]]]]]],"^N","^3S","^6","devtools/formatters/markup.cljs","^:",25,"^7I",["^M",[["^9U","^1M","^9@","^8[","^9V"]]],"^7J",null,"^7K",["^M",[null,null]],"^8",1,"^7L",false,"^7",215,"^7M","^7N","^9",215,"^7O",5,"^7P",true,"^L",["^M",["^7G",["^M",[["^9U","^1M","^9@","^8[","^9V"]]]]]],"~$<function>",["^ ","^7F",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",232,"^8",7,"^9",232,"^:",17,"^L",["^M",["^7G",["^M",[["^9U"]]]]]],"^N","^3Y","^6","devtools/formatters/markup.cljs","^:",17,"^7I",["^M",[["^9U"]]],"^7J",null,"^7K",["^M",[null,null]],"^8",1,"^7L",false,"^7",232,"^7M","^7Y","^9",232,"^7O",1,"^7P",true,"^L",["^M",["^7G",["^M",[["^9U"]]]]]],"~$<arities>",["^ ","^7F",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",226,"^8",7,"^9",226,"^:",16,"^L",["^M",["^7G",["^M",[["^8["]]]]]],"^N","^2O","^6","devtools/formatters/markup.cljs","^:",16,"^7I",["^M",[["^8["]]],"^7J",null,"^7K",["^M",[null,null]],"^8",1,"^7L",false,"^7",226,"^7M","^7N","^9",226,"^7O",1,"^7P",true,"^L",["^M",["^7G",["^M",[["^8["]]]]]],"~$<header-expander>",["^ ","^7F",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",60,"^8",7,"^9",60,"^:",24,"^L",["^M",["^7G",["^M",[["^7R"]]]]]],"^N","^2H","^6","devtools/formatters/markup.cljs","^:",24,"^7I",["^M",[["^7R"]]],"^7J",null,"^7K",["^M",[null,null]],"^8",1,"^7L",false,"^7",60,"^7M","^7Y","^9",60,"^7O",1,"^7P",true,"^L",["^M",["^7G",["^M",[["^7R"]]]]]],"~$<list-details>",["^ ","^7F",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",178,"^8",7,"^9",178,"^:",21,"^L",["^M",["^7G",["^M",[["^9B","~$_opts"]]]]]],"^N","^4L","^6","devtools/formatters/markup.cljs","^:",21,"^7I",["^M",[["^9B","^9["]]],"^7J",null,"^7K",["^M",[null,null]],"^8",1,"^7L",false,"^7",178,"^7M","^7N","^9",178,"^7O",2,"^7P",true,"^L",["^M",["^7G",["^M",[["^9B","^9["]]]]]],"~$<circular-reference>",["^ ","^7F",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",53,"^8",7,"^9",53,"^:",27,"^L",["^M",["^7G",["^M",[["~$&","^91"]]]]],"^7U",["^ ","^7L",true,"^7V",0,"^7O",0,"^7I",[["^M",["^91"]]],"^L",["^M",[["~$&","^91"]]],"^7K",["^M",[null]]]],"^N","^41","^6","devtools/formatters/markup.cljs","^:",27,"^7U",["^ ","^7L",true,"^7V",0,"^7O",0,"^7I",[["^M",["^91"]]],"^L",["^M",[["~$&","^91"]]],"^7K",["^M",[null]]],"^7I",[["^M",["^91"]]],"^7J",null,"^7V",0,"^7K",["^M",[null]],"^8",1,"^7L",true,"^7W",[["^ ","^7V",0,"^7L",true,"^7X","^7Y"]],"^7",53,"^7M","^7Z","^9",53,"^7O",0,"^7P",true,"^L",["^M",[["~$&","^91"]]]],"~$<surrogate-target>",["^ ","^7F",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",407,"^8",7,"^9",407,"^:",25,"^L",["^M",["^7G",["^M",[["^89"]]]]]],"^N","^4:","^6","devtools/formatters/markup.cljs","^:",25,"^7I",["^M",[["^89"]]],"^7J",null,"^7K",["^M",[null,null]],"^8",1,"^7L",false,"^7",407,"^7M","^8<","^9",407,"^7O",1,"^7P",true,"^L",["^M",["^7G",["^M",[["^89"]]]]]],"~$body-line",["^ ","^7F",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",141,"^8",8,"^9",141,"^:",17,"~:private",true,"^L",["^M",["^7G",["^M",[["~$index","^82"]]]]]],"^:3",true,"^N","^2E","^6","devtools/formatters/markup.cljs","^:",17,"^7I",["^M",[["^:4","^82"]]],"^7J",null,"^7K",["^M",[null,null]],"^8",1,"^7L",false,"^7",141,"^7M","^7N","^9",141,"^7O",2,"^7P",true,"^L",["^M",["^7G",["^M",[["^:4","^82"]]]]]],"~$body-lines",["^ ","^7F",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",155,"^8",8,"^9",155,"^:",18,"^:3",true,"^L",["^M",["^7G",["^M",[["^82","^8;"]]]]]],"^:3",true,"^N","^2C","^6","devtools/formatters/markup.cljs","^:",18,"^7I",["^M",[["^82","^8;"]]],"^7J",null,"^7K",["^M",[null,null]],"^8",1,"^7L",false,"^7",155,"^7M",["^J",["^8<","^7N"]],"^9",155,"^7O",2,"^7P",true,"^L",["^M",["^7G",["^M",[["^82","^8;"]]]]]],"~$<fields>",["^ ","^7F",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",356,"^8",7,"^9",356,"^:",15,"^L",["^M",["^7G",["^M",[["^8D","~$&",["~$max-fields"]]]]]],"^7U",["^ ","^7L",true,"^7V",1,"^7O",1,"^7I",[["^M",["^8D",["^:7"]]]],"^L",["^M",[["^8D","~$&",["^:7"]]]],"^7K",["^M",[null]]]],"^N","^47","^6","devtools/formatters/markup.cljs","^:",15,"^7U",["^ ","^7L",true,"^7V",1,"^7O",1,"^7I",[["^M",["^8D",["^:7"]]]],"^L",["^M",[["^8D","~$&",["^:7"]]]],"^7K",["^M",[null]]],"^7I",[["^M",["^8D",["^:7"]]]],"^7J",null,"^7V",1,"^7K",["^M",[null]],"^8",1,"^7L",true,"^7W",[["^ ","^7V",1,"^7L",true,"^7X","^8<"]],"^7",356,"^7M","^7Z","^9",356,"^7O",1,"^7P",true,"^L",["^M",[["^8D","~$&",["^:7"]]]]],"~$<nil>",["^ ","^7F",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",68,"^8",7,"^9",68,"^:",12,"^L",["^M",["^7G",["^M",[[]]]]]],"^N","^40","^6","devtools/formatters/markup.cljs","^:",12,"^7I",["^M",[[]]],"^7J",null,"^7K",["^M",[null,null]],"^8",1,"^7L",false,"^7",68,"^7M","^7N","^9",68,"^7O",0,"^7P",true,"^L",["^M",["^7G",["^M",[[]]]]]],"~$<body>",["^ ","^7F",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",114,"^8",7,"^9",114,"^:",13,"^L",["^M",["^7G",["^M",[["~$markup"]]]]]],"^N","^46","^6","devtools/formatters/markup.cljs","^:",13,"^7I",["^M",[["^::"]]],"^7J",null,"^7K",["^M",[null,null]],"^8",1,"^7L",false,"^7",114,"^7M","^7N","^9",114,"^7O",1,"^7P",true,"^L",["^M",["^7G",["^M",[["^::"]]]]]],"~$<number>",["^ ","^7F",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",81,"^8",7,"^9",81,"^:",15,"^L",["^M",["^7G",["^M",[["~$number"]]]]]],"^N","^4D","^6","devtools/formatters/markup.cljs","^:",15,"^7I",["^M",[["^:<"]]],"^7J",null,"^7K",["^M",[null,null]],"^8",1,"^7L",false,"^7",81,"^7M","^7N","^9",81,"^7O",1,"^7P",true,"^L",["^M",["^7G",["^M",[["^:<"]]]]]],"~$<protocol-details>",["^ ","^7F",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",305,"^8",7,"^9",305,"^:",25,"^L",["^M",["^7G",["^M",[["^8E","^1M","^9@","~$selector","~$_fast?"]]]]]],"^N","^4A","^6","devtools/formatters/markup.cljs","^:",25,"^7I",["^M",[["^8E","^1M","^9@","^:>","^:?"]]],"^7J",null,"^7K",["^M",[null,null]],"^8",1,"^7L",false,"^7",305,"^7M","^7N","^9",305,"^7O",5,"^7P",true,"^L",["^M",["^7G",["^M",[["^8E","^1M","^9@","^:>","^:?"]]]]]],"~$prepare-body-lines",["^ ","^7F",null,"^5",["^ ","^6","devtools/formatters/markup.cljs","^7",147,"^8",8,"^9",147,"^:",26,"^:3",true,"^L",["^M",["^7G",["^M",[["~$data","^8;"]]]]]],"^:3",true,"^N","^4=","^6","devtools/formatters/markup.cljs","^:",26,"^7I",["^M",[["^:A","^8;"]]],"^7J",null,"^7K",["^M",[null,null]],"^8",1,"^7L",false,"^7",147,"^7M",["^J",["^8<","^7N"]],"^9",147,"^7O",2,"^7P",true,"^L",["^M",["^7G",["^M",[["^:A","^8;"]]]]]]],"^13",["^ ","^H","^H","^E","^E","^Z","^Z","^[","^Z"],"~:cljs.analyzer/constants",["^ ","^11",["^J",["~:protocol-method-arities-header-close-symbol","~:protocol-details","~:max-number-body-items","~:meta-reference-tag","~:instance-custom-printing-tag","~:type-header-background","~:body-field-symbol","~:body-items-more-tag","~:line-index-separator","~:new-line-string-replacer","~:selector","~:more-fields-symbol","~:body-field-value-spacer","~:standard-body","~:protocol-background","~:protocols-icon","~:standalone-type","~:standard-ol-no-margin-tag","~:symbol-tag","~:render-keywords","~:fn-header-tag","~:keyword-tag","~:protocol-method-arities","~:surrogate","~:fields-header-tag","^5","~:aligned-body","~:body-items-more-label","~:nil-tag","~:index","~:instance","~:float-tag","~:protocol-ns-name-tag","~:protocol-method","~:protocol-method-arities-details","~:protocol-method-arities-more-symbol","~:number","~:index-tag","~:rest-symbol","~:protocol","~:protocols-list-close-symbol","~:protocol-name-tag","~:protocol-method-arity","~:more-protocols","~:instance-header-background","~:body-tag","~:cljs-land-tag","~:max-list-protocols","~:string-abbreviation-marker","~:native-icon","~:instance-body-fields-table-tag","~:render-symbols","^P","~:symbol","~:fields-details-row","^N","~:type-name-tag","~:list-separator","~:header-field-value-spacer","~:fast-protocol-tag","~:render-strings","~:standalone-type-tag","~:type-header-tag","~:lambda-icon","~:render-functions","~:fields-header-open-symbol","~:fields","~:type-details","~:fn-name-tag","~:protocols-list","~:header-field-value-tag","~:fields-icon","~:type-wrapper-tag","~:field","~:type","~:standard-li-tag","~:type-basis-item","~:render-bools","~:dq","~:fields-header-no-fields-symbol","~:nil-label","~:meta-wrapper","~:protocols-list-open-symbol","~:list-open-symbol","~:raw-surrogate","~:header-field-separator","~:function-details","~:body-field-td3-tag","~:string","~:surrogate-header","~:more-symbol","~:native-reference","~:header","~:string-tag","~:meta-wrapper-tag","~:method-icon","~:function","~:max-protocol-method-arities-list","~:reference-surrogate","~:header-protocol-separator","~:basis-icon","~:surrogate-body","~:fn-args-tag","~:bool-tag","~:expandable-inner-tag","~:fn-prefix-tag","~:type-basis-item-tag","~:fn-ns-name-tag","~:header-tag","~:body-field-name-tag","~:open-symbol","~:protocol-method-arities-header-open-symbol","~:expanded-string-tag","~:protocol-more-tag","~:reference","~:meta-body-tag","~:instance-custom-printing-background","~:preview","~:fast?","~:native-reference-background","~:details","~:instance-type-header-tag","~:list","~:keyword","~:spacer","~:body-field-tr-tag","~:surrogate-target","~:header-field-name-tag","~:standard-li-no-margin-tag","~:list-tag","~:body-field-td1-tag","~:nil","~:render-types","~:string-postfix-limit","~:protocol-method-arities-list-header-separator","~:protocol-method-tag","~:fields-details","~:list-close-symbol","~:render-numbers","~:circular-reference","~:expandable","~:body-field-value-tag","~:empty-basis-symbol","~:list-details","~:fn-icon","~:integer-tag","~:type-basis-item-separator","~:protocols-header-tag","~:protocol-method-name-tag","~:item-tag","~:instance-value-tag","~:circular-ref-icon","~:standard-ol-tag","~:standard-body-reference","^7X","~:circular-reference-body-tag","~:bool","~:native-reference-tag","~:target","~:type-basis","~:aligned-li-tag","~:render-instances","~:expandable-symbol","~:fn-multi-arity-args-indent-tag","~:expandable-tag","~:protocol-method-arities-header-tag","~:max-instance-header-fields","~:arities","~:type-ref-tag","~:max-print-level","~:multi-arity-symbol","~:render-nils","~:meta-header-tag","~:body","~:separator","~:slow-protocol-tag","~:header-field-tag","~:native-reference-wrapper-tag","~:fields-header-close-symbol","~:string-prefix-limit","~:instance-custom-printing-wrapper-tag","~:body-field-td2-tag","~:atomic","~:type-basis-tag","~:close-symbol","~:type-symbol","~:instance-header-tag","~:header-expander","~:ns-icon","~:body-line-max-print-level","~:circular-reference-tag","~:header-expander-symbol","~:cljs-land"]],"~:order~:ns-specs",["^ "],"~:ns-spec-vars",["^J",[]],"~:compiler-options",["^4Y",[["^>S","~:static-fns"],true,["~:js-options","~:use-babel"],null,["^>S","~:shadow-tweaks"],null,["^>S","~:source-map-inline"],null,["^>S","~:shadow-optimize-constants"],null,["^>S","~:elide-asserts"],false,["^>S","~:optimize-constants"],null,["^>S","^1W"],null,["^>S","~:external-config"],null,["^>S","~:tooling-config"],null,["^>S","~:emit-constants"],null,["^>S","~:load-tests"],null,["^>S","~:form-size-threshold"],null,["^>S","~:global-goog-object&array"],null,["^>S","~:data-readers"],null,["^>S","~:infer-externs"],"~:auto",["^>S","^1Y"],null,["^>U","~:js-provider"],"^12",["~:mode"],"~:dev",["^>S","~:fn-invoke-direct"],null,["^>S","~:source-map"],"/dev/null"]]]