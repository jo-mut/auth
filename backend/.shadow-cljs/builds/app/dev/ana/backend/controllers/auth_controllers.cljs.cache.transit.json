["^ ","~:output",["^ ","~:js","goog.provide('backend.controllers.auth_controllers');\nbackend.controllers.auth_controllers.generate_token_and_set_cookies = (function backend$controllers$auth_controllers$generate_token_and_set_cookies(res,user_id){\nvar secret = \"mysecret\";\nvar options = ({\"expiresIn\": \"7d\"});\nvar token = shadow.js.shim.module$jsonwebtoken.sign(({\"user-id\": user_id}),secret,options);\nres.cookie(\"auth\",token,({\"httpOnly\": true, \"secure\": false, \"sameSite\": \"strict\", \"maxAge\": (((((7) * (24)) * (60)) * (60)) * (1000))}));\n\nreturn token;\n});\nbackend.controllers.auth_controllers.check_auth = (function backend$controllers$auth_controllers$check_auth(){\nreturn (function (req,res){\nreturn backend.db.models.user_models.user.findById(req.userId).then((function (user){\nif(cljs.core.truth_(user)){\n(user.password = null);\n\nreturn res.status((200)).json(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"success\",\"success\",1890645906),true,new cljs.core.Keyword(null,\"user\",\"user\",1532431356),user], null));\n} else {\nreturn res.status((400)).json(({\"success\": false, \"message\": \"Invalid password\"}));\n}\n})).catch((function (e){\nreturn res.status((400)).json(({\"success\": false, \"message\": e.message}));\n}));\n});\n});\nbackend.controllers.auth_controllers.handle_sign_up = (function backend$controllers$auth_controllers$handle_sign_up(res,p__13735){\nvar map__13736 = p__13735;\nvar map__13736__$1 = cljs.core.__destructure_map(map__13736);\nvar email = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__13736__$1,new cljs.core.Keyword(null,\"email\",\"email\",1415816706));\nvar password = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__13736__$1,new cljs.core.Keyword(null,\"password\",\"password\",417022471));\nvar name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__13736__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nvar token_expires_at = (((((24) * (60)) * (60)) * (1000)) + Date.now());\nvar verification_token = backend.utils.core.generate_code();\nreturn shadow.js.shim.module$bcryptjs.hash(password,(10)).then((function (hashed_password){\nvar user = (new backend.db.models.user_models.user(({\"email\": email, \"password\": hashed_password, \"name\": name, \"verificationTokenExpiredAt\": token_expires_at, \"verificationToken\": verification_token})));\nreturn user.save();\n})).then((function (user){\n(user.password = null);\n\nbackend.controllers.auth_controllers.generate_token_and_set_cookies(res,user._id);\n\nbackend.mailtrap.emails.send_verification_email(backend.utils.core.get_env(\"EMAIL\"),verification_token);\n\nreturn res.status((201)).json(({\"success\": true, \"message\": \"User created successfully\", \"user\": cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1(user)}));\n})).catch((function (err){\nreturn res.status((500)).json(({\"success\": false, \"message\": \"Error saving user\", \"error\": err.message}));\n}));\n});\nbackend.controllers.auth_controllers.sign_up = (function backend$controllers$auth_controllers$sign_up(){\nreturn (function (req,res){\nvar body = cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(req.body,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"keywordize-keys\",\"keywordize-keys\",1310784252),true], 0));\nvar map__13737 = body;\nvar map__13737__$1 = cljs.core.__destructure_map(map__13737);\nvar email = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__13737__$1,new cljs.core.Keyword(null,\"email\",\"email\",1415816706));\nvar password = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__13737__$1,new cljs.core.Keyword(null,\"password\",\"password\",417022471));\nvar name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__13737__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nreturn backend.db.models.user_models.user.findOne(({\"email\": email})).then((function (user){\nif(cljs.core.truth_(user)){\nreturn res.status((400)).json(({\"success\": false, \"message\": \"User already exists\"}));\n} else {\nreturn backend.controllers.auth_controllers.handle_sign_up(res,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"email\",\"email\",1415816706),email,new cljs.core.Keyword(null,\"password\",\"password\",417022471),password,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),name], null)).catch((function (err){\nreturn res.status((500)).json(({\"success\": false, \"message\": err.message}));\n}));\n}\n})).catch((function (err){\nreturn res.status((500)).json(({\"success\": false, \"message\": err.message}));\n}));\n});\n});\nbackend.controllers.auth_controllers.isPasswordValid = (function backend$controllers$auth_controllers$isPasswordValid(res,password,user){\nreturn shadow.js.shim.module$bcryptjs.compare(password,user.password).then((function (valid_password_QMARK_){\nif(cljs.core.truth_(valid_password_QMARK_)){\nreturn null;\n} else {\nreturn res.status((400)).json(({\"success\": false, \"message\": \"Invalid password\"}));\n}\n}));\n});\nbackend.controllers.auth_controllers.login = (function backend$controllers$auth_controllers$login(){\nreturn (function (req,res){\nvar body = req.body;\nvar email = body.email;\nvar password = body.password;\nreturn backend.db.models.user_models.user.findOne(({\"email\": email})).then((function (user){\nif(cljs.core.truth_(user)){\n} else {\nres.status((400)).json(({\"subject\": false, \"message\": \"Invalid credentials\"}));\n}\n\nbackend.controllers.auth_controllers.isPasswordValid(res,password,user);\n\nbackend.controllers.auth_controllers.generate_token_and_set_cookies(res,user._id);\n\n(user.lastLogin = (new Date()));\n\nreturn user.save().then((function (_){\n(user.password = null);\n\nreturn res.status((200)).json(({\"success\": true, \"message\": \"Logged in successfully\", \"user\": user}));\n}));\n})).catch((function (e){\nreturn res.status((200)).json(({\"success\": true, \"message\": e.message}));\n}));\n});\n});\nbackend.controllers.auth_controllers.logout = (function backend$controllers$auth_controllers$logout(){\nreturn (function (req,res){\nres.clearCookie(\"token\");\n\nreturn res.status((200)).json(({\"success\": true, \"message\": \"Logged out successfully\"}));\n});\n});\nbackend.controllers.auth_controllers.verify_email = (function backend$controllers$auth_controllers$verify_email(){\nreturn (function (req,res){\nvar body = req.body;\nvar code = body.code;\nreturn backend.db.models.user_models.user.findOne(({\"verificationToken\": code, \"verificationTokenExpiredAt\": ({\"$gt\": Date.now()})})).then((function (user){\nif(cljs.core.truth_(user)){\n} else {\nres.status((400)).json(({\"subject\": false, \"message\": \"Invalid or expired verification code\"}));\n}\n\n(user.isVerified = true);\n\n(user.verificationToken = null);\n\n(user.verificationTokenExpiredAt = null);\n\nreturn user.save().then((function (_){\nbackend.mailtrap.emails.send_welcome_email(user.email,user.name);\n\n(user.password = null);\n\nreturn res.status((200)).json(({\"subject\": true, \"message\": \"Email verified successfully\", \"user\": user}));\n}));\n})).catch((function (e){\nreturn res.status((500)).json(({\"success\": false, \"message\": e.message}));\n}));\n});\n});\nbackend.controllers.auth_controllers.forgot_password = (function backend$controllers$auth_controllers$forgot_password(){\nreturn (function (req,res){\nvar body = req.body;\nvar email = body.email;\nvar token = shadow.js.shim.module$crypto.randomBytes((20)).toString(\"hex\");\nvar expire_at = (((((1) * (60)) * (60)) * (1000)) + Date.now());\nvar reset_url = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(backend.utils.core.get_env(\"CLIENT_URL\")),\"/reset-password/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(token)].join('');\nreturn backend.db.models.user_models.user.findOne(({\"email\": email})).then((function (user){\nif(cljs.core.truth_(user)){\n} else {\nres.status((400)).json(({\"subject\": false, \"message\": \"User not found\"}));\n}\n\n(user.resetPasswordToken = token);\n\n(user.resetPasswordExpiredAt = expire_at);\n\nreturn user.save().then((function (){\nreturn backend.mailtrap.emails.send_password_reset_email(user.email,reset_url);\n}));\n})).catch((function (e){\nreturn res.status((400)).json(({\"success\": false, \"message\": e.message}));\n}));\n});\n});\nbackend.controllers.auth_controllers.reset_password = (function backend$controllers$auth_controllers$reset_password(){\nreturn (function (req,res){\nvar body = req.body;\nvar params = req.params;\nvar token = params.token;\nvar password = body.password;\nvar hashed_password = shadow.js.shim.module$bcryptjs.hash(password,(10));\nreturn backend.db.models.user_models.user.findOne(({\"resetPasswordToken\": token, \"resetPasswordExpiredAt\": ({\"$gt\": Date.now()})})).then((function (user){\nif(cljs.core.truth_(user)){\n} else {\nres.status((400)).json(({\"subject\": false, \"message\": \"User not found\"}));\n}\n\n(user.password = hashed_password);\n\n(user.resetPasswordToken = null);\n\n(user.resetPasswordExpiredAt = null);\n\nreturn user.save().then((function (){\nreturn backend.mailtrap.emails.send_reset_password_success_email(user.email);\n}));\n})).catch((function (e){\nreturn res.status((400)).json(({\"success\": false, \"message\": e.message}));\n}));\n});\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","backend/controllers/auth_controllers.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",41],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.core","~$cljs.core"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$backend.controllers.auth-controllers","~:reader-aliases",["^ "],"~:js-aliases",["^ ","bcryptjs","~$shadow.js.shim.module$bcryptjs","crypto","~$shadow.js.shim.module$crypto","jsonwebtoken","~$shadow.js.shim.module$jsonwebtoken"],"~:op","~:ns","~:imports",null,"~:requires",["^ ","~$bcryptjs","^L","~$emails","~$backend.mailtrap.emails","^N","^N","^C","^C","~$goog","^X","^P","^P","~$backend.db.models.user-models","^Y","^W","^W","~$backend.utils.core","^Z","^L","^L","~$jwt","^P","~$models","^Y","~$utils","^Z","~$crypto","^N"],"~:seen",["^F",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^C","^C"],"~:form",["~#list",["~$ns","^H",["^18",["^14",["bcryptjs","~:as","^U"],["crypto","^1:","^12"],["jsonwebtoken","^1:","^["],["^W","^1:","^V"],["^Z","^1:","^11"],["^Y","^1:","^10"]]]]],"~:flags",["^ ","^14",["^F",[]]],"~:js-deps",[["^ ","^1:","^U","~:shadow.build.ns-form/lib","bcryptjs"],["^ ","^1:","^12","^1=","crypto"],["^ ","^1:","^[","^1=","jsonwebtoken"]],"~:deps",["^X","^C","^L","^N","^P","^W","^Z","^Y"]],"^R","^H","~:resource-id",["~:shadow.build.classpath/resource","backend/controllers/auth_controllers.cljs"],"~:compiled-at",1741156943122,"^I",["^ ","^U","^L","^V","^W","^N","^N","^C","^C","^X","^X","^P","^P","^Y","^Y","^W","^W","^Z","^Z","^L","^L","^[","^P","^10","^Y","^11","^Z","^12","^N"],"~:resource-name","backend/controllers/auth_controllers.cljs","~:warnings",[],"~:source","(ns backend.controllers.auth-controllers\n  (:require\n   [\"bcryptjs\" :as bcryptjs]\n   [\"crypto\" :as crypto]\n   [\"jsonwebtoken\" :as jwt]\n   [backend.mailtrap.emails :as emails]\n   [backend.utils.core :as utils]\n   [backend.db.models.user-models :as models]))\n\n(defn generate-token-and-set-cookies\n  [res user-id]\n  (let [secret \"mysecret\"\n        options #js {:expiresIn \"7d\"}\n        token (.sign jwt #js {:user-id user-id} secret options)]\n    (-> (.cookie ^js res \"auth\" token #js {:httpOnly true\n                                           :secure   false\n                                           :sameSite \"strict\"\n                                           :maxAge   (* 7 24 60 60 1000)}))\n    token))\n\n(defn check-auth []\n  (fn [req res]\n    (->\n     (.findById models/user (.-userId ^js req))\n     (.then\n      (fn [user]\n        (if user\n          (do\n            (set! (.-password ^js user) nil)\n            (->\n             res\n             (.status 200)\n             (.json   {:success true\n                       :user    ^js user})))\n          (-> res\n              (.status 400)\n              (.json #js {:success false\n                          :message \"Invalid password\"})))))\n     (.catch\n      (fn [e]\n        (-> res\n            (.status 400)\n            (.json #js {:success false\n                        :message (.-message e)})))))))\n\n(defn handle-sign-up\n  [res {:keys [email password name]}]\n  (let [token-expires-at   (+ (* 24 60 60 1000) (.now js/Date))\n        verification-token (utils/generate-code)]\n    (-> (bcryptjs/hash password 10)\n        (.then\n         (fn [hashed-password]\n           (let [user (models/user. #js {:email                      email\n                                         :password                   hashed-password\n                                         :name                       name\n                                         :verificationTokenExpiredAt token-expires-at\n                                         :verificationToken          verification-token})]\n\n             (.save ^js user))))\n        (.then\n         (fn [user]\n           (set! (.-password user) nil)\n           (generate-token-and-set-cookies res (.-_id ^js user))\n           (emails/send-verification-email (utils/get-env \"EMAIL\") verification-token)\n           (-> res\n               (.status 201)\n               (.json #js {:success true\n                           :message \"User created successfully\"\n                           :user    (js->clj user)}))))\n        (.catch\n         (fn [err]\n           (-> res\n               (.status 500)\n               (.json #js {:success false\n                           :message \"Error saving user\"\n                           :error   (.-message err)})))))))\n\n\n(defn sign-up []\n  (fn [req res]\n    (let [body (js->clj (.-body req) :keywordize-keys true)\n          {:keys [email password name]} body]\n      (->\n       (.findOne models/user #js {:email email})\n       (.then\n        (fn [user]\n          (if user\n            (-> res\n                (.status 400)\n                (.json #js {:success false\n                            :message \"User already exists\"}))\n            (->\n             (handle-sign-up res {:email    email\n                                  :password password\n                                  :name     name})\n             (.catch\n              (fn [err]\n                (-> res\n                    (.status 500)\n                    (.json #js {:success false\n                                :message (.-message err)}))))))))\n       (.catch\n        (fn [err]\n          (-> res\n              (.status 500)\n              (.json #js {:success false\n                          :message (.-message err)}))))))))\n\n\n(defn isPasswordValid [res password user]\n  (->\n   (bcryptjs/compare password (.-password user))\n   (.then\n    (fn [valid-password?]\n      (when-not valid-password?\n        (-> res\n            (.status 400)\n            (.json #js {:success false\n                        :message \"Invalid password\"})))))))\n\n(defn login []\n  (fn [req res]\n    (let [body (.-body req)\n          email (.-email body)\n          password (.-password body)]\n      (->\n       (.findOne models/user #js {:email email})\n       (.then\n        (fn [user]\n          (when-not user\n            (->\n             res\n             (.status 400)\n             (.json #js {:subject false\n                         :message \"Invalid credentials\"})))\n\n          (isPasswordValid res password ^js user)\n          (generate-token-and-set-cookies res (.-_id ^js user))\n          (set! (.-lastLogin ^js user) (js/Date.))\n\n          (->\n           (.save user)\n           (.then\n            (fn [_]\n              (set! (.-password user) nil)\n              (-> res\n                  (.status 200)\n                  (.json #js {:success true\n                              :message \"Logged in successfully\"\n                              :user    ^js user})))))))\n\n       (.catch\n        (fn [e]\n          (-> res\n              (.status 200)\n              (.json #js {:success true\n                          :message (.-message e)}))))))))\n\n(defn logout []\n  (fn [req res]\n    (.clearCookie  ^js res \"token\")\n    (-> res\n        (.status 200)\n        (.json #js {:success true\n                    :message \"Logged out successfully\"}))))\n\n\n(defn verify-email []\n  (fn [req res]\n    (let [body (.-body req)\n          code (.-code body)]\n      (->\n       (.findOne models/user #js {:verificationToken code\n                                  :verificationTokenExpiredAt #js {:$gt (js/Date.now)}})\n       (.then\n        (fn [user]\n          (when-not ^js user\n            (-> res\n                (.status 400)\n                (.json #js {:subject false\n                            :message \"Invalid or expired verification code\"})))\n\n          (set! (.-isVerified ^js user) true)\n          (set! (.-verificationToken ^js user) nil)\n          (set! (.-verificationTokenExpiredAt ^js user) nil)\n\n          (->\n           (.save user)\n           (.then\n            (fn [_]\n              (emails/send-welcome-email (.-email ^js user) (.-name ^js user))\n              (set! (.-password user) nil)\n              (-> res\n                  (.status 200)\n                  (.json #js {:subject true\n                              :message \"Email verified successfully\"\n                              :user    user})))))))\n       (.catch\n        (fn [e]\n          (-> res\n              (.status 500)\n              (.json #js {:success false\n                          :message (.-message e)}))))))))\n\n\n\n\n(defn forgot-password []\n  (fn [req res]\n    (let [body (.-body req)\n          email (.-email body)\n          token (.toString (.randomBytes crypto 20) \"hex\")\n          expire-at (+ (* 1 60 60 1000) (.now js/Date))\n          reset-url (str (utils/get-env \"CLIENT_URL\") \"/reset-password/\" token)]\n      (->\n       (.findOne models/user #js {:email email})\n       (.then\n        (fn [user]\n          (when-not ^js user\n            (-> res\n                (.status 400)\n                (.json #js {:subject false\n                            :message \"User not found\"})))\n          (set! (.-resetPasswordToken ^js user) token)\n          (set! (.-resetPasswordExpiredAt ^js user) expire-at)\n\n          (->\n           (.save user)\n           (.then\n            (fn []\n              (emails/send-password-reset-email (.-email user) reset-url))))))\n       (.catch\n        (fn [e]\n          (-> res\n              (.status 400)\n              (.json #js {:success false\n                          :message (.-message e)}))))))))\n\n(defn reset-password []\n  (fn [req res]\n    (let [body  (.-body ^js req)\n          params (.-params ^js req)\n          token (.-token ^js params)\n          password (.-password ^js body)\n          hashed-password (bcryptjs/hash password 10)]\n\n      (->\n       (.findOne models/user #js {:resetPasswordToken         token\n                                  :resetPasswordExpiredAt #js {:$gt (js/Date.now)}})\n       (.then\n        (fn [user]\n          (when-not user\n            (-> res\n                (.status 400)\n                (.json #js {:subject false\n                            :message \"User not found\"})))\n\n          (set! (.-password ^js user) hashed-password)\n          (set! (.-resetPasswordToken ^js user) nil)\n          (set! (.-resetPasswordExpiredAt ^js user) nil)\n\n          (->\n           (.save user)\n           (.then\n            (fn []\n              (emails/send-reset-password-success-email (.-email user)))))))\n\n       (.catch\n        (fn [e]\n          (-> res\n              (.status 400)\n              (.json #js {:success false\n                          :message (.-message e)}))))))))","~:reader-features",["^F",["~:cljs"]],"~:used-var-namespaces",["^F",["^H","^C","~$js","^Y","^W","^Z"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["backend.controllers.auth-controllers/generate-token-and-set-cookies","res","user-id","secret","options","token","js/shadow.js.shim.module$jsonwebtoken","backend.controllers.auth-controllers/check-auth","req","backend.db.models.user-models/user","user","e","p__13735","map__13736","cljs.core/--destructure-map","cljs.core.get","backend.controllers.auth-controllers/handle-sign-up","email","password","name","token-expires-at","js/Date","verification-token","backend.utils.core/generate-code","js/shadow.js.shim.module$bcryptjs.hash","hashed-password","backend.mailtrap.emails/send-verification-email","backend.utils.core/get-env","cljs.core.js__GT_clj","err","backend.controllers.auth-controllers/sign-up","map__13737","body","backend.controllers.auth-controllers/isPasswordValid","js/shadow.js.shim.module$bcryptjs.compare","valid-password?","backend.controllers.auth-controllers/login","_","backend.controllers.auth-controllers/logout","backend.controllers.auth-controllers/verify-email","code","js/Date.now","backend.mailtrap.emails/send-welcome-email","backend.controllers.auth-controllers/forgot-password","js/shadow.js.shim.module$crypto","expire-at","reset-url","backend.mailtrap.emails/send-password-reset-email","backend.controllers.auth-controllers/reset-password","params","backend.mailtrap.emails/send-reset-password-success-email"]],"~:used-vars",["^F",["~$cljs.core/--destructure-map","~$backend.controllers.auth-controllers/handle-sign-up","~$backend.db.models.user-models/user","~$backend.controllers.auth-controllers/verify-email","~$backend.mailtrap.emails/send-reset-password-success-email","~$backend.controllers.auth-controllers/generate-token-and-set-cookies","~$js/Date","~$js/shadow.js.shim.module$crypto","~$js/shadow.js.shim.module$jsonwebtoken","~$js/shadow.js.shim.module$bcryptjs.hash","~$backend.controllers.auth-controllers/check-auth","~$cljs.core/js->clj","~$backend.utils.core/get-env","~$js/Date.now","~$backend.mailtrap.emails/send-welcome-email","~$backend.mailtrap.emails/send-password-reset-email","~$backend.controllers.auth-controllers/login","~$cljs.core/get","~$backend.controllers.auth-controllers/sign-up","~$backend.mailtrap.emails/send-verification-email","~$backend.controllers.auth-controllers/logout","~$backend.controllers.auth-controllers/reset-password","~$backend.controllers.auth-controllers/isPasswordValid","~$backend.utils.core/generate-code","~$backend.controllers.auth-controllers/forgot-password","~$js/shadow.js.shim.module$bcryptjs.compare"]]],"~:cache-keys",["~#cmap",[["^1@","goog/dom/tagname.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^F",[]],"~:deps-syms",["^X","~$goog.dom.HtmlElement"]]],["^1@","backend/controllers/auth_controllers.cljs"],["c82264a6892dbf0b0cbdcd9b690dda96bd08a32c","^2>",["^ ","^2?",null,"^2@",["^F",[]],"^2A",["^X","^C","^L","^N","^P","^W","^Z","^Y"]]],["^1@","goog/html/trustedtypes.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2>",["^ ","^2?",null,"^2@",["^F",[]],"^2A",["^X"]]],["^1@","goog/labs/useragent/browser.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2>",["^ ","^2?",null,"^2@",["^F",[]],"^2A",["^X","~$goog.labs.userAgent.util","~$goog.labs.userAgent.highEntropy.highEntropyValue","~$goog.asserts","~$goog.string.internal","~$goog.labs.userAgent.highEntropy.highEntropyData","~$goog.labs.userAgent"]]],["^1@","goog/html/safeurl.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2>",["^ ","^2?",null,"^2@",["^F",[]],"^2A",["^X","^2E","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.string.Const","~$goog.string.TypedString","^2F"]]],["^1@","goog/array/array.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2>",["^ ","^2?",null,"^2@",["^F",[]],"^2A",["^X","^2E"]]],["^1@","goog/debug/error.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2>",["^ ","^2?",null,"^2@",["^F",[]],"^2A",["^X"]]],["^1@","goog/flags/flags.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2>",["^ ","^2?",null,"^2@",["^F",[]],"^2A",["^X"]]],["^1@","goog/dom/nodetype.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2>",["^ ","^2?",null,"^2@",["^F",[]],"^2A",["^X"]]],["~:shadow.build.js-support/require","mongoose"],["~$shadow.js.shim.module$mongoose","shadow.js.shim.module$mongoose.js","require","^2>",["^ ","^2?",null,"^2@",["^F",[]],"^2A",["^X","~$shadow.js"]]],["^1@","goog/labs/useragent/highentropy/highentropyvalue.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2>",["^ ","^2?",null,"^2@",["^F",[]],"^2A",["^X","^2C","^2F"]]],["^1@","backend/db/models/user_models.cljs"],["5d48888aadb9f192db7fffcb252f33c1031bf644","^2>",["^ ","^2?",null,"^2@",["^F",[]],"^2A",["^X","^C","^2N"]]],["^1@","goog/string/typedstring.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2>",["^ ","^2?",null,"^2@",["^F",[]],"^2A",["^X"]]],["^2M","bcryptjs"],["^L","shadow.js.shim.module$bcryptjs.js","require","^2>",["^ ","^2?",null,"^2@",["^F",[]],"^2A",["^X","^2O"]]],["^1@","shadow/js.js"],["5e42cf82db7046093236c00a76374192709aea80","^2>",["^ ","^2?",null,"^2@",["^F",[]],"^2A",["^X"]]],["^1@","goog/object/object.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2>",["^ ","^2?",null,"^2@",["^F",[]],"^2A",["^X"]]],["^1@","goog/dom/asserts.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2>",["^ ","^2?",null,"^2@",["^F",[]],"^2A",["^X","^2E"]]],"~:SHADOW-TIMESTAMP",[1733506754000,1733506754000,1715719162000],["^1@","goog/math/long.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2>",["^ ","^2?",null,"^2@",["^F",[]],"^2A",["^X","^2E","~$goog.reflect"]]],["^1@","goog/html/trustedresourceurl.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2>",["^ ","^2?",null,"^2@",["^F",[]],"^2A",["^X","^2E","~$goog.fs.blob","^2I","~$goog.html.SafeScript","~$goog.html.trustedtypes","^2K","^2L"]]],["^1@","goog/string/internal.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2>",["^ ","^2?",null,"^2@",["^F",[]],"^2A",["^X"]]],["^1@","goog/functions/functions.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2>",["^ ","^2?",null,"^2@",["^F",[]],"^2A",["^X"]]],["^1@","goog/html/safestyle.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2>",["^ ","^2?",null,"^2@",["^F",[]],"^2A",["^X","^2K","~$goog.html.SafeUrl","^2L","^2E","^2F"]]],["^1@","goog/dom/safe.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2>",["^ ","^2?",null,"^2@",["^F",[]],"^2A",["^X","^2E","~$goog.asserts.dom","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^2S","~$goog.html.SafeStyle","^2U","^2J","~$goog.html.uncheckedconversions","^2K","^2F"]]],["^1@","goog/asserts/dom.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2>",["^ ","^2?",null,"^2@",["^F",[]],"^2A",["^X","~$goog.dom.TagName","^2E","~$goog.dom.element"]]],["^1@","goog/html/safehtml.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2>",["^ ","^2?",null,"^2@",["^F",[]],"^2A",["^X","^2K","^2S","^2Z","~$goog.html.SafeStyleSheet","^2U","^30","^2J","^2L","^2E","~$goog.labs.userAgent.browser","~$goog.array","~$goog.object","^2F","~$goog.dom.tags","^2T"]]],["^1@","goog/dom/tags.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2>",["^ ","^2?",null,"^2@",["^F",[]],"^2A",["^X","^35"]]],["^1@","backend/utils/core.cljs"],["ee792f7ba4e76b6c6b9f1ba2ec4123665a873238","^2>",["^ ","^2?",null,"^2@",["^F",[]],"^2A",["^X","^C"]]],["^2M","crypto"],["^N","shadow.js.shim.module$crypto.js","require","^2>",["^ ","^2?",null,"^2@",["^F",[]],"^2A",["^X","^2O"]]],["^1@","goog/fs/blob.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2>",["^ ","^2?",null,"^2@",["^F",[]],"^2A",["^X"]]],["^1@","goog/asserts/asserts.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2>",["^ ","^2?",null,"^2@",["^F",[]],"^2A",["^X","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^2M","jsonwebtoken"],["^P","shadow.js.shim.module$jsonwebtoken.js","require","^2>",["^ ","^2?",null,"^2@",["^F",[]],"^2A",["^X","^2O"]]],["^2M","mailtrap"],["~$shadow.js.shim.module$mailtrap","shadow.js.shim.module$mailtrap.js","require","^2>",["^ ","^2?",null,"^2@",["^F",[]],"^2A",["^X","^2O"]]],["^1@","goog/uri/uri.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2>",["^ ","^2?",null,"^2@",["^F",[]],"^2A",["^X","^34","^2E","~$goog.collections.maps","~$goog.string","~$goog.structs","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1@","goog/labs/useragent/highentropy/highentropydata.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2>",["^ ","^2?",null,"^2@",["^F",[]],"^2A",["^X","^2D"]]],["^1@","goog/collections/maps.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2>",["^ ","^2?",null,"^2@",["^F",[]],"^2A",["^X"]]],["^1@","backend/mailtrap/core.cljs"],["7c6e217df188388d34d92c4bc1856ffa04e97039","^2>",["^ ","^2?",null,"^2@",["^F",[]],"^2A",["^X","^C","~$shadow.js.shim.module$dotenv","^39"]]],["^1@","goog/fs/url.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2>",["^ ","^2?",null,"^2@",["^F",[]],"^2A",["^X"]]],["^1@","goog/base.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2>",["^ ","^2?",null,"^2@",["^F",[]],"^2A",[]]],["^1@","goog/structs/structs.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2>",["^ ","^2?",null,"^2@",["^F",[]],"^2A",["^X","^34","^35"]]],["^1@","backend/mailtrap/email_templates.cljs"],["c90c0555f398d2f454a379143644279378f4d5a6","^2>",["^ ","^2?",null,"^2@",["^F",[]],"^2A",["^X","^C"]]],["^1@","goog/string/string.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2>",["^ ","^2?",null,"^2@",["^F",[]],"^2A",["^X","~$goog.dom.safe","^2[","^2K","^2F"]]],["^1@","goog/reflect/reflect.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2>",["^ ","^2?",null,"^2@",["^F",[]],"^2A",["^X"]]],["^1@","goog/labs/useragent/util.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2>",["^ ","^2?",null,"^2@",["^F",[]],"^2A",["^X","^2F","^2H"]]],["^1@","goog/string/stringbuffer.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2>",["^ ","^2?",null,"^2@",["^F",[]],"^2A",["^X"]]],["^1@","goog/labs/useragent/useragent.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2>",["^ ","^2?",null,"^2@",["^F",[]],"^2A",["^X","~$goog.flags"]]],["^1@","goog/dom/element.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2>",["^ ","^2?",null,"^2@",["^F",[]],"^2A",["^X","^38","^30"]]],["^1@","goog/html/uncheckedconversions.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2>",["^ ","^2?",null,"^2@",["^F",[]],"^2A",["^X","^2E","^2Y","^2S","^2Z","^32","^2U","^2J","^2K","^2F"]]],["^1@","goog/dom/htmlelement.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2>",["^ ","^2?",null,"^2@",["^F",[]],"^2A",["^X"]]],["^1@","cljs/core.cljs"],["b89362aeac5c1cafea76c798929ee5d385c461d8","^2>",["^ ","^2?",null,"^2@",["^F",[]],"^2A",["^X","~$goog.math.Long","~$goog.math.Integer","^3;","^35","^34","~$goog.Uri","~$goog.string.StringBuffer"]]],["^1@","goog/html/safescript.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2>",["^ ","^2?",null,"^2@",["^F",[]],"^2A",["^X","^2K","^2L","^2T","^2E"]]],["^1@","goog/html/safestylesheet.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2>",["^ ","^2?",null,"^2@",["^F",[]],"^2A",["^X","^2K","^2Z","^2L","^35","^2E","^2F"]]],["^2M","dotenv"],["^3@","shadow.js.shim.module$dotenv.js","require","^2>",["^ ","^2?",null,"^2@",["^F",[]],"^2A",["^X","^2O"]]],["^1@","goog/math/integer.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2>",["^ ","^2?",null,"^2@",["^F",[]],"^2A",["^X","^2Q"]]],["^1@","goog/uri/utils.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2>",["^ ","^2?",null,"^2@",["^F",[]],"^2A",["^X","^2E","^3;"]]],["^1@","goog/string/const.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2>",["^ ","^2?",null,"^2@",["^F",[]],"^2A",["^X","^2E","^2L"]]],["^1@","backend/mailtrap/emails.cljs"],["cb63ca5146f137218b38c85ddd8cfb3d6b0dd83a","^2>",["^ ","^2?",null,"^2@",["^F",[]],"^2A",["^X","^C","~$backend.mailtrap.email-templates","~$backend.mailtrap.core"]]]]],"~:clj-info",["^ ","jar:file:/Users/john/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/edn.clj",1690756440000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/source_map.clj",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/analyzer.cljc",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/analyzer/passes/and_or.cljc",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/vendor/clojure/tools/reader/reader_types.clj",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/vendor/clojure/tools/reader/impl/errors.clj",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/instant.clj",1690756440000,"jar:file:/Users/john/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/pprint.clj",1690756440000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/vendor/clojure/tools/reader/default_data_readers.clj",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/compiler.cljc",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/util.cljc",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/tagged_literals.cljc",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/env.cljc",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/analyzer/impl/namespaces.cljc",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/core.clj",1690756440000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/vendor/clojure/tools/reader.clj",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/analyzer/passes.cljc",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/source_map/base64.clj",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/vendor/clojure/tools/reader/impl/inspect.clj",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/instant.clj",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/analyzer/impl.cljc",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/core.cljc",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/set.clj",1690756440000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/js_deps.cljc",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/java/io.clj",1690756440000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/vendor/clojure/data/json.clj",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/source_map/base64_vlq.clj",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/string.clj",1690756440000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/externs.clj",1715719162000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","backend/controllers/auth_controllers.cljs","^7",1,"^8",5,"^9",1,"^:",41],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C"],"^D",null,"^E",["^F",[]],"~:shadow/js-access-properties",["^F",["compare","token","params","resetPasswordToken","lastLogin","hash","findById","userId","isVerified","clearCookie","resetPasswordExpiredAt","_id","now","findOne","verificationTokenExpiredAt","randomBytes","verificationToken"]],"^G","^H","^I",["^ "],"^J",["^ ","^K","^L","^M","^N","^O","^P"],"^S",null,"^T",["^ ","^U","^L","^V","^W","^N","^N","^C","^C","^X","^X","^P","^P","^Y","^Y","^W","^W","^Z","^Z","^L","^L","^[","^P","^10","^Y","^11","^Z","^12","^N"],"^13",["^F",["^14"]],"~:shadow/js-access-global",["^F",["Date"]],"^15",null,"~:defs",["^ ","~$generate-token-and-set-cookies",["^ ","~:protocol-inline",null,"^5",["^ ","^6","backend/controllers/auth_controllers.cljs","^7",10,"^8",7,"^9",10,"^:",37,"~:arglists",["^18",["~$quote",["^18",[["~$res","~$user-id"]]]]]],"^G","^1S","^6","backend/controllers/auth_controllers.cljs","^:",37,"~:method-params",["^18",[["^4C","^4D"]]],"~:protocol-impl",null,"~:arglists-meta",["^18",[null,null]],"^8",1,"~:variadic?",false,"^7",10,"~:ret-tag","^1H","^9",10,"~:max-fixed-arity",2,"~:fn-var",true,"^4A",["^18",["^4B",["^18",[["^4C","^4D"]]]]]],"~$handle-sign-up",["^ ","^4@",null,"^5",["^ ","^6","backend/controllers/auth_controllers.cljs","^7",46,"^8",7,"^9",46,"^:",21,"^4A",["^18",["^4B",["^18",[["^4C",["^ ","~:keys",["~$email","~$password","~$name"]]]]]]]],"^G","^1O","^6","backend/controllers/auth_controllers.cljs","^:",21,"^4E",["^18",[["^4C","~$p__13735"]]],"^4F",null,"^4G",["^18",[null,null]],"^8",1,"^4H",false,"^7",46,"^4I","^1H","^9",46,"^4J",2,"^4K",true,"^4A",["^18",["^4B",["^18",[["^4C",["^ ","^4M",["^4N","^4O","^4P"]]]]]]]],"~$check-auth",["^ ","^4@",null,"^5",["^ ","^6","backend/controllers/auth_controllers.cljs","^7",21,"^8",7,"^9",21,"^:",17,"^4A",["^18",["^4B",["^18",[[]]]]]],"^G","^1X","^6","backend/controllers/auth_controllers.cljs","^:",17,"^4E",["^18",[[]]],"^4F",null,"^4G",["^18",[null,null]],"^8",1,"^4H",false,"^7",21,"^4I","~$function","^9",21,"^4J",0,"^4K",true,"^4A",["^18",["^4B",["^18",[[]]]]]],"~$sign-up",["^ ","^4@",null,"^5",["^ ","^6","backend/controllers/auth_controllers.cljs","^7",79,"^8",7,"^9",79,"^:",14,"^4A",["^18",["^4B",["^18",[[]]]]]],"^G","^24","^6","backend/controllers/auth_controllers.cljs","^:",14,"^4E",["^18",[[]]],"^4F",null,"^4G",["^18",[null,null]],"^8",1,"^4H",false,"^7",79,"^4I","^4S","^9",79,"^4J",0,"^4K",true,"^4A",["^18",["^4B",["^18",[[]]]]]],"~$verify-email",["^ ","^4@",null,"^5",["^ ","^6","backend/controllers/auth_controllers.cljs","^7",168,"^8",7,"^9",168,"^:",19,"^4A",["^18",["^4B",["^18",[[]]]]]],"^G","^1Q","^6","backend/controllers/auth_controllers.cljs","^:",19,"^4E",["^18",[[]]],"^4F",null,"^4G",["^18",[null,null]],"^8",1,"^4H",false,"^7",168,"^4I","^4S","^9",168,"^4J",0,"^4K",true,"^4A",["^18",["^4B",["^18",[[]]]]]],"~$logout",["^ ","^4@",null,"^5",["^ ","^6","backend/controllers/auth_controllers.cljs","^7",159,"^8",7,"^9",159,"^:",13,"^4A",["^18",["^4B",["^18",[[]]]]]],"^G","^26","^6","backend/controllers/auth_controllers.cljs","^:",13,"^4E",["^18",[[]]],"^4F",null,"^4G",["^18",[null,null]],"^8",1,"^4H",false,"^7",159,"^4I","^4S","^9",159,"^4J",0,"^4K",true,"^4A",["^18",["^4B",["^18",[[]]]]]],"~$login",["^ ","^4@",null,"^5",["^ ","^6","backend/controllers/auth_controllers.cljs","^7",121,"^8",7,"^9",121,"^:",12,"^4A",["^18",["^4B",["^18",[[]]]]]],"^G","^22","^6","backend/controllers/auth_controllers.cljs","^:",12,"^4E",["^18",[[]]],"^4F",null,"^4G",["^18",[null,null]],"^8",1,"^4H",false,"^7",121,"^4I","^4S","^9",121,"^4J",0,"^4K",true,"^4A",["^18",["^4B",["^18",[[]]]]]],"~$isPasswordValid",["^ ","^4@",null,"^5",["^ ","^6","backend/controllers/auth_controllers.cljs","^7",110,"^8",7,"^9",110,"^:",22,"^4A",["^18",["^4B",["^18",[["^4C","^4O","~$user"]]]]]],"^G","^28","^6","backend/controllers/auth_controllers.cljs","^:",22,"^4E",["^18",[["^4C","^4O","^4Y"]]],"^4F",null,"^4G",["^18",[null,null]],"^8",1,"^4H",false,"^7",110,"^4I","^1H","^9",110,"^4J",3,"^4K",true,"^4A",["^18",["^4B",["^18",[["^4C","^4O","^4Y"]]]]]],"~$forgot-password",["^ ","^4@",null,"^5",["^ ","^6","backend/controllers/auth_controllers.cljs","^7",208,"^8",7,"^9",208,"^:",22,"^4A",["^18",["^4B",["^18",[[]]]]]],"^G","^2:","^6","backend/controllers/auth_controllers.cljs","^:",22,"^4E",["^18",[[]]],"^4F",null,"^4G",["^18",[null,null]],"^8",1,"^4H",false,"^7",208,"^4I","^4S","^9",208,"^4J",0,"^4K",true,"^4A",["^18",["^4B",["^18",[[]]]]]],"~$reset-password",["^ ","^4@",null,"^5",["^ ","^6","backend/controllers/auth_controllers.cljs","^7",239,"^8",7,"^9",239,"^:",21,"^4A",["^18",["^4B",["^18",[[]]]]]],"^G","^27","^6","backend/controllers/auth_controllers.cljs","^:",21,"^4E",["^18",[[]]],"^4F",null,"^4G",["^18",[null,null]],"^8",1,"^4H",false,"^7",239,"^4I","^4S","^9",239,"^4J",0,"^4K",true,"^4A",["^18",["^4B",["^18",[[]]]]]]],"^16",["^ ","^C","^C"],"~:cljs.analyzer/constants",["^ ","^13",["^F",["~:email","~:password","^G","~:success","~:keywordize-keys","~:user"]],"~:order",["^53","^55","^51","^52","^G","^54"]],"^1;",["^ ","^14",["^F",[]]],"^1<",[["^ ","^1:","^U","^1=","bcryptjs"],["^ ","^1:","^12","^1=","crypto"],["^ ","^1:","^[","^1=","jsonwebtoken"]],"^1>",["^X","^C","^L","^N","^P","^W","^Z","^Y"]],"^R","^H","~:ns-specs",["^ "],"~:ns-spec-vars",["^F",[]],"~:compiler-options",["^2=",[["^59","~:static-fns"],true,["~:js-options","~:use-babel"],null,["^59","~:shadow-tweaks"],null,["^59","~:source-map-inline"],null,["^59","~:shadow-optimize-constants"],null,["^59","~:elide-asserts"],false,["^59","~:optimize-constants"],null,["^59","^1C"],null,["^59","~:external-config"],null,["^59","~:tooling-config"],null,["^59","~:emit-constants"],null,["^59","~:load-tests"],null,["^59","~:form-size-threshold"],null,["^59","~:global-goog-object&array"],null,["^59","~:data-readers"],null,["^59","~:infer-externs"],"~:auto",["^59","^1E"],null,["^5;","~:js-provider"],"^14",["~:mode"],"~:dev",["^59","~:fn-invoke-direct"],null,["^59","~:source-map"],"/dev/null"]]]