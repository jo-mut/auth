["^ ","~:output",["^ ","~:js","goog.provide('backend.controllers.auth_controllers');\nbackend.controllers.auth_controllers.generate_token_and_set_cookies = (function backend$controllers$auth_controllers$generate_token_and_set_cookies(res,user_id){\nvar secret = \"mysecret\";\nvar options = ({\"expiresIn\": \"7d\"});\nvar token = shadow.js.shim.module$jsonwebtoken.sign(cljs.core.clj__GT_js(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"user-id\",\"user-id\",-206822291),user_id], null)),secret,options);\nres.cookie(\"auth\",token,({\"httpOnly\": true, \"secure\": false, \"sameSite\": \"strict\", \"maxAge\": (((((7) * (24)) * (60)) * (60)) * (1000))}));\n\nreturn token;\n});\nbackend.controllers.auth_controllers.check_auth = (function backend$controllers$auth_controllers$check_auth(){\nreturn (function (req,res){\nreturn promesa.core.catch$.cljs$core$IFn$_invoke$arity$2(promesa.protocols._bind(promesa.protocols._promise(null),(function (___11854__auto__){\nreturn promesa.protocols._bind(promesa.protocols._promise(backend.db.models.user_models.user.findById(req.userId)),(function (user){\nreturn promesa.protocols._bind(promesa.protocols._promise((cljs.core.truth_(user)?null:res.status((400)).json(({\"success\": false, \"message\": \"Invalid password\"})))),(function (___11822__auto__){\nreturn promesa.protocols._bind(promesa.protocols._promise((user.password = null)),(function (___11822__auto____$1){\nreturn promesa.protocols._promise(res.status((200)).json(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"success\",\"success\",1890645906),true,new cljs.core.Keyword(null,\"user\",\"user\",1532431356),user], null)));\n}));\n}));\n}));\n})),(function (e){\nreturn res.status((400)).json(({\"success\": false, \"message\": e.message}));\n}));\n});\n});\nbackend.controllers.auth_controllers.handle_sign_up = (function backend$controllers$auth_controllers$handle_sign_up(res,p__12276){\nvar map__12277 = p__12276;\nvar map__12277__$1 = cljs.core.__destructure_map(map__12277);\nvar email = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12277__$1,new cljs.core.Keyword(null,\"email\",\"email\",1415816706));\nvar password = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12277__$1,new cljs.core.Keyword(null,\"password\",\"password\",417022471));\nvar name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12277__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nvar token_expires_at = (((((24) * (60)) * (60)) * (1000)) + Date.now());\nvar verification_token = backend.utils.core.generate_code();\nreturn shadow.js.shim.module$bcryptjs.hash(password,(10)).then((function (hashed_password){\nvar user = (new backend.db.models.user_models.user(({\"email\": email, \"password\": hashed_password, \"name\": name, \"verificationTokenExpiredAt\": token_expires_at, \"verificationToken\": verification_token})));\nuser.save();\n\n(function (){\n(user.password = null);\n\nbackend.controllers.auth_controllers.generate_token_and_set_cookies(res,new cljs.core.Keyword(null,\"_id\",\"_id\",-789960287).cljs$core$IFn$_invoke$arity$1(cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1(user)));\n\nbackend.mailtrap.emails.send_verification_email(backend.utils.core.get_env(\"EMAIL\"),verification_token);\n\nreturn res.status((201)).json(({\"success\": true, \"message\": \"User created successfully\", \"user\": cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1(user)}));\n}).then();\n\nreturn (function (err){\nreturn res.status((500)).json(({\"success\": false, \"message\": \"Error saving user\", \"error\": err.message}));\n}).catch();\n})).catch((function (err){\nreturn res.status((500)).json(({\"success\": false, \"message\": \"Error hashing password\", \"error\": err.message}));\n}));\n});\nbackend.controllers.auth_controllers.sign_up = (function backend$controllers$auth_controllers$sign_up(){\nreturn (function (req,res){\nvar body = cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(req.body,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"keywordize-keys\",\"keywordize-keys\",1310784252),true], 0));\nvar map__12278 = body;\nvar map__12278__$1 = cljs.core.__destructure_map(map__12278);\nvar email = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12278__$1,new cljs.core.Keyword(null,\"email\",\"email\",1415816706));\nvar password = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12278__$1,new cljs.core.Keyword(null,\"password\",\"password\",417022471));\nvar name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12278__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nreturn promesa.protocols._bind(promesa.protocols._promise(null),(function (___11854__auto__){\nreturn promesa.protocols._bind(promesa.protocols._promise(backend.db.models.user_models.user.findOne(({\"email\": email}))),(function (user_exist_QMARK_){\nreturn promesa.protocols._promise((cljs.core.truth_(user_exist_QMARK_)?res.status((400)).json(({\"success\": false, \"message\": \"User already exists\"})):(function (){try{return backend.controllers.auth_controllers.handle_sign_up(res,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"email\",\"email\",1415816706),email,new cljs.core.Keyword(null,\"password\",\"password\",417022471),password,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),name], null));\n}catch (e12279){var e = e12279;\nreturn res.status((500)).json(({\"success\": false, \"message\": e.message}));\n}})()));\n}));\n}));\n});\n});\nbackend.controllers.auth_controllers.isPasswordValid = (function backend$controllers$auth_controllers$isPasswordValid(res,password,user){\nreturn promesa.core.then.cljs$core$IFn$_invoke$arity$2(shadow.js.shim.module$bcryptjs.compare(password,user.password),(function (isPasswordValid){\nif(cljs.core.truth_(isPasswordValid)){\nreturn null;\n} else {\nreturn res.status((400)).json(({\"success\": false, \"message\": \"Invalid password\"}));\n}\n}));\n});\nbackend.controllers.auth_controllers.login = (function backend$controllers$auth_controllers$login(){\nreturn (function (req,res){\nvar body = req.body;\nvar email = body.email;\nvar password = body.password;\nreturn promesa.core.catch$.cljs$core$IFn$_invoke$arity$2(promesa.protocols._bind(promesa.protocols._promise(null),(function (___11854__auto__){\nreturn promesa.protocols._bind(promesa.protocols._promise(backend.db.models.user_models.user.findOne(({\"email\": email}))),(function (user){\nreturn promesa.protocols._promise((cljs.core.truth_(user)?(function (){\nbackend.controllers.auth_controllers.isPasswordValid(res,password,user);\n\nbackend.controllers.auth_controllers.generate_token_and_set_cookies(res,user._id);\n\n(user.lastLogin = (new Date()));\n\nreturn promesa.core.then.cljs$core$IFn$_invoke$arity$2(user.save(),(function (_){\n(user.password = null);\n\nreturn res.status((200)).json(({\"success\": true, \"message\": \"Logged in successfully\", \"user\": user}));\n}));\n})()\n:res.status((400)).json(({\"subject\": false, \"message\": \"Invalid credentials\"}))));\n}));\n})),(function (e){\nreturn res.status((200)).json(({\"success\": true, \"message\": e.message}));\n}));\n});\n});\nbackend.controllers.auth_controllers.logout = (function backend$controllers$auth_controllers$logout(){\nreturn (function (req,res){\nres.clearCookie(\"token\");\n\nreturn res.status((200)).json(({\"success\": true, \"message\": \"Logged out successfully\"}));\n});\n});\nbackend.controllers.auth_controllers.verify_email = (function backend$controllers$auth_controllers$verify_email(){\nreturn (function (req,res){\nvar body = req.body;\nvar code = body.code;\nreturn promesa.core.catch$.cljs$core$IFn$_invoke$arity$2(promesa.protocols._bind(promesa.protocols._promise(null),(function (___11854__auto__){\nreturn promesa.protocols._bind(promesa.protocols._promise(backend.db.models.user_models.user.findOne(({\"verificationToken\": code, \"verificationTokenExpiredAt\": ({\"$gt\": Date.now()})}))),(function (user){\nreturn promesa.protocols._bind(promesa.protocols._promise((cljs.core.truth_(user)?null:res.status((400)).json(({\"subject\": false, \"message\": \"Invalid or expired verification code\"})))),(function (___11822__auto__){\nreturn promesa.protocols._bind(promesa.protocols._promise((user.isVerified = true)),(function (___11822__auto____$1){\nreturn promesa.protocols._bind(promesa.protocols._promise((user.verificationToken = null)),(function (___11822__auto____$2){\nreturn promesa.protocols._bind(promesa.protocols._promise((user.verificationTokenExpiredAt = null)),(function (___11822__auto____$3){\nreturn promesa.protocols._promise(promesa.core.then.cljs$core$IFn$_invoke$arity$2(user.save(),(function (_){\nbackend.mailtrap.emails.send_welcome_email(user.email,user.name);\n\n(user.password = null);\n\nreturn res.status((200)).json(({\"subject\": true, \"message\": \"Email verified successfully\", \"user\": user}));\n})));\n}));\n}));\n}));\n}));\n}));\n})),(function (e){\nreturn res.status((500)).json(({\"success\": false, \"message\": e.message}));\n}));\n});\n});\nbackend.controllers.auth_controllers.forgot_password = (function backend$controllers$auth_controllers$forgot_password(){\nreturn (function (req,res){\nvar body = req.body;\nvar email = body.email;\nvar token = shadow.js.shim.module$crypto.randomBytes((20)).toString(\"hex\");\nvar expire_at = (((((1) * (60)) * (60)) * (1000)) + Date.now());\nvar reset_url = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(backend.utils.core.get_env(\"CLIENT_URL\")),\"/reset-password/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(token)].join('');\nreturn promesa.core.catch$.cljs$core$IFn$_invoke$arity$2(promesa.protocols._bind(promesa.protocols._promise(null),(function (___11854__auto__){\nreturn promesa.protocols._bind(promesa.protocols._promise(backend.db.models.user_models.user.findOne(({\"email\": email}))),(function (user){\nreturn promesa.protocols._bind(promesa.protocols._promise((cljs.core.truth_(user)?null:res.status((400)).json(({\"subject\": false, \"message\": \"User not found\"})))),(function (___11822__auto__){\nreturn promesa.protocols._bind(promesa.protocols._promise((user.resetPasswordToken = token)),(function (___11822__auto____$1){\nreturn promesa.protocols._bind(promesa.protocols._promise((user.resetPasswordExpiredAt = expire_at)),(function (___11822__auto____$2){\nreturn promesa.protocols._promise(promesa.core.then.cljs$core$IFn$_invoke$arity$2(user.save(),(function (){\nreturn backend.mailtrap.emails.send_password_reset_email(user.email,reset_url);\n})));\n}));\n}));\n}));\n}));\n})),(function (e){\nreturn res.status((400)).json(({\"success\": false, \"message\": e.message}));\n}));\n});\n});\nbackend.controllers.auth_controllers.reset_password = (function backend$controllers$auth_controllers$reset_password(){\nreturn (function (req,res){\nvar body = req.body;\nvar params = req.params;\nvar token = params.token;\nvar password = body.password;\nvar hashed_password = shadow.js.shim.module$bcryptjs.hash(password,(10));\nreturn promesa.core.catch$.cljs$core$IFn$_invoke$arity$2(promesa.protocols._bind(promesa.protocols._promise(null),(function (___11854__auto__){\nreturn promesa.protocols._bind(promesa.protocols._promise(backend.db.models.user_models.user.findOne(({\"resetPasswordToken\": token, \"resetPasswordExpiredAt\": ({\"$gt\": Date.now()})}))),(function (user){\nreturn promesa.protocols._bind(promesa.protocols._promise((cljs.core.truth_(user)?null:res.status((400)).json(({\"subject\": false, \"message\": \"User not found\"})))),(function (___11822__auto__){\nreturn promesa.protocols._bind(promesa.protocols._promise((user.password = hashed_password)),(function (___11822__auto____$1){\nreturn promesa.protocols._bind(promesa.protocols._promise((user.resetPasswordToken = null)),(function (___11822__auto____$2){\nreturn promesa.protocols._bind(promesa.protocols._promise((user.resetPasswordExpiredAt = null)),(function (___11822__auto____$3){\nreturn promesa.protocols._promise(promesa.core.then.cljs$core$IFn$_invoke$arity$2(user.save(),(function (){\nreturn backend.mailtrap.emails.send_reset_password_success_email(user.email);\n})));\n}));\n}));\n}));\n}));\n}));\n})),(function (e){\nreturn res.status((400)).json(({\"success\": false, \"message\": e.message}));\n}));\n});\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","backend/controllers/auth_controllers.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",41],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.core","~$cljs.core"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$backend.controllers.auth-controllers","~:reader-aliases",["^ "],"~:js-aliases",["^ ","bcryptjs","~$shadow.js.shim.module$bcryptjs","crypto","~$shadow.js.shim.module$crypto","jsonwebtoken","~$shadow.js.shim.module$jsonwebtoken"],"~:op","~:ns","~:imports",null,"~:requires",["^ ","~$bcryptjs","^L","~$emails","~$backend.mailtrap.emails","~$p","~$promesa.core","^X","^X","^N","^N","^C","^C","~$goog","^Y","^P","^P","~$backend.db.models.user-models","^Z","^W","^W","~$backend.utils.core","^[","^L","^L","~$jwt","^P","~$models","^Z","~$utils","^[","~$crypto","^N"],"~:seen",["^F",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^C","^C","~$p","^X","^X","^X"],"~:form",["~#list",["~$ns","^H",["^19",["^15",["bcryptjs","~:as","^U"],["crypto","^1;","^13"],["jsonwebtoken","^1;","^10"],["^X","^1;","~$p"],["^W","^1;","^V"],["^[","^1;","^12"],["^Z","^1;","^11"]]]]],"~:flags",["^ ","^15",["^F",[]]],"~:js-deps",[["^ ","^1;","^U","~:shadow.build.ns-form/lib","bcryptjs"],["^ ","^1;","^13","^1>","crypto"],["^ ","^1;","^10","^1>","jsonwebtoken"]],"~:deps",["^Y","^C","^L","^N","^P","^X","^W","^[","^Z"]],"^R","^H","~:resource-id",["~:shadow.build.classpath/resource","backend/controllers/auth_controllers.cljs"],"~:compiled-at",1740900723437,"^I",["^ ","^U","^L","^V","^W","~$p","^X","^X","^X","^N","^N","^C","^C","^Y","^Y","^P","^P","^Z","^Z","^W","^W","^[","^[","^L","^L","^10","^P","^11","^Z","^12","^[","^13","^N"],"~:resource-name","backend/controllers/auth_controllers.cljs","~:warnings",[],"~:source","(ns backend.controllers.auth-controllers\n  (:require\n   [\"bcryptjs\" :as bcryptjs]\n   [\"crypto\" :as crypto]\n   [\"jsonwebtoken\" :as jwt]\n   [promesa.core :as p]\n   [backend.mailtrap.emails :as emails]\n   [backend.utils.core :as utils]\n   [backend.db.models.user-models :as models]))\n\n(defn generate-token-and-set-cookies\n  [res user-id]\n  (let [secret \"mysecret\"\n        options #js {:expiresIn \"7d\"}\n        token (.sign jwt (clj->js {:user-id user-id}) secret options)]\n    (-> (.cookie ^js res \"auth\" token #js {:httpOnly true\n                                           :secure   false\n                                           :sameSite \"strict\"\n                                           :maxAge   (* 7 24 60 60 1000)}))\n    token))\n\n(defn check-auth []\n  (fn [req res]\n    (->\n     (p/let [user (.findById models/user (.-userId ^js req))]\n       (when-not user\n         (-> res\n             (.status 400)\n             (.json #js {:success false\n                         :message \"Invalid password\"})))\n\n       (set! (.-password ^js user) nil)\n\n       (-> res\n           (.status 200)\n           (.json   {:success true\n                     :user    ^js user})))\n     (p/catch\n      (fn [e]\n        (-> res\n            (.status 400)\n            (.json #js {:success false\n                        :message (.-message e)})))))))\n\n(defn handle-sign-up\n  [res {:keys [email password name]}]\n  (let [token-expires-at   (+ (* 24 60 60 1000) (.now js/Date))\n        verification-token (utils/generate-code)]\n    (-> (bcryptjs/hash password 10)\n        (.then\n         (fn [hashed-password]\n           (let [user (models/user. #js {:email                      email\n                                         :password                   hashed-password\n                                         :name                       name\n                                         :verificationTokenExpiredAt token-expires-at\n                                         :verificationToken          verification-token})]\n\n             (.save ^js user)\n             (.then\n              (fn []\n                (set! (.-password user) nil)\n                (generate-token-and-set-cookies res (:_id (js->clj user)))\n                (emails/send-verification-email (utils/get-env \"EMAIL\") verification-token)\n                (-> res\n                    (.status 201)\n                    (.json #js {:success true\n                                :message \"User created successfully\"\n                                :user    (js->clj user)}))))\n             (.catch\n              (fn [err]\n                (-> res\n                    (.status 500)\n                    (.json #js {:success false\n                                :message \"Error saving user\"\n                                :error   (.-message err)})))))))\n        (.catch\n         (fn [err]\n           (-> res\n               (.status 500)\n               (.json #js {:success false\n                           :message \"Error hashing password\"\n                           :error   (.-message err)})))))))\n\n\n(defn sign-up []\n  (fn [req res]\n    (let [body (js->clj (.-body req) :keywordize-keys true)\n          {:keys [email password name]} body]\n      (p/let [user-exist? (.findOne models/user #js {:email email})]\n        (if user-exist?\n          (-> res\n              (.status 400)\n              (.json #js {:success false\n                          :message \"User already exists\"}))\n          (try\n            ;; (when-not (or email password name)\n            ;;   (throw (js/Error. \"All fields are required\")))\n            (handle-sign-up res {:email    email\n                                 :password password\n                                 :name     name})\n            (catch :default e\n              (-> res\n                  (.status 500)\n                  (.json #js {:success false\n                              :message (.-message e)})))))))))\n\n\n(defn isPasswordValid [res password user]\n  (->\n   (bcryptjs/compare password (.-password user))\n   (p/then\n    (fn [isPasswordValid]\n      (when-not isPasswordValid\n        (-> res\n            (.status 400)\n            (.json #js {:success false\n                        :message \"Invalid password\"})))))))\n\n(defn login []\n  (fn [req res]\n    (let [body (.-body req)\n          email (.-email body)\n          password (.-password body)]\n      (->\n       (p/let [user (.findOne models/user #js {:email email})]\n         (if user\n           (do\n             (isPasswordValid res password ^js user)\n             (generate-token-and-set-cookies res (.-_id ^js user))\n             (set! (.-lastLogin ^js user) (js/Date.))\n\n             (->\n              (.save user)\n              (p/then\n               (fn [_]\n                 (set! (.-password user) nil)\n                 (-> res\n                     (.status 200)\n                     (.json #js {:success true\n                                 :message \"Logged in successfully\"\n                                 :user    ^js user}))))))\n\n           (->\n            res\n            (.status 400)\n            (.json #js {:subject false\n                        :message \"Invalid credentials\"}))))\n\n       (p/catch\n        (fn [e]\n          (-> res\n              (.status 200)\n              (.json #js {:success true\n                          :message (.-message e)}))))))))\n\n(defn logout []\n  (fn [req res]\n    (.clearCookie  ^js res \"token\")\n    (-> res\n        (.status 200)\n        (.json #js {:success true\n                    :message \"Logged out successfully\"}))))\n\n\n(defn verify-email []\n  (fn [req res]\n    (let [body (.-body req)\n          code (.-code body)]\n      (->\n       (p/let [user (.findOne models/user #js {:verificationToken code\n                                               :verificationTokenExpiredAt #js {:$gt (js/Date.now)}})]\n\n         (when-not ^js user\n           (-> res\n               (.status 400)\n               (.json #js {:subject false\n                           :message \"Invalid or expired verification code\"})))\n\n         (set! (.-isVerified ^js user) true)\n         (set! (.-verificationToken ^js user) nil)\n         (set! (.-verificationTokenExpiredAt ^js user) nil)\n\n         (->\n          (.save user)\n          (p/then (fn [_]\n                    (emails/send-welcome-email (.-email ^js user) (.-name ^js user))\n                    (set! (.-password user) nil)\n                    (-> res\n                        (.status 200)\n                        (.json #js {:subject true\n                                    :message \"Email verified successfully\"\n                                    :user    user}))))))\n       (p/catch (fn [e]\n                  (-> res\n                      (.status 500)\n                      (.json #js {:success false\n                                  :message (.-message e)}))))))))\n\n\n\n\n(defn forgot-password []\n  (fn [req res]\n    (let [body (.-body req)\n          email (.-email body)\n          token (.toString (.randomBytes crypto 20) \"hex\")\n          expire-at (+ (* 1 60 60 1000) (.now js/Date))\n          reset-url (str (utils/get-env \"CLIENT_URL\") \"/reset-password/\" token)]\n      (->\n       (p/let [user (.findOne models/user #js {:email email})]\n\n         (when-not ^js user\n           (-> res\n               (.status 400)\n               (.json #js {:subject false\n                           :message \"User not found\"})))\n         (set! (.-resetPasswordToken ^js user) token)\n         (set! (.-resetPasswordExpiredAt ^js user) expire-at)\n\n         (->\n          (.save user)\n          (p/then (fn []\n                    (emails/send-password-reset-email (.-email user) reset-url)))))\n       (p/catch\n        (fn [e]\n          (-> res\n              (.status 400)\n              (.json #js {:success false\n                          :message (.-message e)}))))))))\n\n(defn reset-password []\n  (fn [req res]\n    (let [body  (.-body ^js req)\n          params (.-params ^js req)\n          token (.-token ^js params)\n          password (.-password ^js body)\n          hashed-password (bcryptjs/hash password 10)]\n\n      (->\n       (p/let [user (.findOne models/user #js {:resetPasswordToken         token\n                                               :resetPasswordExpiredAt #js {:$gt (js/Date.now)}})]\n         (when-not user\n           (-> res\n               (.status 400)\n               (.json #js {:subject false\n                           :message \"User not found\"})))\n\n         (set! (.-password ^js user) hashed-password)\n         (set! (.-resetPasswordToken ^js user) nil)\n         (set! (.-resetPasswordExpiredAt ^js user) nil)\n\n         (->\n          (.save user)\n          (p/then\n           (fn []\n             (emails/send-reset-password-success-email (.-email user))))))\n       (p/catch\n        (fn [e]\n          (-> res\n              (.status 400)\n              (.json #js {:success false\n                          :message (.-message e)}))))))))","~:reader-features",["^F",["~:cljs"]],"~:used-var-namespaces",["^F",["~$promesa.protocols","^H","^X","^C","~$js","^Z","^W","^["]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["backend.controllers.auth-controllers/generate-token-and-set-cookies","res","user-id","secret","options","token","js/shadow.js.shim.module$jsonwebtoken","cljs.core/clj->js","backend.controllers.auth-controllers/check-auth","req","promesa.protocols/-bind","promesa.protocols/-promise","___11854__auto__","___11822__auto__","user","backend.db.models.user-models/user","promesa.core.catch$","e","p__12276","map__12277","cljs.core/--destructure-map","cljs.core.get","backend.controllers.auth-controllers/handle-sign-up","email","password","name","token-expires-at","js/Date","verification-token","backend.utils.core/generate-code","js/shadow.js.shim.module$bcryptjs.hash","hashed-password","cljs.core.js__GT_clj","backend.mailtrap.emails/send-verification-email","backend.utils.core/get-env","err","backend.controllers.auth-controllers/sign-up","map__12278","body","user-exist?","e12279","backend.controllers.auth-controllers/isPasswordValid","js/shadow.js.shim.module$bcryptjs.compare","promesa.core.then","isPasswordValid","backend.controllers.auth-controllers/login","_","backend.controllers.auth-controllers/logout","backend.controllers.auth-controllers/verify-email","code","js/Date.now","backend.mailtrap.emails/send-welcome-email","backend.controllers.auth-controllers/forgot-password","js/shadow.js.shim.module$crypto","expire-at","reset-url","backend.mailtrap.emails/send-password-reset-email","backend.controllers.auth-controllers/reset-password","params","backend.mailtrap.emails/send-reset-password-success-email"]],"~:used-vars",["^F",["~$cljs.core/--destructure-map","~$backend.controllers.auth-controllers/handle-sign-up","~$backend.db.models.user-models/user","~$backend.controllers.auth-controllers/verify-email","~$backend.mailtrap.emails/send-reset-password-success-email","~$backend.controllers.auth-controllers/generate-token-and-set-cookies","~$promesa.core/catch","~$js/Date","~$js/shadow.js.shim.module$crypto","~$js/shadow.js.shim.module$jsonwebtoken","~$promesa.protocols/-promise","~$js/shadow.js.shim.module$bcryptjs.hash","~$backend.controllers.auth-controllers/check-auth","~$cljs.core/js->clj","~$backend.utils.core/get-env","~$js/Date.now","~$backend.mailtrap.emails/send-welcome-email","~$backend.mailtrap.emails/send-password-reset-email","~$backend.controllers.auth-controllers/login","~$cljs.core/get","~$backend.controllers.auth-controllers/sign-up","~$backend.mailtrap.emails/send-verification-email","~$backend.controllers.auth-controllers/logout","~$cljs.core/clj->js","~$backend.controllers.auth-controllers/reset-password","~$backend.controllers.auth-controllers/isPasswordValid","~$backend.utils.core/generate-code","~$promesa.core/then","~$backend.controllers.auth-controllers/forgot-password","~$js/shadow.js.shim.module$bcryptjs.compare","~$promesa.protocols/-bind"]]],"~:cache-keys",["~#cmap",[["^1A","goog/dom/tagname.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^F",[]],"~:deps-syms",["^Y","~$goog.dom.HtmlElement"]]],["^1A","backend/controllers/auth_controllers.cljs"],["ff0d8d403053fe72303d8a7440d8779f4ac7f3bd","^2E",["^ ","^2F",null,"^2G",["^F",[]],"^2H",["^Y","^C","^L","^N","^P","^X","^W","^[","^Z"]]],["^1A","goog/html/trustedtypes.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2E",["^ ","^2F",null,"^2G",["^F",[]],"^2H",["^Y"]]],["^1A","goog/labs/useragent/browser.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2E",["^ ","^2F",null,"^2G",["^F",[]],"^2H",["^Y","~$goog.labs.userAgent.util","~$goog.labs.userAgent.highEntropy.highEntropyValue","~$goog.asserts","~$goog.string.internal","~$goog.labs.userAgent.highEntropy.highEntropyData","~$goog.labs.userAgent"]]],["^1A","goog/html/safeurl.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2E",["^ ","^2F",null,"^2G",["^F",[]],"^2H",["^Y","^2L","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.string.Const","~$goog.string.TypedString","^2M"]]],["^1A","goog/array/array.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2E",["^ ","^2F",null,"^2G",["^F",[]],"^2H",["^Y","^2L"]]],["^1A","goog/debug/error.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2E",["^ ","^2F",null,"^2G",["^F",[]],"^2H",["^Y"]]],["^1A","goog/flags/flags.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2E",["^ ","^2F",null,"^2G",["^F",[]],"^2H",["^Y"]]],["^1A","promesa/impl.cljc"],["a4fe657acbb7c1b0539820874bab2fa0b59bb229","^2E",["^ ","^2F",null,"^2G",["^F",[]],"^2H",["^Y","^C","^1I","~$promesa.util","~$promesa.exec"]]],["^1A","goog/dom/nodetype.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2E",["^ ","^2F",null,"^2G",["^F",[]],"^2H",["^Y"]]],["~:shadow.build.js-support/require","mongoose"],["~$shadow.js.shim.module$mongoose","shadow.js.shim.module$mongoose.js","require","^2E",["^ ","^2F",null,"^2G",["^F",[]],"^2H",["^Y","~$shadow.js"]]],["^1A","goog/labs/useragent/highentropy/highentropyvalue.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2E",["^ ","^2F",null,"^2G",["^F",[]],"^2H",["^Y","^2J","^2M"]]],["^1A","backend/db/models/user_models.cljs"],["5d48888aadb9f192db7fffcb252f33c1031bf644","^2E",["^ ","^2F",null,"^2G",["^F",[]],"^2H",["^Y","^C","^2W"]]],["^1A","goog/string/typedstring.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2E",["^ ","^2F",null,"^2G",["^F",[]],"^2H",["^Y"]]],["^2V","bcryptjs"],["^L","shadow.js.shim.module$bcryptjs.js","require","^2E",["^ ","^2F",null,"^2G",["^F",[]],"^2H",["^Y","^2X"]]],["^1A","shadow/js.js"],["5e42cf82db7046093236c00a76374192709aea80","^2E",["^ ","^2F",null,"^2G",["^F",[]],"^2H",["^Y"]]],["^1A","goog/object/object.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2E",["^ ","^2F",null,"^2G",["^F",[]],"^2H",["^Y"]]],["^1A","goog/dom/asserts.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2E",["^ ","^2F",null,"^2G",["^F",[]],"^2H",["^Y","^2L"]]],"~:SHADOW-TIMESTAMP",[1733506754000,1733506754000,1715719162000],["^1A","promesa/util.cljc"],["a4fe657acbb7c1b0539820874bab2fa0b59bb229","^2E",["^ ","^2F",null,"^2G",["^F",[]],"^2H",["^Y","^C","^1I"]]],["^1A","goog/math/long.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2E",["^ ","^2F",null,"^2G",["^F",[]],"^2H",["^Y","^2L","~$goog.reflect"]]],["^1A","goog/html/trustedresourceurl.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2E",["^ ","^2F",null,"^2G",["^F",[]],"^2H",["^Y","^2L","~$goog.fs.blob","^2P","~$goog.html.SafeScript","~$goog.html.trustedtypes","^2R","^2S"]]],["^1A","goog/string/internal.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2E",["^ ","^2F",null,"^2G",["^F",[]],"^2H",["^Y"]]],["^1A","goog/functions/functions.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2E",["^ ","^2F",null,"^2G",["^F",[]],"^2H",["^Y"]]],["^1A","goog/html/safestyle.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2E",["^ ","^2F",null,"^2G",["^F",[]],"^2H",["^Y","^2R","~$goog.html.SafeUrl","^2S","^2L","^2M"]]],["^1A","goog/dom/safe.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2E",["^ ","^2F",null,"^2G",["^F",[]],"^2H",["^Y","^2L","~$goog.asserts.dom","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^30","~$goog.html.SafeStyle","^32","^2Q","~$goog.html.uncheckedconversions","^2R","^2M"]]],["^1A","goog/asserts/dom.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2E",["^ ","^2F",null,"^2G",["^F",[]],"^2H",["^Y","~$goog.dom.TagName","^2L","~$goog.dom.element"]]],["^1A","goog/html/safehtml.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2E",["^ ","^2F",null,"^2G",["^F",[]],"^2H",["^Y","^2R","^30","^37","~$goog.html.SafeStyleSheet","^32","^39","^2Q","^2S","^2L","~$goog.labs.userAgent.browser","~$goog.array","~$goog.object","^2M","~$goog.dom.tags","^31"]]],["^1A","goog/dom/tags.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2E",["^ ","^2F",null,"^2G",["^F",[]],"^2H",["^Y","^3>"]]],["^1A","backend/utils/core.cljs"],["127274668a34a0c5d299059c91e30c96a9477885","^2E",["^ ","^2F",null,"^2G",["^F",[]],"^2H",["^Y","^C"]]],["^2V","crypto"],["^N","shadow.js.shim.module$crypto.js","require","^2E",["^ ","^2F",null,"^2G",["^F",[]],"^2H",["^Y","^2X"]]],["^1A","goog/fs/blob.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2E",["^ ","^2F",null,"^2G",["^F",[]],"^2H",["^Y"]]],["^1A","goog/asserts/asserts.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2E",["^ ","^2F",null,"^2G",["^F",[]],"^2H",["^Y","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^2V","jsonwebtoken"],["^P","shadow.js.shim.module$jsonwebtoken.js","require","^2E",["^ ","^2F",null,"^2G",["^F",[]],"^2H",["^Y","^2X"]]],["^2V","mailtrap"],["~$shadow.js.shim.module$mailtrap","shadow.js.shim.module$mailtrap.js","require","^2E",["^ ","^2F",null,"^2G",["^F",[]],"^2H",["^Y","^2X"]]],["^1A","goog/uri/uri.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2E",["^ ","^2F",null,"^2G",["^F",[]],"^2H",["^Y","^3=","^2L","~$goog.collections.maps","~$goog.string","~$goog.structs","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1A","goog/labs/useragent/highentropy/highentropydata.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2E",["^ ","^2F",null,"^2G",["^F",[]],"^2H",["^Y","^2K"]]],["^1A","goog/collections/maps.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2E",["^ ","^2F",null,"^2G",["^F",[]],"^2H",["^Y"]]],["^1A","backend/mailtrap/core.cljs"],["7c6e217df188388d34d92c4bc1856ffa04e97039","^2E",["^ ","^2F",null,"^2G",["^F",[]],"^2H",["^Y","^C","~$shadow.js.shim.module$dotenv","^3B"]]],["^1A","goog/fs/url.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2E",["^ ","^2F",null,"^2G",["^F",[]],"^2H",["^Y"]]],["^1A","goog/base.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2E",["^ ","^2F",null,"^2G",["^F",[]],"^2H",[]]],["^1A","promesa/core.cljc"],["a4fe657acbb7c1b0539820874bab2fa0b59bb229","^2E",["^ ","^2F",null,"^2G",["^F",[]],"^2H",["^Y","^C","^1I","^C","^2U","~$promesa.impl","^2T"]]],["^1A","goog/structs/structs.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2E",["^ ","^2F",null,"^2G",["^F",[]],"^2H",["^Y","^3=","^3>"]]],["^1A","backend/mailtrap/email_templates.cljs"],["c90c0555f398d2f454a379143644279378f4d5a6","^2E",["^ ","^2F",null,"^2G",["^F",[]],"^2H",["^Y","^C"]]],["^1A","goog/string/string.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2E",["^ ","^2F",null,"^2G",["^F",[]],"^2H",["^Y","~$goog.dom.safe","^38","^2R","^2M"]]],["^1A","goog/reflect/reflect.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2E",["^ ","^2F",null,"^2G",["^F",[]],"^2H",["^Y"]]],["^1A","goog/labs/useragent/util.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2E",["^ ","^2F",null,"^2G",["^F",[]],"^2H",["^Y","^2M","^2O"]]],["^1A","goog/string/stringbuffer.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2E",["^ ","^2F",null,"^2G",["^F",[]],"^2H",["^Y"]]],["^1A","promesa/protocols.cljc"],["a4fe657acbb7c1b0539820874bab2fa0b59bb229","^2E",["^ ","^2F",null,"^2G",["^F",[]],"^2H",["^Y","^C"]]],["^1A","goog/labs/useragent/useragent.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2E",["^ ","^2F",null,"^2G",["^F",[]],"^2H",["^Y","~$goog.flags"]]],["^1A","goog/dom/element.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2E",["^ ","^2F",null,"^2G",["^F",[]],"^2H",["^Y","^3A","^39"]]],["^1A","goog/html/uncheckedconversions.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2E",["^ ","^2F",null,"^2G",["^F",[]],"^2H",["^Y","^2L","^36","^30","^37","^3;","^32","^2Q","^2R","^2M"]]],["^1A","goog/dom/htmlelement.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2E",["^ ","^2F",null,"^2G",["^F",[]],"^2H",["^Y"]]],["^1A","cljs/core.cljs"],["b89362aeac5c1cafea76c798929ee5d385c461d8","^2E",["^ ","^2F",null,"^2G",["^F",[]],"^2H",["^Y","~$goog.math.Long","~$goog.math.Integer","^3D","^3>","^3=","~$goog.Uri","~$goog.string.StringBuffer"]]],["^1A","goog/html/safescript.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2E",["^ ","^2F",null,"^2G",["^F",[]],"^2H",["^Y","^2R","^2S","^31","^2L"]]],["^1A","goog/html/safestylesheet.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2E",["^ ","^2F",null,"^2G",["^F",[]],"^2H",["^Y","^2R","^37","^2S","^3>","^2L","^2M"]]],["^2V","dotenv"],["^3I","shadow.js.shim.module$dotenv.js","require","^2E",["^ ","^2F",null,"^2G",["^F",[]],"^2H",["^Y","^2X"]]],["^1A","goog/math/integer.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2E",["^ ","^2F",null,"^2G",["^F",[]],"^2H",["^Y","^2Z"]]],["^1A","goog/uri/utils.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2E",["^ ","^2F",null,"^2G",["^F",[]],"^2H",["^Y","^2L","^3D"]]],["^1A","goog/string/const.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2E",["^ ","^2F",null,"^2G",["^F",[]],"^2H",["^Y","^2L","^2S"]]],["^1A","backend/mailtrap/emails.cljs"],["cb63ca5146f137218b38c85ddd8cfb3d6b0dd83a","^2E",["^ ","^2F",null,"^2G",["^F",[]],"^2H",["^Y","^C","~$backend.mailtrap.email-templates","~$backend.mailtrap.core"]]],["^1A","promesa/exec.cljc"],["a4fe657acbb7c1b0539820874bab2fa0b59bb229","^2E",["^ ","^2F",null,"^2G",["^F",[]],"^2H",["^Y","^C","^1I","^2T","^3>"]]]]],"~:clj-info",["^ ","jar:file:/Users/john/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/edn.clj",1690756440000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/source_map.clj",1715719162000,"jar:file:/Users/john/.m2/repository/funcool/promesa/10.0.594/promesa-10.0.594.jar!/promesa/impl.cljc",1735689384000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/analyzer.cljc",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/analyzer/passes/and_or.cljc",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/vendor/clojure/tools/reader/reader_types.clj",1715719162000,"jar:file:/Users/john/.m2/repository/funcool/promesa/10.0.594/promesa-10.0.594.jar!/promesa/core.cljc",1735689384000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/vendor/clojure/tools/reader/impl/errors.clj",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/instant.clj",1690756440000,"jar:file:/Users/john/.m2/repository/funcool/promesa/10.0.594/promesa-10.0.594.jar!/promesa/util.cljc",1735689384000,"jar:file:/Users/john/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/pprint.clj",1690756440000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/vendor/clojure/tools/reader/default_data_readers.clj",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/compiler.cljc",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/util.cljc",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/tagged_literals.cljc",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/env.cljc",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/analyzer/impl/namespaces.cljc",1715719162000,"jar:file:/Users/john/.m2/repository/funcool/promesa/10.0.594/promesa-10.0.594.jar!/promesa/protocols.cljc",1735689384000,"jar:file:/Users/john/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/core.clj",1690756440000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/vendor/clojure/tools/reader.clj",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/analyzer/passes.cljc",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/source_map/base64.clj",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/vendor/clojure/tools/reader/impl/inspect.clj",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/instant.clj",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/analyzer/impl.cljc",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/core.cljc",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/set.clj",1690756440000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/js_deps.cljc",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/java/io.clj",1690756440000,"jar:file:/Users/john/.m2/repository/funcool/promesa/10.0.594/promesa-10.0.594.jar!/promesa/exec.cljc",1735689384000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/vendor/clojure/data/json.clj",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/source_map/base64_vlq.clj",1715719162000,"jar:file:/Users/john/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/string.clj",1690756440000,"jar:file:/Users/john/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/externs.clj",1715719162000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","backend/controllers/auth_controllers.cljs","^7",1,"^8",5,"^9",1,"^:",41],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C"],"^D",null,"^E",["^F",[]],"~:shadow/js-access-properties",["^F",["compare","token","params","resetPasswordToken","lastLogin","hash","findById","userId","isVerified","clearCookie","resetPasswordExpiredAt","_id","now","findOne","verificationTokenExpiredAt","randomBytes","verificationToken"]],"^G","^H","^I",["^ "],"^J",["^ ","^K","^L","^M","^N","^O","^P"],"^S",null,"^T",["^ ","^U","^L","^V","^W","~$p","^X","^X","^X","^N","^N","^C","^C","^Y","^Y","^P","^P","^Z","^Z","^W","^W","^[","^[","^L","^L","^10","^P","^11","^Z","^12","^[","^13","^N"],"^14",["^F",["^15"]],"~:shadow/js-access-global",["^F",["Date"]],"^16",null,"~:defs",["^ ","~$generate-token-and-set-cookies",["^ ","~:protocol-inline",null,"^5",["^ ","^6","backend/controllers/auth_controllers.cljs","^7",11,"^8",7,"^9",11,"^:",37,"~:arglists",["^19",["~$quote",["^19",[["~$res","~$user-id"]]]]]],"^G","^1U","^6","backend/controllers/auth_controllers.cljs","^:",37,"~:method-params",["^19",[["^4R","^4S"]]],"~:protocol-impl",null,"~:arglists-meta",["^19",[null,null]],"^8",1,"~:variadic?",false,"^7",11,"~:ret-tag","^1J","^9",11,"~:max-fixed-arity",2,"~:fn-var",true,"^4P",["^19",["^4Q",["^19",[["^4R","^4S"]]]]]],"~$handle-sign-up",["^ ","^4O",null,"^5",["^ ","^6","backend/controllers/auth_controllers.cljs","^7",45,"^8",7,"^9",45,"^:",21,"^4P",["^19",["^4Q",["^19",[["^4R",["^ ","~:keys",["~$email","~$password","~$name"]]]]]]]],"^G","^1Q","^6","backend/controllers/auth_controllers.cljs","^:",21,"^4T",["^19",[["^4R","~$p__12276"]]],"^4U",null,"^4V",["^19",[null,null]],"^8",1,"^4W",false,"^7",45,"^4X","^1J","^9",45,"^4Y",2,"^4Z",true,"^4P",["^19",["^4Q",["^19",[["^4R",["^ ","^50",["^51","^52","^53"]]]]]]]],"~$check-auth",["^ ","^4O",null,"^5",["^ ","^6","backend/controllers/auth_controllers.cljs","^7",22,"^8",7,"^9",22,"^:",17,"^4P",["^19",["^4Q",["^19",[[]]]]]],"^G","^20","^6","backend/controllers/auth_controllers.cljs","^:",17,"^4T",["^19",[[]]],"^4U",null,"^4V",["^19",[null,null]],"^8",1,"^4W",false,"^7",22,"^4X","~$function","^9",22,"^4Y",0,"^4Z",true,"^4P",["^19",["^4Q",["^19",[[]]]]]],"~$sign-up",["^ ","^4O",null,"^5",["^ ","^6","backend/controllers/auth_controllers.cljs","^7",85,"^8",7,"^9",85,"^:",14,"^4P",["^19",["^4Q",["^19",[[]]]]]],"^G","^28","^6","backend/controllers/auth_controllers.cljs","^:",14,"^4T",["^19",[[]]],"^4U",null,"^4V",["^19",[null,null]],"^8",1,"^4W",false,"^7",85,"^4X","^56","^9",85,"^4Y",0,"^4Z",true,"^4P",["^19",["^4Q",["^19",[[]]]]]],"~$verify-email",["^ ","^4O",null,"^5",["^ ","^6","backend/controllers/auth_controllers.cljs","^7",165,"^8",7,"^9",165,"^:",19,"^4P",["^19",["^4Q",["^19",[[]]]]]],"^G","^1S","^6","backend/controllers/auth_controllers.cljs","^:",19,"^4T",["^19",[[]]],"^4U",null,"^4V",["^19",[null,null]],"^8",1,"^4W",false,"^7",165,"^4X","^56","^9",165,"^4Y",0,"^4Z",true,"^4P",["^19",["^4Q",["^19",[[]]]]]],"~$logout",["^ ","^4O",null,"^5",["^ ","^6","backend/controllers/auth_controllers.cljs","^7",156,"^8",7,"^9",156,"^:",13,"^4P",["^19",["^4Q",["^19",[[]]]]]],"^G","^2:","^6","backend/controllers/auth_controllers.cljs","^:",13,"^4T",["^19",[[]]],"^4U",null,"^4V",["^19",[null,null]],"^8",1,"^4W",false,"^7",156,"^4X","^56","^9",156,"^4Y",0,"^4Z",true,"^4P",["^19",["^4Q",["^19",[[]]]]]],"~$login",["^ ","^4O",null,"^5",["^ ","^6","backend/controllers/auth_controllers.cljs","^7",119,"^8",7,"^9",119,"^:",12,"^4P",["^19",["^4Q",["^19",[[]]]]]],"^G","^26","^6","backend/controllers/auth_controllers.cljs","^:",12,"^4T",["^19",[[]]],"^4U",null,"^4V",["^19",[null,null]],"^8",1,"^4W",false,"^7",119,"^4X","^56","^9",119,"^4Y",0,"^4Z",true,"^4P",["^19",["^4Q",["^19",[[]]]]]],"~$isPasswordValid",["^ ","^4O",null,"^5",["^ ","^6","backend/controllers/auth_controllers.cljs","^7",108,"^8",7,"^9",108,"^:",22,"^4P",["^19",["^4Q",["^19",[["^4R","^52","~$user"]]]]]],"^G","^2=","^6","backend/controllers/auth_controllers.cljs","^:",22,"^4T",["^19",[["^4R","^52","^5<"]]],"^4U",null,"^4V",["^19",[null,null]],"^8",1,"^4W",false,"^7",108,"^4X","~$any","^9",108,"^4Y",3,"^4Z",true,"^4P",["^19",["^4Q",["^19",[["^4R","^52","^5<"]]]]]],"~$forgot-password",["^ ","^4O",null,"^5",["^ ","^6","backend/controllers/auth_controllers.cljs","^7",202,"^8",7,"^9",202,"^:",22,"^4P",["^19",["^4Q",["^19",[[]]]]]],"^G","^2@","^6","backend/controllers/auth_controllers.cljs","^:",22,"^4T",["^19",[[]]],"^4U",null,"^4V",["^19",[null,null]],"^8",1,"^4W",false,"^7",202,"^4X","^56","^9",202,"^4Y",0,"^4Z",true,"^4P",["^19",["^4Q",["^19",[[]]]]]],"~$reset-password",["^ ","^4O",null,"^5",["^ ","^6","backend/controllers/auth_controllers.cljs","^7",231,"^8",7,"^9",231,"^:",21,"^4P",["^19",["^4Q",["^19",[[]]]]]],"^G","^2<","^6","backend/controllers/auth_controllers.cljs","^:",21,"^4T",["^19",[[]]],"^4U",null,"^4V",["^19",[null,null]],"^8",1,"^4W",false,"^7",231,"^4X","^56","^9",231,"^4Y",0,"^4Z",true,"^4P",["^19",["^4Q",["^19",[[]]]]]]],"^17",["^ ","^C","^C","~$p","^X","^X","^X"],"~:cljs.analyzer/constants",["^ ","^14",["^F",["~:_id","~:email","~:password","^G","~:user-id","~:success","~:keywordize-keys","~:user"]],"~:order",["^5D","^5E","^5G","^5B","^5C","^G","^5A","^5F"]],"^1<",["^ ","^15",["^F",[]]],"^1=",[["^ ","^1;","^U","^1>","bcryptjs"],["^ ","^1;","^13","^1>","crypto"],["^ ","^1;","^10","^1>","jsonwebtoken"]],"^1?",["^Y","^C","^L","^N","^P","^X","^W","^[","^Z"]],"^R","^H","~:ns-specs",["^ "],"~:ns-spec-vars",["^F",[]],"~:compiler-options",["^2D",[["^5K","~:static-fns"],true,["~:js-options","~:use-babel"],null,["^5K","~:shadow-tweaks"],null,["^5K","~:source-map-inline"],null,["^5K","~:shadow-optimize-constants"],null,["^5K","~:elide-asserts"],false,["^5K","~:optimize-constants"],null,["^5K","^1D"],null,["^5K","~:external-config"],null,["^5K","~:tooling-config"],null,["^5K","~:emit-constants"],null,["^5K","~:load-tests"],null,["^5K","~:form-size-threshold"],null,["^5K","~:global-goog-object&array"],null,["^5K","~:data-readers"],null,["^5K","~:infer-externs"],"~:auto",["^5K","^1F"],null,["^5M","~:js-provider"],"^15",["~:mode"],"~:dev",["^5K","~:fn-invoke-direct"],null,["^5K","~:source-map"],"/dev/null"]]]