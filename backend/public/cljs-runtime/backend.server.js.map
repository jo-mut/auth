{"version":3,"sources":["backend/server.cljs"],"mappings":";AAUA,AAAKA,qBAAI,AAACC;AACV,AAAKC,sBAAK,iBAAAC,mBAAI,2BAAA,3BAACC;AAAL,AAAA,oBAAAD;AAAAA;;AAAA;;;AACV,AAAKE,yBAAQ,AAAUC;AAEvB,AAAMN,uBAAI,2BAAA,YAAA,oCAAA,sCAAA,jHAACO;AAIX,AAAMP,uBAAI,AAAOC;AACjB,AAAMD,uBAAI,AAACQ;AAEX,uBAAA,vBAAMR,mCAAgB,AAACS;AAEvB,GAAM,oFAAA,pFAACC,6CAAE,2BAAA,3BAACN;AAAV,AACE,AAAMJ,uBAAI,AAAOC,mCAAQ,uDAAA,vDAAOK,gCAAKD;;AACrC,uBAAA,vBAAML,2BAAQ,WAAKW,IAAIC;AAAT,OAEGA,PACA,oBAAW,mCAAA,WAAA,OAAA,rDAAUN;;;AALxC;AAOA,2BAAA,3BAAMO;AAAN,OACMb,PACA,iCAASE,oBACA;AAAA,AACE,AAACY;;AACD,mBAAA,ZAACC","names":["backend.server/app","js/shadow.js.shim.module$express","backend.server/port","or__5002__auto__","backend.utils.core/get-env","backend.server/dirname","js/shadow.js.shim.module$path","js/shadow.js.shim.module$cors","js/shadow.js.shim.module$cookie_parser","backend.routes.auth-routes/setup-routes","cljs.core._EQ_","req","res","backend.server/listening","backend.db.connect-db/connect","js/console.log"],"sourcesContent":["(ns backend.server\n  (:require\n   [\"express\" :as express]\n   [\"cookie-parser\" :as cookie-parser]\n   [\"cors\" :as cors]\n   [\"path\" :as path]\n   [backend.utils.core :as utils]\n   [backend.db.connect-db :as connect-db]\n   [backend.routes.auth-routes :as routes]))\n\n(def app (express))\n(def port (or (utils/get-env \"PORT\") 3000))\n(def dirname (.resolve path))\n\n(.use app (cors #js {:origin      \"http://localhost:5173\"\n                     :methods     \"GET,POST,PUT,DELETE\"\n                     :credentials true}))\n\n(.use app (.json express)) ;; allows us to parse incoming requests:req.body\n(.use app (cookie-parser)) ;; allows us to parse incoming cookies\n\n(.use app \"/api/auth\" (routes/setup-routes))\n\n(when (= (utils/get-env \"NODE_ENV\") \"production\")\n  (.use app (.json express (.join path dirname \"/frontend/dist\")))\n  (.get app \"*\" (fn [req res]\n                  (->\n                   res\n                   (.sendFile (.resolve path \"frontend\" \"dist\" \"index.html\"))))))\n\n(defn listening []\n  (-> app\n      (.listen port\n               (fn []\n                 (connect-db/connect)\n                 (js/console.log \"Server listening on port 3000\"))))) "]}