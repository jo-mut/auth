{"version":3,"sources":["backend/models/user_models.cljs"],"mappings":";AAGA,AAAKA,yCACCC,AAAS,sCAAA,+CAAA,2CAAA,qDAAA,SAAA,6DAAA,KAAA,wDAAA,0BAAA,2CAAA,qDAAA,SAAA,6DAAA,sBAAA,2CAAA,qDAAA,SAAA,6DAAA,oCAAA,wDAAA,2CAAA,qDAAA,UAAA,4DAAA,oCAAA,uBAAA,2CAAA,0DAAA,LAOqBC,iEACG,tZAKGA,trBAEIA;AAPP,AACE,OAACC;aAT3B,gBAAA;AAkBf,AAAKC,kCAASH,AAAS,qCAAA,OAAeD","names":["backend.models.user-models/user-schema","js/shadow.js.shim.module$mongoose","js/Date","js/Date.now","backend.models.user-models/user"],"sourcesContent":["(ns backend.models.user-models\n  (:require [\"mongoose\" :as mongoose]))\n\n(def user-schema\n  (-> mongoose (.Schema #js {:email {:type \"String\"\n                          :required true\n                          :unique true}\n                  :password {:type \"String\"\n                             :required true}\n                  :name {:type \"String\"\n                         :required true}\n                  :lastLogin {:type js/Date\n                              :default (fn []\n                                         (js/Date.now))}\n                  :isVerified {:type \"Boolean\"\n                               :default false}\n                  :resetPasswordToken \"String\"\n                  :resetPasswordExpiredAt js/Date\n                  :verificationToken \"String\"\n                  :verificationTokenExpiredAt js/Date}\n             #js {:timestamps true})))\n\n(def user (-> mongoose (.model \"User\" user-schema)))"]}