{"version":3,"sources":["backend/server.cljs"],"mappings":";AAQA,AAAKA,qBAAI,AAACC;AAEV,AAAMD,uBAAI,2BAAA,YAAA,oCAAA,sCAAA,jHAACE;AAIX,AAAMF,uBAAI,AAAOC;AACjB,AAAMD,uBAAI,AAACG;AAEX,uBAAA,vBAAMH,mCAAgB,AAACI;AAEvB,2BAAA,3BAAMC;AAAN,OACML,PACA,iCAAA,OACS;AAAA,AACE,AAACM;;AACD,mBAAA,ZAACC","names":["backend.server/app","js/shadow.js.shim.module$express","js/shadow.js.shim.module$cors","js/shadow.js.shim.module$cookie_parser","backend.routes.auth-routes/setup-routes","backend.server/listening","backend.db.connect-db/connect","js/console.log"],"sourcesContent":["(ns backend.server\n  (:require\n   [\"express\" :as express]\n   [\"cookie-parser\" :as cookie-parser]\n   [\"cors\" :as cors]\n   [backend.db.connect-db :as connect-db]\n   [backend.routes.auth-routes :as routes]))\n\n(def app (express))\n\n(.use app (cors #js {:origin      \"http://localhost:5173\"\n                     :methods     \"GET,POST,PUT,DELETE\"\n                     :credentials true}))\n\n(.use app (.json express)) ;; allows us to parse incoming requests:req.body\n(.use app (cookie-parser)) ;; allows us to parse incoming cookies\n\n(.use app \"/api/auth\" (routes/setup-routes))\n\n(defn listening []\n  (-> app\n      (.listen 3000\n               (fn []\n                 (connect-db/connect)\n                 (js/console.log \"Server listening on port 3000\"))))) "]}