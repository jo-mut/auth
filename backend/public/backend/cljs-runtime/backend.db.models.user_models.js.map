{"version":3,"sources":["backend/db/models/user_models.cljs"],"mappings":";AAIA,AAAKA,4CACCC,AAAS,sCAAA,gCAAA,2BAAA,8BAAA,gBAAA,oBAAA,8BAAA,gBAAA,8BAAA,8BAAA,8CAAA,gCAAA,8BAAA,8BAAA,iCAAA,wCAAA,gBAAA,rYAAoCC,kEAGGA,8CAEJA,uOAEIC,iBACAC,9GACCC,9EAEiBH,8CACAC,4FACAD,jVACAC;AAGxE,AAAKG,qCAASL,AAAS,qCAAA,OAAeD","names":["backend.db.models.user-models/user-schema","js/shadow.js.shim.module$mongoose","js/String","js/Date","js/Date.now","js/Boolean","backend.db.models.user-models/user"],"sourcesContent":["(ns backend.db.models.user-models\n  (:require [\"mongoose\" :as mongoose]))\n\n\n(def user-schema\n  (-> mongoose (.Schema #js {:email #js {:type     js/String\n                                         :required true\n                                         :unique   true}\n                             :password #js {:type     js/String\n                                            :required true}\n                             :name #js {:type     js/String\n                                        :required true}\n                             :lastLogin #js {:type    js/Date\n                                             :default js/Date.now}\n                             :isVerified #js {:type    js/Boolean\n                                              :default false}\n                             :resetPasswordToken         #js {:type     js/String}\n                             :resetPasswordExpiredAt     #js {:type     js/Date}\n                             :verificationToken          #js {:type     js/String}\n                             :verificationTokenExpiredAt #js {:type     js/Date}}\n                        #js {:timestamps true})))\n\n(def user (-> mongoose (.model \"User\" user-schema)))"]}