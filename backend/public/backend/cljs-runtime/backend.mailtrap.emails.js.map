{"version":3,"sources":["backend/mailtrap/emails.cljs"],"mappings":";AAKA,kDAAA,lDAAMA,4GACHC,MAAMC;AADT,AAEE,iBAAA,CAAA,dAAMC,yBAA4BF;AAAlC,OAEG,2CAAA,qEAAA,4HAAA,5OAAOG,qDAAuCC,oCACAF,qDAEA,AAACG,6DAAsCJ,3MAErF,yQAAO,WAAKK,3RAEZ;AAFO,AACE,mBAAA,ZAACC,sCAAyCD;UAC3C,WAAKE;AAAL,AACE,mBAAA,ZAACD,mCAAsCC;;;AAEtD,6CAAA,7CAAMC,kGACHT,MAAMU;AADT,AAEE,iBAAA,CAAA,dAAMR,yBAA4BF;AAAlC,OAEG,2CAAA,qEAAA,uCAAA,8DAAA,uBAAA,yCAAA,rRAAOG,qDAAkDC,oCACAF,mKAIWQ,5PAEpE,0TAAO,WAAKJ,5UAEZ;AAFO,AACE,mBAAA,ZAACC,4CAA+CD;UACjD,WAAKE;AAAL,AACE,mBAAA,ZAACD,2CAA8CC;;;AAE9D,oDAAA,pDAAMG,gHACHX,MAAMY;AADT,AAEE,gBAAA,CAAA,bAAMC,wBAA2Bb;AAAjC,OAEG,2CAAA,oEAAA,yHAAA,xOAAOG,qDAAuCC,oCACAS,sDAEA,AAACC,iEAA0CF,hNAEzF,iQAAO,WAAKN,nRAEZ;AAFO,AACE,mBAAA,ZAACC,qDAAwDD;UAC1D,WAAKE;AAAL,AACE,mBAAA,ZAACD,iDAAoDC;;;AAGpE,4DAAA,5DAAMO,gIACHf;AADH,AAEE,gBAAA,CAAA,bAAMa,wBAA2Bb;AAAjC,OAEG,2CAAA,oEAAA,qHAAA,pOAAOG,qDAAuCC,oCACAS,2DAEA,AAACG,pJAE/C,6PAAO,WAAKV,/QAEZ;AAFO,AACE,mBAAA,ZAACC,6DAAgED;UAClE,WAAKE;AAAL,AACE,mBAAA,ZAACD,yDAA4DC","names":["backend.mailtrap.emails/send-verification-email","email","verification-token","recipients","backend.mailtrap.core/mailtrap-client","backend.mailtrap.core/sender","backend.mailtrap.email-templates/verification-email-template","res","js/console.log","err","backend.mailtrap.emails/send-welcome-email","user-name","backend.mailtrap.emails/send-password-reset-email","reset-url","recipient","backend.mailtrap.email-templates/password-reset-request-template","backend.mailtrap.emails/send-reset-password-success-email","backend.mailtrap.email-templates/password-reset-success-template"],"sourcesContent":["(ns backend.mailtrap.emails\n  (:require\n   [backend.mailtrap.email-templates :as templates]\n   [backend.mailtrap.core :as m-client]))\n\n(defn send-verification-email\n  [email verification-token]\n  (let [recipients #js [#js {:email email}]]\n    (->\n     (.send m-client/mailtrap-client #js {:from    m-client/sender\n                                          :to      recipients\n                                          :subject \"Verify your email!\"\n                                          :html    (templates/verification-email-template verification-token)\n                                          :category \"Email verification\"})\n     (.then (fn [res]\n              (js/console.log \"Email sent successfully\" res)))\n     (.catch (fn [err]\n               (js/console.log \"Failed to send email\" err))))))\n\n(defn send-welcome-email\n  [email user-name]\n  (let [recipients #js [#js {:email email}]]\n    (->\n     (.send m-client/mailtrap-client #js {:from               m-client/sender\n                                          :to                 recipients\n                                          :subject            \"Verify your email!\"\n                                          :template-uuid      \"b31b68ef-cabb-4506-9b77-bc56a8b2fde3\"\n                                          :template_variables #js {:company_info_name \"Auth\",\n                                                                   :name user-name}\n                                          :category           \"Welcome email verification\"})\n     (.then (fn [res]\n              (js/console.log \"Welcome email sent succefully\" res)))\n     (.catch (fn [err]\n               (js/console.log \"Failed to send welcome email\" err))))))\n\n(defn send-password-reset-email\n  [email reset-url]\n  (let [recipient #js [#js {:email email}]]\n    (->\n     (.send m-client/mailtrap-client #js {:from    m-client/sender\n                                          :to      recipient\n                                          :subject \"Reset your password!\"\n                                          :html    (templates/password-reset-request-template reset-url)\n                                          :category \"Password Reset\"})\n     (.then (fn [res]\n              (js/console.log \"Password reset email sent successfully\" res)))\n     (.catch (fn [err]\n               (js/console.log \"Error sending password reset email\" err))))))\n\n\n(defn send-reset-password-success-email\n  [email]\n  (let [recipient #js [#js {:email email}]]\n    (->\n     (.send m-client/mailtrap-client #js {:from    m-client/sender\n                                          :to      recipient\n                                          :subject \"Password Reset Successful\"\n                                          :html    (templates/password-reset-success-template)\n                                          :category \"Password Reset\"})\n     (.then (fn [res]\n              (js/console.log \"Password reset success email sent successfully\" res)))\n     (.catch (fn [err]\n               (js/console.log \"Error sending password reset success email\" err))))))"]}