{
"version":3,
"file":"module$node_modules$scheduler$cjs$scheduler_development.js",
"lineCount":360,
"mappings":"AAAAA,cAAA,CAAA,uDAAA,GAA4E,QAAQ,CAACC,MAAD,EAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,OAAvB,CAAgC;AAejH,WAAQ,EAAG;AAoMdC,YAASA,KAAI,CAACC,IAAD,EAAOC,IAAP,CAAa;AACxB,UAAIC,QAAQF,IAAKG,CAAAA,MAAjB;AACAH,UAAKD,CAAAA,IAAL,CAAUE,IAAV,CAAA;AAwB6B,OAAA;AAG7B,aAAA,CAAA,CAAA,CAAa;AACX,cAAIG,cAAcF,KAAdE,GAAsB,CAAtBA,KAA4B,CAAhC,EACIC,SA5BCL,IA4BQ,CAAKI,WAAL,CADb;AAGA,cAAeE,IAAAA,EAAf,KAAID,MAAJ,IAAoD,CAApD,GAA4BE,OAAA,CAAQF,MAAR,EA9BjBJ,IA8BiB,CAA5B;AA9BKD,gBAgCH,CAAKI,WAAL,CAEA,GAlCSH,IAkCT,EAlCGD,IAiCH,CAAKE,KAAL,CACA,GADcG,MACd,EAAAH,KAAA,GAAQE,WAAR;AAJF;AAOE,kBAAA,CAAA;AAPF;AAJW;AAHgB;AA1BL;AAK1BI,YAASA,KAAI,CAACR,IAAD,CAAO;AACdS,UAAAA,GAAQT,IAAA,CAAK,CAAL,CAARS;AACJ,aAAiBH,IAAAA,EAAV,KAAAG,IAAA,GAAsB,IAAtB,GAA6BA,IAApC;AAFkB;AAIpBC,YAASA,IAAG,CAACV,IAAD,CAAO;AACjB,UAAIS,QAAQT,IAAA,CAAK,CAAL,CAAZ;AAEA,UAAcM,IAAAA,EAAd,KAAIG,KAAJ,CAAyB;AACvB,YAAIE,OAAOX,IAAKU,CAAAA,GAAL,EAAX;AAEA,YAAIC,IAAJ,KAAaF,KAAb,CAAoB;AAClBT,cAAA,CAAK,CAAL,CAAA,GAAUW,IAAV;AA6B2B,WAAA;AAI/B,iBAHA,IAAIT,QA7BqBU,CA6BzB,EACIT,SA9BSH,IA8BKG,CAAAA,MAElB,EAAOD,KAAP,GAAeC,MAAf,CAAA,CAAuB;AACrB,kBAAIU,YAA0B,CAA1BA,IAAaX,KAAbW,GAAqB,CAArBA,IAA8B,CAAlC,EACIC,OAlCOd,IAkCA,CAAKa,SAAL,CADX,EAEIE,aAAaF,SAAbE,GAAyB,CAF7B,EAGIC,QApCOhB,IAoCC,CAAKe,UAAL,CAHZ;AAKA,kBAAaT,IAAAA,EAAb,KAAIQ,IAAJ,IAAgD,CAAhD,GAA0BP,OAAA,CAAQO,IAAR,EAtCTH,IAsCS,CAA1B;AACgBL,oBAAAA,EAAd,KAAIU,KAAJ,IAAkD,CAAlD,GAA2BT,OAAA,CAAQS,KAAR,EAAeF,IAAf,CAA3B,IAvCSd,IAwCP,CAAKE,KAAL,CAEA,GAFcc,KAEd,EA1COhB,IAyCP,CAAKe,UAAL,CACA,GA1CaJ,IA0Cb,EAAAT,KAAA,GAAQa,UAHV,KAvCSf,IA4CP,CAAKE,KAAL,CAEA,GAFcY,IAEd,EA9COd,IA6CP,CAAKa,SAAL,CACA,GA9CaF,IA8Cb,EAAAT,KAAA,GAAQW,SAPV,CAAA;AADF,oBAUO,KAAcP,IAAAA,EAAd,KAAIU,KAAJ,IAAkD,CAAlD,GAA2BT,OAAA,CAAQS,KAAR,EAhDjBL,IAgDiB,CAA3B;AAhDIX,oBAiDT,CAAKE,KAAL,CAEA,GAFcc,KAEd,EAnDShB,IAkDT,CAAKe,UAAL,CACA,GAnDeJ,IAmDf,EAAAT,KAAA,GAAQa,UAAR;AAHK;AAML,sBAAA,CAAA;AANK;AAhBc;AAJQ;AA9BT;AAKpB,eAAON,KAAP;AARuB;AAUvB,aAAO,IAAP;AAbe;AAmEnBF,YAASA,QAAO,CAACU,CAAD,EAAIC,CAAJ,CAAO;AAErB,UAAIC,OAAOF,CAAEG,CAAAA,SAATD,GAAqBD,CAAEE,CAAAA,SAA3B;AACA,aAAgB,CAAT,KAAAD,IAAA,GAAaA,IAAb,GAAoBF,CAAEI,CAAAA,EAAtB,GAA2BH,CAAEG,CAAAA,EAApC;AAHqB;AAqDvBC,YAASA,SAAQ,CAACC,OAAD,CAAU;AACzB,UAAiB,IAAjB,KAAIC,QAAJ,CAAuB;AACrB,YAAIC,SAASC,aAAb;AACAA,qBAAA,IAAiBH,OAAQpB,CAAAA,MAAzB;AAEA,YAAIuB,aAAJ,GAAoB,CAApB,GAAwBC,YAAxB,CAAsC;AACpCA,sBAAA,IAAgB,CAAhB;AAEA,cAvBmBC,MAuBnB,GAAID,YAAJ,CAAuC;AAErCE,mBAAA,CAAA,KAAA,CAAiB,4GAAjB,CAAA;AACAC,sCAAA,EAAA;AACA;AAJqC;AAOvC,cAAIC,cAAc,IAAIC,UAAJ,CAA8B,CAA9B,GAAeL,YAAf,CAAlB;AACAI,qBAAYE,CAAAA,GAAZ,CAAgBT,QAAhB,CAAA;AACAU,wBAAA,GAAiBH,WAAYI,CAAAA,MAA7B;AACAX,kBAAA,GAAWO,WAAX;AAboC;AAgBtCP,gBAASS,CAAAA,GAAT,CAAaV,OAAb,EAAsBE,MAAtB,CAAA;AApBqB;AADE;AA+B3BK,YAASA,2BAA0B,EAAG;AACpC,UAAIK,SAASD,cAAb;AACAP,kBAAA,GAAe,CAAf;AAEAH,cAAA,GADAU,cACA,GADiB,IACjB;AACAR,mBAAA,GAAgB,CAAhB;AACA,aAAOS,MAAP;AANoC;AAQtCC,YAASA,cAAa,CAACC,IAAD,EAAOC,EAAP,CAAW;AAE7BC,oBAAA,CApEaC,CAoEb,CAAA,EAAA;AAEiB,UAAjB,KAAIhB,QAAJ,IAIEF,QAAA,CAAS,CAxDMmB,CAwDN,EAAsB,IAAtB,GAAiBH,EAAjB,EAA4BD,IAAKhB,CAAAA,EAAjC,EAAqCgB,IAAKK,CAAAA,aAA1C,CAAT,CAJF;AAJ6B;AA4GjCC,YAASA,cAAa,CAACC,WAAD,CAAc;AAIlC,WAFA,IAAIC,QAAQrC,IAAA,CAAKsC,UAAL,CAEZ,EAAiB,IAAjB,KAAOD,KAAP,CAAA,CAAuB;AACrB,YAAuB,IAAvB,KAAIA,KAAME,CAAAA,QAAV;AAEErC,aAAA,CAAIoC,UAAJ,CAAA;AAFF,cAGO,KAAID,KAAMG,CAAAA,SAAV,IAAuBJ,WAAvB;AAELlC,aAAA,CAAIoC,UAAJ,CAME,EALFD,KAAMzB,CAAAA,SAKJ,GALgByB,KAAMI,CAAAA,cAKtB,EAJFlD,IAAA,CAAKmD,SAAL,EAAgBL,KAAhB,CAIE,EADAT,aAAA,CAAcS,KAAd,EAAqBD,WAArB,CACA,EAAAC,KAAMM,CAAAA,QAAN,GAAiB,CAAA,CAAjB;AARG;AAYL;AAZK;AAePN,aAAA,GAAQrC,IAAA,CAAKsC,UAAL,CAAR;AAnBqB;AAJW;AA2BpCM,YAASA,cAAa,CAACR,WAAD,CAAc;AAClCS,4BAAA,GAAyB,CAAA,CAAzB;AACAV,mBAAA,CAAcC,WAAd,CAAA;AAEA,UAAI,CAACU,uBAAL;AACE,YAAwB,IAAxB,KAAI9C,IAAA,CAAK0C,SAAL,CAAJ;AACEI,iCACA,GAD0B,CAAA,CAC1B,EAAAC,mBAAA,CAAoBC,SAApB,CAAA;AAFF,cAGO;AACL,cAAIC,aAAajD,IAAA,CAAKsC,UAAL,CAAjB;AAEmB,cAAnB,KAAIW,UAAJ,IACEC,kBAAA,CAAmBN,aAAnB,EAAkCK,UAAWT,CAAAA,SAA7C,GAAyDJ,WAAzD,CADF;AAHK;AAJT;AAJkC;AAkBpCY,YAASA,UAAS,CAACG,gBAAD,EAAmBC,WAAnB,CAAgC;AA5E7B,UAAjB,KAAIpC,QAAJ,IACEF,QAAA,CAAS,CAvHYuC,CAuHZ,EAA4B,IAA5B,GA6EcD,WA7Ed,EAAkCE,mBAAlC,CAAT,CADF;AAkFFR,6BAAA,GAA0B,CAAA,CAA1B;AAEID,4BAAJ,KAEEA,sBACA,GADyB,CAAA,CACzB,EAAAU,iBAAA,EAHF;AAMAC,sBAAA,GAAmB,CAAA,CAAnB;AACA,UAAIC,wBAAwBC,oBAA5B;AAEA,SAAI;AAEA,WAAI;AA8BRvB,uBAAA,CAAcC,WAAd,CAAA;AAGA,eAFAuB,WAEA,GAFc3D,IAAA,CAAK0C,SAAL,CAEd,EAAuB,IAAvB,KAAOiB,WAAP,KACM,EAAAA,WAAYlB,CAAAA,cAAZ,GAA6BL,WAA7B,CADN,IAhCsBe,gBAgCtB,IACwE,CAAAS,iBAAA,EADxE,EAAA,CAA6D;AAM3D,gBAAIrB,WAAWoB,WAAYpB,CAAAA,QAA3B;AAEA,gBAAiB,IAAjB,KAAIA,QAAJ,CAAuB;AACrBoB,yBAAYpB,CAAAA,QAAZ,GAAuB,IAAvB;AACAmB,kCAAA,GAAuBC,WAAYzB,CAAAA,aAAnC;AACA,kBAAI2B,yBAAyBF,WAAYlB,CAAAA,cAArCoB,IAAuDzB,WAA3D,EACYuB,OAAAA,WADZ,EACyBvB,KAAAA,WADzB;AA3KF0B,0BAAA,EAAA;AACA/B,4BAAA,CAnHWgC,CAmHX,CAAA,GAA2BlC,IAAKK,CAAAA,aAAhC;AACAH,4BAAA,CAnHkBiC,CAmHlB,CAAA,GAAkCnC,IAAKhB,CAAAA,EAAvC;AACAkB,4BAAA,CAnHiBkC,CAmHjB,CAAA,GAAiCH,YAAjC;AAEiB,kBAAjB,KAAI9C,QAAJ,IACEF,QAAA,CAAS,CA/FIoD,CA+FJ,EAAoB,IAApB,GAAepC,EAAf,EAA0BD,IAAKhB,CAAAA,EAA/B,EAAmCiD,YAAnC,CAAT,CADF;AAwKE,kBAAIK,uBAAuB5B,QAAA,CAASsB,sBAAT,CAA3B;AACAzB,yBAAA,GAAc9C,OAAQ8E,CAAAA,YAAR,EAAd;AAEoC,wBAApC,KAAI,MAAOD,qBAAX,IACER,WAAYpB,CAAAA,QAjKhB,GAiK2B4B,oBAjK3B,EAkKkBR,IAlKlB,GAkKkBA,WAlKlB,EAkK+BvB,EAlK/B,GAkK+BA,WAlK/B,EAJAL,cAAA,CA9HWgC,CA8HX,CAIA,GAlJaM,CAkJb,EAHAtC,cAAA,CA9HkBiC,CA8HlB,CAGA,GAHkC,CAGlC,EAFAjC,cAAA,CA9HiBkC,CA8HjB,CAEA,GAFiC,CAEjC,EAAiB,IAAjB,KAAIjD,QAAJ,IACEF,QAAA,CAAS,CAzGMwD,CAyGN,EAAsB,IAAtB,GAAiBxC,EAAjB,EAA4BD,IAAKhB,CAAAA,EAAjC,EAAqCiD,YAArC,CAAT,CA+JA,KAKsBH,IAIpB,GAJoBA,WAIpB,EAJiCvB,EAIjC,GAJiCA,WAIjC,EAxNJL,cAAA,CAnFWgC,CAmFX,CAwNI,GA3TSM,CA2TT,EAvNJtC,cAAA,CAnFkBiC,CAmFlB,CAuNI,GAvN8B,CAuN9B,EAtNJjC,cAAA,CAlFaC,CAkFb,CAAA,EAsNI,EApNa,IAoNb,KApNAhB,QAoNA,IAnNFF,QAAA,CAAS,CAlESyD,CAkET,EAAyB,IAAzB,GAAoBzC,EAApB,EAA+BD,IAAKhB,CAAAA,EAApC,CAAT,CAmNE,EAHE8C,WAAYhB,CAAAA,QAGd,GAHyB,CAAA,CAGzB,EAAIgB,WAAJ,KAAoB3D,IAAA,CAAK0C,SAAL,CAApB;AACExC,iBAAA,CAAIwC,SAAJ,CAVJ,CAAA;AAcAP,2BAAA,CAAcC,WAAd,CAAA;AAtBqB,aAAvB;AAwBElC,iBAAA,CAAIwC,SAAJ,CAAA;AAxBF;AA2BAiB,uBAAA,GAAc3D,IAAA,CAAK0C,SAAL,CAAd;AAnC2D;AAuC7D,cAAoB,IAApB,KAAIiB,WAAJ;AACE,gBAAA,2BAAO,CAAA,CAAP;AADF,gBAAA;AAGE,gBAAIV,aAAajD,IAAA,CAAKsC,UAAL,CAAjB;AAEmB,gBAAnB,KAAIW,UAAJ,IACEC,kBAAA,CAAmBN,aAAnB,EAAkCK,UAAWT,CAAAA,SAA7C,GAAyDJ,WAAzD,CADF;AAIA,oCAAA,GAAO,CAAA,CAAP;AATF;AAvEM,iBAAO,wBAAP;AADE,SAEF,QAAOoC,KAAP,CAAc;AACd,cAAoB,IAApB,KAAIb,WAAJ,CAA0B;AACxB,gBAAIvB,cAAc9C,OAAQ8E,CAAAA,YAAR,EAAlB;AACgBT,4BAAAA,GAAAA,WAAAA;AA/ItB5B,0BAAA,CAvGWgC,CAuGX,CAAA,GAvHaM,CAuHb;AACAtC,0BAAA,CAvGkBiC,CAuGlB,CAAA,GAAkC,CAAlC;AACAjC,0BAAA,CAtGaC,CAsGb,CAAA,EAAA;AAEiB,gBAAjB,KAAIhB,QAAJ,IACEF,QAAA,CAAS,CArFM2D,CAqFN,EAAsB,IAAtB,GA0IwBrC,WA1IxB,EAA4BP,gBAAKhB,CAAAA,EAAjC,CAAT,CADF;AA4IM8C,uBAAYhB,CAAAA,QAAZ,GAAuB,CAAA,CAAvB;AAHwB;AAM1B,gBAAM6B,KAAN;AAPc;AAJhB,OAAJ,QAiBU;AACRb,mBAtHA,GAsHc,IAtHd,EAuHAD,oBAvHA,GAuHuBD,qBAvHvB,EAwHAD,gBAxHA,GAwHmB,CAAA,CAxHnB,EA6HyBkB,qBA7HzB,GA2HqBpF,OAAQ8E,CAAAA,YAARM,EA3HrB,EAFApB,mBAAA,EAEA,EAAiB,IAAjB,KAAItC,QAAJ,IACEF,QAAA,CAAS,CAjHa6D,CAiHb,EAA6B,IAA7B,GAAwB7C,qBAAxB,EAAmCwB,mBAAnC,CAAT,CADF;AAqHQ;AAlCsC;AAyKlDsB,YAASA,wBAAuB,CAAC1C,aAAD,CAAgB;AAC9C,aAAQA,aAAR;AACE,aAxZoB2C,CAwZpB;AACE,iBA5O2BC,CAAC,CA4O5B;AAEF,aA1ZuBC,CA0ZvB;AACE,iBA7OuBC,GA6OvB;AAEF,aA1ZeC,CA0Zf;AACE,iBApPkBC,UAoPlB;AAEF,aA9ZcC,CA8Zd;AACE,iBAjPqBC,KAiPrB;AAGF;AACE,iBAtPwBC,IAsPxB;AAfJ;AAD8C;AAlqBhD,QAEkB,WAFlB,KAEA,MAAOC,OAFP,IAG0B,UAH1B,KAGA,MAAOC,eAHP,CAGsC;AAGpC,UAAIC,YAAY,IAAhB,EACIC,aAAa,IADjB,EAGIC,iBAAiBA,QAAS,EAAG;AAC/B,YAAkB,IAAlB,KAAIF,SAAJ;AACE,aAAI;AACF,gBAAIpD,cAAc9C,OAAQ8E,CAAAA,YAAR,EAAlB;AAGAoB,qBAAA,CAFuBG,CAAAA,CAEvB,EAA4BvD,WAA5B,CAAA;AAEAoD,qBAAA,GAAY,IAAZ;AANE,WAOF,QAAOI,CAAP,CAAU;AAEV,kBADAC,UAAA,CAAWH,cAAX,EAA2B,CAA3B,CACME,EAAAA,CAAN;AAFU;AARd;AAD+B,OAHjC,EAmBIxC,cAAc0C,IAAKC,CAAAA,GAAL,EAnBlB;AAqBAzG,aAAQ8E,CAAAA,YAAR,GAAuB4B,QAAS,EAAG;AACjC,eAAOF,IAAKC,CAAAA,GAAL,EAAP,GAAoB3C,WAApB;AADiC,OAAnC;AAIA,UAAAL,sBAAsBA,QAAS,CAACkD,EAAD,CAAK;AAChB,YAAlB,KAAIT,SAAJ,GAEEK,UAAA,CAAW9C,mBAAX,EAAgC,CAAhC,EAAmCkD,EAAnC,CAFF,IAIET,SACA,GADYS,EACZ,EAAAJ,UAAA,CAAWH,cAAX,EAA2B,CAA3B,CALF,CAAA;AADkC,OAApC;AAUA,UAAAxC,qBAAqBA,QAAS,CAAC+C,EAAD,EAAKnE,EAAL,CAAS;AACrC2D,kBAAA,GAAaI,UAAA,CAAWI,EAAX,EAAenE,EAAf,CAAb;AADqC,OAAvC;AAIA,UAAAyB,oBAAoBA,QAAS,EAAG;AAC9B2C,oBAAA,CAAaT,UAAb,CAAA;AAD8B,OAAhC;AAIA,UAAA7B,oBAAoBA,QAAS,EAAG;AAC9B,eAAO,CAAA,CAAP;AAD8B,OAAhC;AAIA,UAAAuC,eAAe7G,OAAQ8G,CAAAA,uBAAvBD,GAAiDE,QAAS,EAAG;OAA7D;AAlDoC,KAHtC,KAsDO;AAEL,UAAIC,cAAchB,MAAOgB,CAAAA,WAAzB,EACIC,QAAQjB,MAAOQ,CAAAA,IADnB,EAEIU,cAAclB,MAAOO,CAAAA,UAFzB,EAGIY,gBAAgBnB,MAAOY,CAAAA,YAH3B;AAKuB,iBAAvB,KAAI,MAAO7E,QAAX,KAKMqF,YAOJ,GAP2BpB,MAAOoB,CAAAA,oBAOlC,EALqC,UAKrC,KALI,MAHwBpB,OAAOqB,CAAAA,qBAQnC,IAHEtF,OAAA,CAAA,KAAA,CAAiB,yIAAjB,CAGF,EAAoC,UAApC,KAAI,MAAOqF,aAAX,IAEErF,OAAA,CAAA,KAAA,CAAiB,wIAAjB,CAdJ;AAkBA,UAA2B,QAA3B,KAAI,MAAOiF,YAAX,IAAkE,UAAlE,KAAuC,MAAOA,YAAYP,CAAAA,GAA1D;AACEzG,eAAQ8E,CAAAA,YAAR,GAAuB4B,QAAS,EAAG;AACjC,iBAAOM,WAAYP,CAAAA,GAAZ,EAAP;AADiC,SAAnC;AADF,YAIO;AACL,YAAIa,eAAeL,KAAMR,CAAAA,GAAN,EAAnB;AAEAzG,eAAQ8E,CAAAA,YAAR,GAAuB4B,QAAS,EAAG;AACjC,iBAAOO,KAAMR,CAAAA,GAAN,EAAP,GAAqBa,YAArB;AADiC,SAAnC;AAHK;AAQP,UAAIC,uBAAuB,CAAA,CAA3B,EACIC,wBAAwB,IAD5B,EAEIC,gBAAgB,CAAC,CAFrB,EAOIC,gBAAgB,CAPpB,EAQIC,WAAW,CARf;AAaErD,uBAAA,GAAoBA,QAAS,EAAG;AAC9B,eAAOtE,OAAQ8E,CAAAA,YAAR,EAAP,IAAiC6C,QAAjC;AAD8B,OAAhC;AAKAd,kBAAA,GAAeA,QAAS,EAAG;OAA3B;AAGF7G,aAAQ8G,CAAAA,uBAAR,GAAkCC,QAAS,CAACa,GAAD,CAAM;AACrC,SAAV,GAAIA,GAAJ,IAAqB,GAArB,GAAeA,GAAf,GAEE7F,OAAA,CAAA,KAAA,CAAiB,kHAAjB,CAFF,GAOE2F,aAPF,GAMU,CAAV,GAAIE,GAAJ,GACkBC,IAAKC,CAAAA,KAAL,CAAW,IAAX,GAAkBF,GAAlB,CADlB,GAIkB,CAVlB;AAD+C,OAAjD;AA8CA,UAAIG,UAAU,IAAI9B,cAAJ,EAAd,EACI+B,OAAOD,OAAQE,CAAAA,KADnB;AAEAF,aAAQG,CAAAA,KAAMC,CAAAA,SAAd,GAjC+BC,QAAS,EAAG;AACzC,YAA8B,IAA9B,KAAIZ,qBAAJ,CAAoC;AAClC,cAAI1E,cAAc9C,OAAQ8E,CAAAA,YAAR,EAAlB;AAIA6C,kBAAA,GAAW7E,WAAX,GAAyB4E,aAAzB;AAGA,aAAI;AACgBF,iCAAAa,CAHGxE,CAAAA,CAGHwE,EAAwCvF,WAAxCuF,CAElB,GAMEL,IAAKM,CAAAA,WAAL,CAAiB,IAAjB,CANF,IACEf,oBACA,GADuB,CAAA,CACvB,EAAAC,qBAAA,GAAwB,IAF1B,CAAA;AAHE,WAWF,QAAOtC,KAAP,CAAc;AAId,kBADA8C,IAAKM,CAAAA,WAAL,CAAiB,IAAjB,CACMpD,EAAAA,KAAN;AAJc;AAnBkB,SAApC;AA0BEqC,8BAAA,GAAuB,CAAA,CAAvB;AA1BF;AADyC,OAiC3C;AAEA9D,yBAAA,GAAsBA,QAAS,CAACR,QAAD,CAAW;AACxCuE,6BAAA,GAAwBvE,QAAxB;AAEKsE,4BAAL,KACEA,oBACA,GADuB,CAAA,CACvB,EAAAS,IAAKM,CAAAA,WAAL,CAAiB,IAAjB,CAFF;AAHwC,OAA1C;AASA1E,wBAAA,GAAqBA,QAAS,CAACX,QAAD,EAAWT,EAAX,CAAe;AAC3CiF,qBAAA,GAAgBP,WAAA,CAAY,QAAS,EAAG;AACtCjE,kBAAA,CAASjD,OAAQ8E,CAAAA,YAAR,EAAT,CAAA;AADsC,SAAxB,EAEbtC,EAFa,CAAhB;AAD2C,OAA7C;AAMAyB,uBAAA,GAAoBA,QAAS,EAAG;AAC9BkD,qBAAA,CAAcM,aAAd,CAAA;AAEAA,qBAAA,GAAgB,CAAC,CAAjB;AAH8B,OAAhC;AA3HK;AA4NP,QAAIjD,eAAe,CAAnB,EACIR,sBAAsB,CAD1B;AAGIuE,WAAAA,GACyB,UAA7B,KAAA,MAAOC,kBAAP,GAA0C,IAAIA,iBAAJ,CAFjBC,CAEiB,GAA2CvG,UAAWwG,CAAAA,iBAAtD,CAA1C,GACuB,UAAvB,KAAA,MAAOC,YAAP,GAAoC,IAAIA,WAAJ,CAHXF,CAGW,GAAqCvG,UAAWwG,CAAAA,iBAAhD,CAApC,GAAyG,IAFrGH;AAIJ,QAAI9F,iBAA4C,IAA1B,KAAA8F,OAAA,GAAiC,IAAIrG,UAAJ,CAAeqG,OAAf,CAAjC,GAAyE,EAA/F;AAQE9F,kBAAA,CANagC,CAMb,CAAA,GAtBeM,CAsBf;AAGAtC,kBAAA,CANeC,CAMf,CAAA,GAA6B,CAA7B;AAQF,QAAIb,eAPFY,cAAA,CAToBiC,CASpB,CAOE7C,GAPgC,CAOpC,EACIO,iBAAiB,IADrB,EAEIV,WAAW,IAFf,EAGIE,gBAAgB,CAHpB,EAqJIwB,YAAY,EArJhB,EAsJIJ,aAAa,EAtJjB,EAwJI4F,gBAAgB,CAxJpB,EAyJIvE,cAAc,IAzJlB,EA0JID,uBAxLiByE,CA8BrB,EA4JI3E,mBAAmB,CAAA,CA5JvB,EA6JIV,0BAA0B,CAAA,CA7J9B,EA8JID,yBAAyB,CAAA,CA9J7B;AA2fIuF,WAAAA,GAAsB,CACxBC,4BAtdFA,QAAoC,EAAG;AACrClH,kBAAA,GA1C2BmH,MA0C3B;AACA5G,oBAAA,GAAiB,IAAIuG,WAAJ,CAA+B,CAA/B,GAAgB9G,YAAhB,CAAjB;AACAH,cAAA,GAAW,IAAIQ,UAAJ,CAAeE,cAAf,CAAX;AACAR,mBAAA,GAAgB,CAAhB;AAJqC,KAqdb,EAEII,0BAFJ,EAGxBuG,sBAAuBA,OAHC,CAAtBO;AAMJ9I,WAAQiJ,CAAAA,qBAAR,GA7hBmBtD,CA6hBnB;AACA3F,WAAQkJ,CAAAA,0BAAR,GAliBwB3D,CAkiBxB;AACAvF,WAAQmJ,CAAAA,oBAAR,GAhiBkBtD,CAgiBlB;AACA7F,WAAQoJ,CAAAA,uBAAR,GAliBqBP,CAkiBrB;AACA7I,WAAQ8I,CAAAA,kBAAR,GAA6BA,OAA7B;AACA9I,WAAQqJ,CAAAA,6BAAR,GAriB2B5D,CAqiB3B;AACAzF,WAAQsJ,CAAAA,uBAAR,GAvCAA,QAAgC,CAAC/G,IAAD,CAAO;AAEnC,UAAIA,IAAKc,CAAAA,QAAT,CAAmB;AACjB,YAAIP,cAAc9C,OAAQ8E,CAAAA,YAAR,EAAlB;AAtZFrC,sBAAA,CA3FaC,CA2Fb,CAAA,EAAA;AAEiB,YAAjB,KAAIhB,QAAJ,IACEF,QAAA,CAAS,CAzEO+H,CAyEP,EAAuB,IAAvB,GAoZczG,WApZd,EAoZQP,IApZ0BhB,CAAAA,EAAlC,CAAT,CADF;AAsZEgB,YAAKc,CAAAA,QAAL,GAAgB,CAAA,CAAhB;AAHiB;AAUrBd,UAAKU,CAAAA,QAAL,GAAgB,IAAhB;AAZqC,KAuCvC;AACAjD,WAAQwJ,CAAAA,0BAAR,GApDAA,QAAmC,EAAG;AAE/BhG,6BAAL,IAAiCU,gBAAjC,KACEV,uBACA,GAD0B,CAAA,CAC1B,EAAAC,mBAAA,CAAoBC,SAApB,CAFF;AAFoC,KAoDtC;AACA1D,WAAQyJ,CAAAA,gCAAR,GA1BAA,QAAyC,EAAG;AAC1C,aAAOrF,oBAAP;AAD0C,KA0B5C;AACApE,WAAQ0J,CAAAA,6BAAR,GA9CAA,QAAsC,EAAG;AACvC,aAAOhJ,IAAA,CAAK0C,SAAL,CAAP;AADuC,KA8CzC;AACApD,WAAQ2J,CAAAA,aAAR,GA/LAA,QAAsB,CAACC,YAAD,CAAe;AAGnC,aAAQxF,oBAAR;AACE,aAhXoBmB,CAgXpB;AACA,aAhXuBE,CAgXvB;AACA,aAhXiBoD,CAgXjB;AAEE,cAAAjG,gBAlXeiG,CAkXf;AACA;AAEF;AAEEjG,uBAAA,GAAgBwB,oBAAhB;AAVJ;AAcA,UAAID,wBAAwBC,oBAA5B;AACAA,0BAAA,GAAuBxB,aAAvB;AAEA,SAAI;AACF,eAAOgH,YAAA,EAAP;AADE,OAAJ,QAEU;AACRxF,4BAAA,GAAuBD,qBAAvB;AADQ;AAtByB,KA+LrC;AACAnE,WAAQ6J,CAAAA,uBAAR,GA3DAA,QAAgC,EAAG;KA2DnC;AACA7J,WAAQ8J,CAAAA,qBAAR,GAnB4BjD,YAmB5B;AACA7G,WAAQ+J,CAAAA,wBAAR,GAzNAA,QAAiC,CAACnH,aAAD,EAAgBgH,YAAhB,CAA8B;AAC7D,aAAQhH,aAAR;AACE,aAvVoB2C,CAuVpB;AACA,aAvVuBE,CAuVvB;AACA,aAvViBoD,CAuVjB;AACA,aAvVchD,CAuVd;AACA,aAvVeF,CAuVf;AACE;AAEF;AACE/C,uBAAA,GA7VeiG,CA6Vf;AATJ;AAYA,UAAI1E,wBAAwBC,oBAA5B;AACAA,0BAAA,GAAuBxB,aAAvB;AAEA,SAAI;AACF,eAAOgH,YAAA,EAAP;AADE,OAAJ,QAEU;AACRxF,4BAAA,GAAuBD,qBAAvB;AADQ;AAlBmD,KAyN/D;AACAnE,WAAQgK,CAAAA,yBAAR,GArIAA,QAAkC,CAACpH,aAAD,EAAgBK,QAAhB,EAA0BgH,OAA1B,CAAmC;AACnE,UAAInH,cAAc9C,OAAQ8E,CAAAA,YAAR,EAAlB;AAIA,UAAuB,QAAvB,KAAI,MAAOmF,QAAX,IAA+C,IAA/C,KAAmCA,OAAnC,CAAqD;AAC/CC,YAAAA,YAAQD,OAAQC,CAAAA,KAAhBA;AAGFhH,iBAAA,GADmB,QAArB,KAAI,MAAOgH,UAAX,IAAyC,CAAzC,GAAiCA,SAAjC,GACcpH,WADd,GAC4BoH,SAD5B,GAGcpH,WAFZ;AAKFqH,eAAA,GAAqC,QAA3B,KAAA,MAAOF,QAAQE,CAAAA,OAAf,GAAsCF,OAAQE,CAAAA,OAA9C,GAAwD7E,uBAAA,CAAwB1C,aAAxB,CAAlE;AATmD,OAArD;AAWEuH,eACA,GADU7E,uBAAA,CAAwB1C,aAAxB,CACV,EAAAM,SAAA,GAAYJ,WAAZ;AAZF;AAeIK,aAAAA,GAAiBD,SAAjBC,GAA6BgH,OAA7BhH;AACAiH,mBAAAA,GAAU,CACZ7I,GAAIqH,aAAA,EADQ,EAEF3F,QAFE,EAGGL,aAHH,EAIDM,SAJC,EAKZC,eAAgBA,OALJ,EAMZ7B,UAAW,CAAC,CANA,EAUZ,SAAmB,CAAA,CAVP,CAAV8I;AAaAlH,eAAJ,GAAgBJ,WAAhB,IAEEsH,aAAQ9I,CAAAA,SAGR,GAHoB4B,SAGpB,EAFAjD,IAAA,CAAK+C,UAAL,EAAiBoH,aAAjB,CAEA,EAAwB,IAAxB,KAAI1J,IAAA,CAAK0C,SAAL,CAAJ,IAAgCgH,aAAhC,KAA4C1J,IAAA,CAAKsC,UAAL,CAA5C,KAEMO,sBAAJ,GAEEU,iBAAA,EAFF,GAIEV,sBAJF,GAI2B,CAAA,CAI3B,EAAAK,kBAAA,CAAmBN,aAAnB,EAAkCJ,SAAlC,GAA8CJ,WAA9C,CAVF,CALF,KAkBEsH,aAAQ9I,CAAAA,SAUR,GAVoB6B,OAUpB,EATAlD,IAAA,CAAKmD,SAAL,EAAgBgH,aAAhB,CASA,EANE9H,aAAA,CAAc8H,aAAd,EAAuBtH,WAAvB,CAMF,EALEsH,aAAQ/G,CAAAA,QAKV,GALqB,CAAA,CAKrB,EAAKG,uBAAL,IAAiCU,gBAAjC,KACEV,uBACA;AAD0B,OAAA,CAC1B,EAAAC,mBAAA,CAAoBC,SAApB,CAFF,CA5BF,CAAA;AAkCA,aAAO0G,aAAP;AApEmE,KAqIrE;AACApK,WAAQqK,CAAAA,oBAAR,GA7BAA,QAA6B,EAAG;AAC9B,UAAIvH,cAAc9C,OAAQ8E,CAAAA,YAAR,EAAlB;AACAjC,mBAAA,CAAcC,WAAd,CAAA;AACA,UAAIwH,YAAY5J,IAAA,CAAK0C,SAAL,CAAhB;AACA,aAAOkH,SAAP,KAAqBjG,WAArB,IAAoD,IAApD,KAAoCA,WAApC,IAA0E,IAA1E,KAA4DiG,SAA5D,IAAyG,IAAzG,KAAkFA,SAAUrH,CAAAA,QAA5F,IAAiHqH,SAAUpH,CAAAA,SAA3H,IAAwIJ,WAAxI,IAAuJwH,SAAUnH,CAAAA,cAAjK,GAAkLkB,WAAYlB,CAAAA,cAA9L,IAAgNmB,iBAAA,EAAhN;AAJ8B,KA6BhC;AACAtE,WAAQuK,CAAAA,qBAAR,GA1KAA,QAA8B,CAACtH,QAAD,CAAW;AACvC,UAAIuH,sBAAsBpG,oBAA1B;AACA,aAAO,QAAS,EAAG;AAEjB,YAAID,wBAAwBC,oBAA5B;AACAA,4BAAA,GAAuBoG,mBAAvB;AAEA,WAAI;AACF,iBAAOvH,QAASwH,CAAAA,KAAT,CAAe,IAAf,EAAqBC,SAArB,CAAP;AADE,SAAJ,QAEU;AACRtG,8BAAA,GAAuBD,qBAAvB;AADQ;AAPO,OAAnB;AAFuC,KA0KzC;AAz0Bc,GAAX,CAAD,EAAA;AAfkH,CAApH;;",
"sources":["node_modules/scheduler/cjs/scheduler.development.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$scheduler$cjs$scheduler_development\"] = function(global,require,module,exports) {\n/** @license React v0.19.1\n * scheduler.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\nvar enableSchedulerDebugging = false;\nvar enableProfiling = true;\n\nvar requestHostCallback;\nvar requestHostTimeout;\nvar cancelHostTimeout;\nvar shouldYieldToHost;\nvar requestPaint;\n\nif ( // If Scheduler runs in a non-DOM environment, it falls back to a naive\n// implementation using setTimeout.\ntypeof window === 'undefined' || // Check if MessageChannel is supported, too.\ntypeof MessageChannel !== 'function') {\n  // If this accidentally gets imported in a non-browser environment, e.g. JavaScriptCore,\n  // fallback to a naive implementation.\n  var _callback = null;\n  var _timeoutID = null;\n\n  var _flushCallback = function () {\n    if (_callback !== null) {\n      try {\n        var currentTime = exports.unstable_now();\n        var hasRemainingTime = true;\n\n        _callback(hasRemainingTime, currentTime);\n\n        _callback = null;\n      } catch (e) {\n        setTimeout(_flushCallback, 0);\n        throw e;\n      }\n    }\n  };\n\n  var initialTime = Date.now();\n\n  exports.unstable_now = function () {\n    return Date.now() - initialTime;\n  };\n\n  requestHostCallback = function (cb) {\n    if (_callback !== null) {\n      // Protect against re-entrancy.\n      setTimeout(requestHostCallback, 0, cb);\n    } else {\n      _callback = cb;\n      setTimeout(_flushCallback, 0);\n    }\n  };\n\n  requestHostTimeout = function (cb, ms) {\n    _timeoutID = setTimeout(cb, ms);\n  };\n\n  cancelHostTimeout = function () {\n    clearTimeout(_timeoutID);\n  };\n\n  shouldYieldToHost = function () {\n    return false;\n  };\n\n  requestPaint = exports.unstable_forceFrameRate = function () {};\n} else {\n  // Capture local references to native APIs, in case a polyfill overrides them.\n  var performance = window.performance;\n  var _Date = window.Date;\n  var _setTimeout = window.setTimeout;\n  var _clearTimeout = window.clearTimeout;\n\n  if (typeof console !== 'undefined') {\n    // TODO: Scheduler no longer requires these methods to be polyfilled. But\n    // maybe we want to continue warning if they don't exist, to preserve the\n    // option to rely on it in the future?\n    var requestAnimationFrame = window.requestAnimationFrame;\n    var cancelAnimationFrame = window.cancelAnimationFrame; // TODO: Remove fb.me link\n\n    if (typeof requestAnimationFrame !== 'function') {\n      // Using console['error'] to evade Babel and ESLint\n      console['error'](\"This browser doesn't support requestAnimationFrame. \" + 'Make sure that you load a ' + 'polyfill in older browsers. https://fb.me/react-polyfills');\n    }\n\n    if (typeof cancelAnimationFrame !== 'function') {\n      // Using console['error'] to evade Babel and ESLint\n      console['error'](\"This browser doesn't support cancelAnimationFrame. \" + 'Make sure that you load a ' + 'polyfill in older browsers. https://fb.me/react-polyfills');\n    }\n  }\n\n  if (typeof performance === 'object' && typeof performance.now === 'function') {\n    exports.unstable_now = function () {\n      return performance.now();\n    };\n  } else {\n    var _initialTime = _Date.now();\n\n    exports.unstable_now = function () {\n      return _Date.now() - _initialTime;\n    };\n  }\n\n  var isMessageLoopRunning = false;\n  var scheduledHostCallback = null;\n  var taskTimeoutID = -1; // Scheduler periodically yields in case there is other work on the main\n  // thread, like user events. By default, it yields multiple times per frame.\n  // It does not attempt to align with frame boundaries, since most tasks don't\n  // need to be frame aligned; for those that do, use requestAnimationFrame.\n\n  var yieldInterval = 5;\n  var deadline = 0; // TODO: Make this configurable\n\n  {\n    // `isInputPending` is not available. Since we have no way of knowing if\n    // there's pending input, always yield at the end of the frame.\n    shouldYieldToHost = function () {\n      return exports.unstable_now() >= deadline;\n    }; // Since we yield every frame regardless, `requestPaint` has no effect.\n\n\n    requestPaint = function () {};\n  }\n\n  exports.unstable_forceFrameRate = function (fps) {\n    if (fps < 0 || fps > 125) {\n      // Using console['error'] to evade Babel and ESLint\n      console['error']('forceFrameRate takes a positive int between 0 and 125, ' + 'forcing framerates higher than 125 fps is not unsupported');\n      return;\n    }\n\n    if (fps > 0) {\n      yieldInterval = Math.floor(1000 / fps);\n    } else {\n      // reset the framerate\n      yieldInterval = 5;\n    }\n  };\n\n  var performWorkUntilDeadline = function () {\n    if (scheduledHostCallback !== null) {\n      var currentTime = exports.unstable_now(); // Yield after `yieldInterval` ms, regardless of where we are in the vsync\n      // cycle. This means there's always time remaining at the beginning of\n      // the message event.\n\n      deadline = currentTime + yieldInterval;\n      var hasTimeRemaining = true;\n\n      try {\n        var hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);\n\n        if (!hasMoreWork) {\n          isMessageLoopRunning = false;\n          scheduledHostCallback = null;\n        } else {\n          // If there's more work, schedule the next message event at the end\n          // of the preceding one.\n          port.postMessage(null);\n        }\n      } catch (error) {\n        // If a scheduler task throws, exit the current browser task so the\n        // error can be observed.\n        port.postMessage(null);\n        throw error;\n      }\n    } else {\n      isMessageLoopRunning = false;\n    } // Yielding to the browser will give it a chance to paint, so we can\n  };\n\n  var channel = new MessageChannel();\n  var port = channel.port2;\n  channel.port1.onmessage = performWorkUntilDeadline;\n\n  requestHostCallback = function (callback) {\n    scheduledHostCallback = callback;\n\n    if (!isMessageLoopRunning) {\n      isMessageLoopRunning = true;\n      port.postMessage(null);\n    }\n  };\n\n  requestHostTimeout = function (callback, ms) {\n    taskTimeoutID = _setTimeout(function () {\n      callback(exports.unstable_now());\n    }, ms);\n  };\n\n  cancelHostTimeout = function () {\n    _clearTimeout(taskTimeoutID);\n\n    taskTimeoutID = -1;\n  };\n}\n\nfunction push(heap, node) {\n  var index = heap.length;\n  heap.push(node);\n  siftUp(heap, node, index);\n}\nfunction peek(heap) {\n  var first = heap[0];\n  return first === undefined ? null : first;\n}\nfunction pop(heap) {\n  var first = heap[0];\n\n  if (first !== undefined) {\n    var last = heap.pop();\n\n    if (last !== first) {\n      heap[0] = last;\n      siftDown(heap, last, 0);\n    }\n\n    return first;\n  } else {\n    return null;\n  }\n}\n\nfunction siftUp(heap, node, i) {\n  var index = i;\n\n  while (true) {\n    var parentIndex = index - 1 >>> 1;\n    var parent = heap[parentIndex];\n\n    if (parent !== undefined && compare(parent, node) > 0) {\n      // The parent is larger. Swap positions.\n      heap[parentIndex] = node;\n      heap[index] = parent;\n      index = parentIndex;\n    } else {\n      // The parent is smaller. Exit.\n      return;\n    }\n  }\n}\n\nfunction siftDown(heap, node, i) {\n  var index = i;\n  var length = heap.length;\n\n  while (index < length) {\n    var leftIndex = (index + 1) * 2 - 1;\n    var left = heap[leftIndex];\n    var rightIndex = leftIndex + 1;\n    var right = heap[rightIndex]; // If the left or right node is smaller, swap with the smaller of those.\n\n    if (left !== undefined && compare(left, node) < 0) {\n      if (right !== undefined && compare(right, left) < 0) {\n        heap[index] = right;\n        heap[rightIndex] = node;\n        index = rightIndex;\n      } else {\n        heap[index] = left;\n        heap[leftIndex] = node;\n        index = leftIndex;\n      }\n    } else if (right !== undefined && compare(right, node) < 0) {\n      heap[index] = right;\n      heap[rightIndex] = node;\n      index = rightIndex;\n    } else {\n      // Neither child is smaller. Exit.\n      return;\n    }\n  }\n}\n\nfunction compare(a, b) {\n  // Compare sort index first, then task id.\n  var diff = a.sortIndex - b.sortIndex;\n  return diff !== 0 ? diff : a.id - b.id;\n}\n\n// TODO: Use symbols?\nvar NoPriority = 0;\nvar ImmediatePriority = 1;\nvar UserBlockingPriority = 2;\nvar NormalPriority = 3;\nvar LowPriority = 4;\nvar IdlePriority = 5;\n\nvar runIdCounter = 0;\nvar mainThreadIdCounter = 0;\nvar profilingStateSize = 4;\nvar sharedProfilingBuffer =  // $FlowFixMe Flow doesn't know about SharedArrayBuffer\ntypeof SharedArrayBuffer === 'function' ? new SharedArrayBuffer(profilingStateSize * Int32Array.BYTES_PER_ELEMENT) : // $FlowFixMe Flow doesn't know about ArrayBuffer\ntypeof ArrayBuffer === 'function' ? new ArrayBuffer(profilingStateSize * Int32Array.BYTES_PER_ELEMENT) : null // Don't crash the init path on IE9\n;\nvar profilingState =  sharedProfilingBuffer !== null ? new Int32Array(sharedProfilingBuffer) : []; // We can't read this but it helps save bytes for null checks\n\nvar PRIORITY = 0;\nvar CURRENT_TASK_ID = 1;\nvar CURRENT_RUN_ID = 2;\nvar QUEUE_SIZE = 3;\n\n{\n  profilingState[PRIORITY] = NoPriority; // This is maintained with a counter, because the size of the priority queue\n  // array might include canceled tasks.\n\n  profilingState[QUEUE_SIZE] = 0;\n  profilingState[CURRENT_TASK_ID] = 0;\n} // Bytes per element is 4\n\n\nvar INITIAL_EVENT_LOG_SIZE = 131072;\nvar MAX_EVENT_LOG_SIZE = 524288; // Equivalent to 2 megabytes\n\nvar eventLogSize = 0;\nvar eventLogBuffer = null;\nvar eventLog = null;\nvar eventLogIndex = 0;\nvar TaskStartEvent = 1;\nvar TaskCompleteEvent = 2;\nvar TaskErrorEvent = 3;\nvar TaskCancelEvent = 4;\nvar TaskRunEvent = 5;\nvar TaskYieldEvent = 6;\nvar SchedulerSuspendEvent = 7;\nvar SchedulerResumeEvent = 8;\n\nfunction logEvent(entries) {\n  if (eventLog !== null) {\n    var offset = eventLogIndex;\n    eventLogIndex += entries.length;\n\n    if (eventLogIndex + 1 > eventLogSize) {\n      eventLogSize *= 2;\n\n      if (eventLogSize > MAX_EVENT_LOG_SIZE) {\n        // Using console['error'] to evade Babel and ESLint\n        console['error'](\"Scheduler Profiling: Event log exceeded maximum size. Don't \" + 'forget to call `stopLoggingProfilingEvents()`.');\n        stopLoggingProfilingEvents();\n        return;\n      }\n\n      var newEventLog = new Int32Array(eventLogSize * 4);\n      newEventLog.set(eventLog);\n      eventLogBuffer = newEventLog.buffer;\n      eventLog = newEventLog;\n    }\n\n    eventLog.set(entries, offset);\n  }\n}\n\nfunction startLoggingProfilingEvents() {\n  eventLogSize = INITIAL_EVENT_LOG_SIZE;\n  eventLogBuffer = new ArrayBuffer(eventLogSize * 4);\n  eventLog = new Int32Array(eventLogBuffer);\n  eventLogIndex = 0;\n}\nfunction stopLoggingProfilingEvents() {\n  var buffer = eventLogBuffer;\n  eventLogSize = 0;\n  eventLogBuffer = null;\n  eventLog = null;\n  eventLogIndex = 0;\n  return buffer;\n}\nfunction markTaskStart(task, ms) {\n  {\n    profilingState[QUEUE_SIZE]++;\n\n    if (eventLog !== null) {\n      // performance.now returns a float, representing milliseconds. When the\n      // event is logged, it's coerced to an int. Convert to microseconds to\n      // maintain extra degrees of precision.\n      logEvent([TaskStartEvent, ms * 1000, task.id, task.priorityLevel]);\n    }\n  }\n}\nfunction markTaskCompleted(task, ms) {\n  {\n    profilingState[PRIORITY] = NoPriority;\n    profilingState[CURRENT_TASK_ID] = 0;\n    profilingState[QUEUE_SIZE]--;\n\n    if (eventLog !== null) {\n      logEvent([TaskCompleteEvent, ms * 1000, task.id]);\n    }\n  }\n}\nfunction markTaskCanceled(task, ms) {\n  {\n    profilingState[QUEUE_SIZE]--;\n\n    if (eventLog !== null) {\n      logEvent([TaskCancelEvent, ms * 1000, task.id]);\n    }\n  }\n}\nfunction markTaskErrored(task, ms) {\n  {\n    profilingState[PRIORITY] = NoPriority;\n    profilingState[CURRENT_TASK_ID] = 0;\n    profilingState[QUEUE_SIZE]--;\n\n    if (eventLog !== null) {\n      logEvent([TaskErrorEvent, ms * 1000, task.id]);\n    }\n  }\n}\nfunction markTaskRun(task, ms) {\n  {\n    runIdCounter++;\n    profilingState[PRIORITY] = task.priorityLevel;\n    profilingState[CURRENT_TASK_ID] = task.id;\n    profilingState[CURRENT_RUN_ID] = runIdCounter;\n\n    if (eventLog !== null) {\n      logEvent([TaskRunEvent, ms * 1000, task.id, runIdCounter]);\n    }\n  }\n}\nfunction markTaskYield(task, ms) {\n  {\n    profilingState[PRIORITY] = NoPriority;\n    profilingState[CURRENT_TASK_ID] = 0;\n    profilingState[CURRENT_RUN_ID] = 0;\n\n    if (eventLog !== null) {\n      logEvent([TaskYieldEvent, ms * 1000, task.id, runIdCounter]);\n    }\n  }\n}\nfunction markSchedulerSuspended(ms) {\n  {\n    mainThreadIdCounter++;\n\n    if (eventLog !== null) {\n      logEvent([SchedulerSuspendEvent, ms * 1000, mainThreadIdCounter]);\n    }\n  }\n}\nfunction markSchedulerUnsuspended(ms) {\n  {\n    if (eventLog !== null) {\n      logEvent([SchedulerResumeEvent, ms * 1000, mainThreadIdCounter]);\n    }\n  }\n}\n\n/* eslint-disable no-var */\n// Math.pow(2, 30) - 1\n// 0b111111111111111111111111111111\n\nvar maxSigned31BitInt = 1073741823; // Times out immediately\n\nvar IMMEDIATE_PRIORITY_TIMEOUT = -1; // Eventually times out\n\nvar USER_BLOCKING_PRIORITY = 250;\nvar NORMAL_PRIORITY_TIMEOUT = 5000;\nvar LOW_PRIORITY_TIMEOUT = 10000; // Never times out\n\nvar IDLE_PRIORITY = maxSigned31BitInt; // Tasks are stored on a min heap\n\nvar taskQueue = [];\nvar timerQueue = []; // Incrementing id counter. Used to maintain insertion order.\n\nvar taskIdCounter = 1; // Pausing the scheduler is useful for debugging.\nvar currentTask = null;\nvar currentPriorityLevel = NormalPriority; // This is set while performing work, to prevent re-entrancy.\n\nvar isPerformingWork = false;\nvar isHostCallbackScheduled = false;\nvar isHostTimeoutScheduled = false;\n\nfunction advanceTimers(currentTime) {\n  // Check for tasks that are no longer delayed and add them to the queue.\n  var timer = peek(timerQueue);\n\n  while (timer !== null) {\n    if (timer.callback === null) {\n      // Timer was cancelled.\n      pop(timerQueue);\n    } else if (timer.startTime <= currentTime) {\n      // Timer fired. Transfer to the task queue.\n      pop(timerQueue);\n      timer.sortIndex = timer.expirationTime;\n      push(taskQueue, timer);\n\n      {\n        markTaskStart(timer, currentTime);\n        timer.isQueued = true;\n      }\n    } else {\n      // Remaining timers are pending.\n      return;\n    }\n\n    timer = peek(timerQueue);\n  }\n}\n\nfunction handleTimeout(currentTime) {\n  isHostTimeoutScheduled = false;\n  advanceTimers(currentTime);\n\n  if (!isHostCallbackScheduled) {\n    if (peek(taskQueue) !== null) {\n      isHostCallbackScheduled = true;\n      requestHostCallback(flushWork);\n    } else {\n      var firstTimer = peek(timerQueue);\n\n      if (firstTimer !== null) {\n        requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);\n      }\n    }\n  }\n}\n\nfunction flushWork(hasTimeRemaining, initialTime) {\n  {\n    markSchedulerUnsuspended(initialTime);\n  } // We'll need a host callback the next time work is scheduled.\n\n\n  isHostCallbackScheduled = false;\n\n  if (isHostTimeoutScheduled) {\n    // We scheduled a timeout but it's no longer needed. Cancel it.\n    isHostTimeoutScheduled = false;\n    cancelHostTimeout();\n  }\n\n  isPerformingWork = true;\n  var previousPriorityLevel = currentPriorityLevel;\n\n  try {\n    if (enableProfiling) {\n      try {\n        return workLoop(hasTimeRemaining, initialTime);\n      } catch (error) {\n        if (currentTask !== null) {\n          var currentTime = exports.unstable_now();\n          markTaskErrored(currentTask, currentTime);\n          currentTask.isQueued = false;\n        }\n\n        throw error;\n      }\n    } else {\n      // No catch in prod codepath.\n      return workLoop(hasTimeRemaining, initialTime);\n    }\n  } finally {\n    currentTask = null;\n    currentPriorityLevel = previousPriorityLevel;\n    isPerformingWork = false;\n\n    {\n      var _currentTime = exports.unstable_now();\n\n      markSchedulerSuspended(_currentTime);\n    }\n  }\n}\n\nfunction workLoop(hasTimeRemaining, initialTime) {\n  var currentTime = initialTime;\n  advanceTimers(currentTime);\n  currentTask = peek(taskQueue);\n\n  while (currentTask !== null && !(enableSchedulerDebugging )) {\n    if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {\n      // This currentTask hasn't expired, and we've reached the deadline.\n      break;\n    }\n\n    var callback = currentTask.callback;\n\n    if (callback !== null) {\n      currentTask.callback = null;\n      currentPriorityLevel = currentTask.priorityLevel;\n      var didUserCallbackTimeout = currentTask.expirationTime <= currentTime;\n      markTaskRun(currentTask, currentTime);\n      var continuationCallback = callback(didUserCallbackTimeout);\n      currentTime = exports.unstable_now();\n\n      if (typeof continuationCallback === 'function') {\n        currentTask.callback = continuationCallback;\n        markTaskYield(currentTask, currentTime);\n      } else {\n        {\n          markTaskCompleted(currentTask, currentTime);\n          currentTask.isQueued = false;\n        }\n\n        if (currentTask === peek(taskQueue)) {\n          pop(taskQueue);\n        }\n      }\n\n      advanceTimers(currentTime);\n    } else {\n      pop(taskQueue);\n    }\n\n    currentTask = peek(taskQueue);\n  } // Return whether there's additional work\n\n\n  if (currentTask !== null) {\n    return true;\n  } else {\n    var firstTimer = peek(timerQueue);\n\n    if (firstTimer !== null) {\n      requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);\n    }\n\n    return false;\n  }\n}\n\nfunction unstable_runWithPriority(priorityLevel, eventHandler) {\n  switch (priorityLevel) {\n    case ImmediatePriority:\n    case UserBlockingPriority:\n    case NormalPriority:\n    case LowPriority:\n    case IdlePriority:\n      break;\n\n    default:\n      priorityLevel = NormalPriority;\n  }\n\n  var previousPriorityLevel = currentPriorityLevel;\n  currentPriorityLevel = priorityLevel;\n\n  try {\n    return eventHandler();\n  } finally {\n    currentPriorityLevel = previousPriorityLevel;\n  }\n}\n\nfunction unstable_next(eventHandler) {\n  var priorityLevel;\n\n  switch (currentPriorityLevel) {\n    case ImmediatePriority:\n    case UserBlockingPriority:\n    case NormalPriority:\n      // Shift down to normal priority\n      priorityLevel = NormalPriority;\n      break;\n\n    default:\n      // Anything lower than normal priority should remain at the current level.\n      priorityLevel = currentPriorityLevel;\n      break;\n  }\n\n  var previousPriorityLevel = currentPriorityLevel;\n  currentPriorityLevel = priorityLevel;\n\n  try {\n    return eventHandler();\n  } finally {\n    currentPriorityLevel = previousPriorityLevel;\n  }\n}\n\nfunction unstable_wrapCallback(callback) {\n  var parentPriorityLevel = currentPriorityLevel;\n  return function () {\n    // This is a fork of runWithPriority, inlined for performance.\n    var previousPriorityLevel = currentPriorityLevel;\n    currentPriorityLevel = parentPriorityLevel;\n\n    try {\n      return callback.apply(this, arguments);\n    } finally {\n      currentPriorityLevel = previousPriorityLevel;\n    }\n  };\n}\n\nfunction timeoutForPriorityLevel(priorityLevel) {\n  switch (priorityLevel) {\n    case ImmediatePriority:\n      return IMMEDIATE_PRIORITY_TIMEOUT;\n\n    case UserBlockingPriority:\n      return USER_BLOCKING_PRIORITY;\n\n    case IdlePriority:\n      return IDLE_PRIORITY;\n\n    case LowPriority:\n      return LOW_PRIORITY_TIMEOUT;\n\n    case NormalPriority:\n    default:\n      return NORMAL_PRIORITY_TIMEOUT;\n  }\n}\n\nfunction unstable_scheduleCallback(priorityLevel, callback, options) {\n  var currentTime = exports.unstable_now();\n  var startTime;\n  var timeout;\n\n  if (typeof options === 'object' && options !== null) {\n    var delay = options.delay;\n\n    if (typeof delay === 'number' && delay > 0) {\n      startTime = currentTime + delay;\n    } else {\n      startTime = currentTime;\n    }\n\n    timeout = typeof options.timeout === 'number' ? options.timeout : timeoutForPriorityLevel(priorityLevel);\n  } else {\n    timeout = timeoutForPriorityLevel(priorityLevel);\n    startTime = currentTime;\n  }\n\n  var expirationTime = startTime + timeout;\n  var newTask = {\n    id: taskIdCounter++,\n    callback: callback,\n    priorityLevel: priorityLevel,\n    startTime: startTime,\n    expirationTime: expirationTime,\n    sortIndex: -1\n  };\n\n  {\n    newTask.isQueued = false;\n  }\n\n  if (startTime > currentTime) {\n    // This is a delayed task.\n    newTask.sortIndex = startTime;\n    push(timerQueue, newTask);\n\n    if (peek(taskQueue) === null && newTask === peek(timerQueue)) {\n      // All tasks are delayed, and this is the task with the earliest delay.\n      if (isHostTimeoutScheduled) {\n        // Cancel an existing timeout.\n        cancelHostTimeout();\n      } else {\n        isHostTimeoutScheduled = true;\n      } // Schedule a timeout.\n\n\n      requestHostTimeout(handleTimeout, startTime - currentTime);\n    }\n  } else {\n    newTask.sortIndex = expirationTime;\n    push(taskQueue, newTask);\n\n    {\n      markTaskStart(newTask, currentTime);\n      newTask.isQueued = true;\n    } // Schedule a host callback, if needed. If we're already performing work,\n    // wait until the next time we yield.\n\n\n    if (!isHostCallbackScheduled && !isPerformingWork) {\n      isHostCallbackScheduled = true;\n      requestHostCallback(flushWork);\n    }\n  }\n\n  return newTask;\n}\n\nfunction unstable_pauseExecution() {\n}\n\nfunction unstable_continueExecution() {\n\n  if (!isHostCallbackScheduled && !isPerformingWork) {\n    isHostCallbackScheduled = true;\n    requestHostCallback(flushWork);\n  }\n}\n\nfunction unstable_getFirstCallbackNode() {\n  return peek(taskQueue);\n}\n\nfunction unstable_cancelCallback(task) {\n  {\n    if (task.isQueued) {\n      var currentTime = exports.unstable_now();\n      markTaskCanceled(task, currentTime);\n      task.isQueued = false;\n    }\n  } // Null out the callback to indicate the task has been canceled. (Can't\n  // remove from the queue because you can't remove arbitrary nodes from an\n  // array based heap, only the first one.)\n\n\n  task.callback = null;\n}\n\nfunction unstable_getCurrentPriorityLevel() {\n  return currentPriorityLevel;\n}\n\nfunction unstable_shouldYield() {\n  var currentTime = exports.unstable_now();\n  advanceTimers(currentTime);\n  var firstTask = peek(taskQueue);\n  return firstTask !== currentTask && currentTask !== null && firstTask !== null && firstTask.callback !== null && firstTask.startTime <= currentTime && firstTask.expirationTime < currentTask.expirationTime || shouldYieldToHost();\n}\n\nvar unstable_requestPaint = requestPaint;\nvar unstable_Profiling =  {\n  startLoggingProfilingEvents: startLoggingProfilingEvents,\n  stopLoggingProfilingEvents: stopLoggingProfilingEvents,\n  sharedProfilingBuffer: sharedProfilingBuffer\n} ;\n\nexports.unstable_IdlePriority = IdlePriority;\nexports.unstable_ImmediatePriority = ImmediatePriority;\nexports.unstable_LowPriority = LowPriority;\nexports.unstable_NormalPriority = NormalPriority;\nexports.unstable_Profiling = unstable_Profiling;\nexports.unstable_UserBlockingPriority = UserBlockingPriority;\nexports.unstable_cancelCallback = unstable_cancelCallback;\nexports.unstable_continueExecution = unstable_continueExecution;\nexports.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;\nexports.unstable_getFirstCallbackNode = unstable_getFirstCallbackNode;\nexports.unstable_next = unstable_next;\nexports.unstable_pauseExecution = unstable_pauseExecution;\nexports.unstable_requestPaint = unstable_requestPaint;\nexports.unstable_runWithPriority = unstable_runWithPriority;\nexports.unstable_scheduleCallback = unstable_scheduleCallback;\nexports.unstable_shouldYield = unstable_shouldYield;\nexports.unstable_wrapCallback = unstable_wrapCallback;\n  })();\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","push","heap","node","index","length","parentIndex","parent","undefined","compare","peek","first","pop","last","i","leftIndex","left","rightIndex","right","a","b","diff","sortIndex","id","logEvent","entries","eventLog","offset","eventLogIndex","eventLogSize","MAX_EVENT_LOG_SIZE","console","stopLoggingProfilingEvents","newEventLog","Int32Array","set","eventLogBuffer","buffer","markTaskStart","task","ms","profilingState","QUEUE_SIZE","TaskStartEvent","priorityLevel","advanceTimers","currentTime","timer","timerQueue","callback","startTime","expirationTime","taskQueue","isQueued","handleTimeout","isHostTimeoutScheduled","isHostCallbackScheduled","requestHostCallback","flushWork","firstTimer","requestHostTimeout","hasTimeRemaining","initialTime","SchedulerResumeEvent","mainThreadIdCounter","cancelHostTimeout","isPerformingWork","previousPriorityLevel","currentPriorityLevel","currentTask","shouldYieldToHost","didUserCallbackTimeout","runIdCounter","PRIORITY","CURRENT_TASK_ID","CURRENT_RUN_ID","TaskRunEvent","continuationCallback","unstable_now","NoPriority","TaskYieldEvent","TaskCompleteEvent","error","TaskErrorEvent","_currentTime","SchedulerSuspendEvent","timeoutForPriorityLevel","ImmediatePriority","IMMEDIATE_PRIORITY_TIMEOUT","UserBlockingPriority","USER_BLOCKING_PRIORITY","IdlePriority","maxSigned31BitInt","LowPriority","LOW_PRIORITY_TIMEOUT","NORMAL_PRIORITY_TIMEOUT","window","MessageChannel","_callback","_timeoutID","_flushCallback","hasRemainingTime","e","setTimeout","Date","now","exports.unstable_now","cb","clearTimeout","requestPaint","unstable_forceFrameRate","exports.unstable_forceFrameRate","performance","_Date","_setTimeout","_clearTimeout","cancelAnimationFrame","requestAnimationFrame","_initialTime","isMessageLoopRunning","scheduledHostCallback","taskTimeoutID","yieldInterval","deadline","fps","Math","floor","channel","port","port2","port1","onmessage","performWorkUntilDeadline","hasMoreWork","postMessage","sharedProfilingBuffer","SharedArrayBuffer","profilingStateSize","BYTES_PER_ELEMENT","ArrayBuffer","taskIdCounter","NormalPriority","unstable_Profiling","startLoggingProfilingEvents","INITIAL_EVENT_LOG_SIZE","unstable_IdlePriority","unstable_ImmediatePriority","unstable_LowPriority","unstable_NormalPriority","unstable_UserBlockingPriority","unstable_cancelCallback","TaskCancelEvent","unstable_continueExecution","unstable_getCurrentPriorityLevel","unstable_getFirstCallbackNode","unstable_next","eventHandler","unstable_pauseExecution","unstable_requestPaint","unstable_runWithPriority","unstable_scheduleCallback","options","delay","timeout","newTask","unstable_shouldYield","firstTask","unstable_wrapCallback","parentPriorityLevel","apply","arguments"]
}
